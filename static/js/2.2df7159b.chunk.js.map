{"version":3,"sources":["apis/contractHelps/tokenContract.js","apis/contractHelps/institutionContract.js","apis/helpers/web3Helpers.js","apis/helpers/getWeb3.js"],"names":["tokenContract","_tokenContract","apply","this","arguments","_callee","contract","_ref","currentProvider","accounts","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","TruffleContract","TokenContract","getProviderAndAccounts","sent","setProvider","defaults","from","abrupt","deployed","stop","getTokenBalance","_getTokenBalance","_callee2","_context2","getAccounts","balanceOf","buyScroll","_x","_x2","_buyScroll","_callee3","scrollType","price","institution","_context3","institutionContract","address","web3","toWei","bet","_x3","_x4","_x5","_x6","_x7","_x8","_bet","_callee4","betAddress","betType","value","issueNo","nums","amounts","_context4","transfer","_x9","_transfer","_callee5","transferParam","_context5","getWeb3","toAccount","amount","_institutionContract","InstitutionContract","batchDrawStaticProfit","_batchDrawStaticProfit","releaseScroll","_releaseScroll","task","id","renewScroll","_renewScroll","_getAccounts","eth","getAccountsAsync","promisify","getBalance","_getBalance","_ref2","getBalanceAsync","_getProviderAndAccounts","_ref3","web3Instance","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","web3Provider","networkVersion","window","ethereum","enable","t0","Error","console","log","Web3","providers","HttpProvider","alert","getLang","WEB3","NO_WEB3_PROVIDER","WRONG_NETWORK"],"mappings":"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","file":"static/js/2.2df7159b.chunk.js","sourcesContent":["import TruffleContract from 'truffle-contract';\r\n\r\nimport TokenContract from '../contracts/CupcakeToken.json';\r\nimport { getProviderAndAccounts, getAccounts } from '../helpers/web3Helpers';\r\nimport { institutionContract } from './institutionContract';\r\nimport { getWeb3 } from \"../helpers/getWeb3\";\r\n\r\nexport async function tokenContract() {\r\n    const contract = TruffleContract(TokenContract);\r\n    const { currentProvider, accounts } = await getProviderAndAccounts();\r\n    contract.setProvider(currentProvider);\r\n    contract.defaults({from: accounts[0]});\r\n    return contract.deployed();\r\n}\r\n\r\nexport async function getTokenBalance() {\r\n    const accounts = await getAccounts();\r\n    const contract = await tokenContract();\r\n    return contract.balanceOf(accounts[0]);\r\n}\r\n\r\nexport async function buyScroll(scrollType, price) {\r\n    const contract = await tokenContract();\r\n    const institution = await institutionContract();\r\n    return contract.buyScroll(institution.address, scrollType, web3.toWei(price, 'ether'), 1, web3.toWei(price, 'ether'));\r\n}\r\n\r\nexport async function bet(betAddress, betType, value, issueNo, nums, amounts) {\r\n    const contract = await tokenContract();\r\n    const institution = await institutionContract();\r\n    return contract.bet(\r\n        betAddress, \r\n        institution.address, \r\n        betType, \r\n        value, \r\n        issueNo, \r\n        nums, \r\n        amounts,\r\n    );\r\n}\r\n\r\nexport async function transfer(transferParam) {\r\n    const contract = await tokenContract();\r\n    const web3 = await getWeb3();\r\n    return contract.transfer(transferParam.toAccount, web3.toWei(transferParam.amount,'ether'));\r\n}\r\n","import TruffleContract from 'truffle-contract';\r\nimport InstitutionContract from '../contracts/Institution.json';\r\nimport { getProviderAndAccounts } from '../helpers/web3Helpers';\r\n\r\nexport async function institutionContract() {\r\n    const contract = TruffleContract(InstitutionContract);\r\n    const { currentProvider, accounts } = await getProviderAndAccounts();\r\n    contract.setProvider(currentProvider);\r\n    contract.defaults({from: accounts[0]});\r\n    return contract.deployed();\r\n}\r\n\r\nexport async function batchDrawStaticProfit() {\r\n    const contract = await institutionContract();\r\n    return contract.batchDrawStaticProfit();\r\n}\r\n\r\nexport async function releaseScroll(task) {\r\n    const contract = await institutionContract();\r\n    return contract.releaseScroll(task.scrollType, task.id);\r\n}\r\n\r\nexport async function renewScroll(task) {\r\n    const contract = await institutionContract();\r\n    return contract.renewScroll(task.scrollType, task.id);\r\n}\r\n\r\n\r\n","import { promisify } from 'util';\r\nimport { getWeb3 } from \"./getWeb3\";\r\n\r\nexport async function getAccounts() {\r\n    const { eth } = await getWeb3();\r\n    const getAccountsAsync = promisify(eth.getAccounts);\r\n    return getAccountsAsync();\r\n}\r\n\r\nexport async function getBalance() {\r\n    const { eth } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    const getBalanceAsync = promisify(eth.getBalance);\r\n    return getBalanceAsync(accounts[0]);\r\n}\r\n\r\nexport async function getProviderAndAccounts() {\r\n    const { currentProvider } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    return {currentProvider, accounts};\r\n}\r\n\r\nexport async function estimateGas(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const estimateGasAsync = promisify(eth.estimateGas);\r\n    return estimateGasAsync(transactionObject);\r\n}\r\n\r\nexport async function sendTransaction(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const sendTransactionAsync = promisify(eth.sendTransaction);\r\n    return sendTransactionAsync(transactionObject);\r\n}","import Web3 from 'web3'\r\nimport {getLang} from \"@web3game/lang\";\r\n\r\nlet web3Instance = null;\r\nconst thunderTestNetwork = \"18\";\r\nconst thunderMainNetwork = \"108\";\r\n\r\nexport const getWeb3 = async () => {\r\n  if (web3Instance) {  \r\n    return web3Instance;\r\n  }\r\n\r\n  var web3 = window.web3;\r\n  var web3Provider;\r\n\r\n  if (window.ethereum) {\r\n    web3Provider = window.ethereum;\r\n\r\n    try {\r\n      // 请求用户账号授权\r\n      await window.ethereum.enable();\r\n    } catch (error) {\r\n      // 用户拒绝了访问\r\n      throw new Error(\"User denied account access.\");\r\n    }\r\n  }\r\n  // 老版 MetaMask\r\n  else if (typeof web3 !== 'undefined') {\r\n    web3Provider = web3.currentProvider;\r\n    console.log('Injected web3 detected.');\r\n  } else {\r\n    // Fallback to localhost if no web3 injection. We've configured this to\r\n    // use the development console's port by default.\r\n    web3Provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\r\n    // throw new Error('No web3 instance injected, using Local web3.');\r\n    alert(getLang().WEB3.NO_WEB3_PROVIDER);\r\n  }\r\n\r\n  const networkVersion = web3Provider.networkVersion;\r\n  if(networkVersion !== thunderTestNetwork && networkVersion !== thunderMainNetwork) {\r\n    alert(getLang().WEB3.WRONG_NETWORK);\r\n  }\r\n\r\n  web3 = new Web3(web3Provider);\r\n\r\n  web3Instance = web3;\r\n\r\n  return web3;\r\n};\r\n"],"sourceRoot":""}