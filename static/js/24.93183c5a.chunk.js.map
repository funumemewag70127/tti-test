{"version":3,"sources":["apis/common/CommonAPIReal.ts"],"names":["CommonAPIReal","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","_getWeb2","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","abrupt","getWeb3","stop","apply","arguments","_getTTBalance","_callee2","web3","tb","ttBalance","_context2","sent","getBalance","fromWei","toNumber","_getTokenBalance2","_callee3","tokenBalance","_context3","getTokenBalance","_getAccount","_callee4","_context4","getAccounts","_submitGame","_callee5","params","_context5","console","log","lt","money","Error","bet","betAddress","betType","toWei","issueNo","nums","amounts","_x","__webpack_exports__"],"mappings":"kNAKaA,EAAb,oBAAAA,IAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAH,GAAA,OAAAC,OAAAG,EAAA,EAAAH,CAAAD,EAAA,EAAAK,IAAA,UAAAC,MAAA,eAAAC,EAAAN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAA,SAAAC,IAAA,OAAAH,EAAAC,EAAAG,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAG,OAAA,SAGeC,eAHf,wBAAAJ,EAAAK,SAAAP,MAAA,yBAAAL,EAAAa,MAAAjB,KAAAkB,YAAA,KAAAhB,IAAA,eAAAC,MAAA,eAAAgB,EAAArB,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAA,SAAAY,IAAA,IAAAC,EAAAC,EAAAC,EAAA,OAAAjB,EAAAC,EAAAG,KAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAX,MAAA,cAAAW,EAAAX,KAAA,EAO2BE,cAP3B,cAOcM,EAPdG,EAAAC,KAAAD,EAAAX,KAAA,EAQyBa,cARzB,cAQcJ,EARdE,EAAAC,KAScF,EAAYF,EAAKM,QAAQL,EAAGM,WAAY,SATtDJ,EAAAV,OAAA,SAUeS,GAVf,wBAAAC,EAAAR,SAAAI,MAAA,yBAAAD,EAAAF,MAAAjB,KAAAkB,YAAA,KAAAhB,IAAA,kBAAAC,MAAA,eAAA0B,EAAA/B,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAA,SAAAsB,IAAA,IAAAT,EAAAC,EAAAS,EAAA,OAAAzB,EAAAC,EAAAG,KAAA,SAAAsB,GAAA,cAAAA,EAAApB,KAAAoB,EAAAnB,MAAA,cAAAmB,EAAAnB,KAAA,EAc2BE,cAd3B,cAccM,EAddW,EAAAP,KAAAO,EAAAnB,KAAA,EAeyBoB,cAfzB,cAecX,EAfdU,EAAAP,KAgBcM,EAAeV,EAAKM,QAAQL,EAAGM,WAAY,SAhBzDI,EAAAlB,OAAA,SAiBeiB,GAjBf,wBAAAC,EAAAhB,SAAAc,MAAA,yBAAAD,EAAAZ,MAAAjB,KAAAkB,YAAA,KAAAhB,IAAA,aAAAC,MAAA,eAAA+B,EAAApC,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAA,SAAA2B,IAAA,OAAA7B,EAAAC,EAAAG,KAAA,SAAA0B,GAAA,cAAAA,EAAAxB,KAAAwB,EAAAvB,MAAA,cAAAuB,EAAAtB,OAAA,SAqBeuB,eArBf,wBAAAD,EAAApB,SAAAmB,MAAA,yBAAAD,EAAAjB,MAAAjB,KAAAkB,YAAA,KAAAhB,IAAA,aAAAC,MAAA,eAAAmC,EAAAxC,OAAAO,EAAA,EAAAP,CAAAQ,EAAAC,EAAAC,KAAA,SAAA+B,EAwB4BC,GAxB5B,IAAAnB,EAAA,OAAAf,EAAAC,EAAAG,KAAA,SAAA+B,GAAA,cAAAA,EAAA7B,KAAA6B,EAAA5B,MAAA,cAyBQ6B,QAAQC,IAAIH,GAzBpBC,EAAA5B,KAAA,EA0B2BE,cA1B3B,cA0BcM,EA1BdoB,EAAAhB,KAAAgB,EAAA5B,KAAA,EA2BmCoB,cA3BnC,WAAAQ,EAAAhB,KA4ByBmB,GAAGJ,EAAOK,OA5BnC,CAAAJ,EAAA5B,KAAA,cA6BkB,IAAIiC,MAAM,4BA7B5B,cAAAL,EAAA3B,OAAA,SA+BeiC,YAAIP,EAAOQ,WAAYR,EAAOS,QAAS5B,EAAK6B,MAAMV,EAAOK,MAAO,SAAUL,EAAOW,QAASX,EAAOY,KAAMZ,EAAOa,UA/B7H,yBAAAZ,EAAAzB,SAAAuB,MAAA,gBAAAe,GAAA,OAAAhB,EAAArB,MAAAjB,KAAAkB,YAAA,MAAArB,EAAA,GAoCe0D,EAAA,YAAI1D","file":"static/js/24.93183c5a.chunk.js","sourcesContent":["import { CommonAPI } from \"./CommonAPI\";\r\nimport { getAccounts, getBalance } from \"../helpers/web3Helpers\";\r\nimport { getTokenBalance, bet } from \"../contractHelps/tokenContract\";\r\nimport { getWeb3 } from \"../helpers/getWeb3\";\r\n\r\nexport class CommonAPIReal implements CommonAPI {\r\n\r\n    public async getWeb3(): Promise<any> {\r\n        return getWeb3();\r\n    }\r\n\r\n    async getTTBalance(): Promise<number> {\r\n        const web3 = await getWeb3();\r\n        const tb = await getBalance();\r\n        const ttBalance = web3.fromWei(tb.toNumber(), 'ether');\r\n        return ttBalance;\r\n    }\r\n\r\n    async getTokenBalance(): Promise<number> {\r\n        const web3 = await getWeb3();\r\n        const tb = await getTokenBalance();\r\n        const tokenBalance = web3.fromWei(tb.toNumber(), 'ether');\r\n        return tokenBalance;\r\n    }\r\n\r\n    public async getAccount(): Promise<string[]> {\r\n        return getAccounts();\r\n    }\r\n\r\n    public async submitGame(params: any): Promise<void> {\r\n        console.log(params);\r\n        const web3 = await getWeb3();\r\n        const tokenBalance = await getTokenBalance();\r\n        if (tokenBalance.lt(params.money)) {\r\n            throw new Error('余额不足');\r\n        }\r\n        return bet(params.betAddress, params.betType, web3.toWei(params.money, 'ether'), params.issueNo, params.nums, params.amounts);\r\n    }\r\n\r\n}\r\n\r\nexport default new CommonAPIReal();\r\n"],"sourceRoot":""}