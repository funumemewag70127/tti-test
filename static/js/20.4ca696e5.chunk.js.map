{"version":3,"sources":["apis/common/CommonAPIReal.ts","apis/helpers/getWeb3.js","apis/helpers/web3Helpers.js","apis/contractHelps/institutionContract.js","apis/contractHelps/tokenContract.js"],"names":["CommonAPIReal","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","_getWeb2","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","abrupt","getWeb3","stop","apply","arguments","_getTTBalance","_callee2","web3","tb","ttBalance","_context2","sent","getBalance","fromWei","toNumber","_getTokenBalance2","_callee3","tokenBalance","_context3","getTokenBalance","_getAccount","_callee4","_context4","getAccounts","_submitGame","_callee5","params","_context5","console","log","lt","money","Error","getLang","TOKEN_BALANCE_NOT_ENOUGH","bet","betAddress","betType","toWei","issueNo","nums","amounts","_x","__webpack_exports__","web3Instance","_ref","context","web3Provider","window","global","ethereum","enable","t0","currentProvider","Web3","providers","HttpProvider","WEB3","NO_WEB3_PROVIDER","_getAccounts","eth","getAccountsAsync","promisify","_getBalance","_ref2","accounts","getBalanceAsync","getProviderAndAccounts","_getProviderAndAccounts","_ref3","estimateGas","_estimateGas","transactionObject","_ref4","estimateGasAsync","sendTransaction","_x2","_sendTransaction","_ref5","gas","sendTransactionAsync","institutionContract","_institutionContract","contract","TruffleContract","InstitutionContract","setProvider","defaults","from","deployed","batchDrawStaticProfit","_batchDrawStaticProfit","releaseScroll","_releaseScroll","task","scrollType","id","renewScroll","_renewScroll","tokenContract","_tokenContract","TokenContract","_getTokenBalance","balanceOf","buyScroll","_buyScroll","price","institution","address","_x3","_x4","_x5","_x6","_x7","_x8","_bet","transfer","_x9","_transfer","transferParam","type","to","toAccount","amount"],"mappings":"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","file":"static/js/20.4ca696e5.chunk.js","sourcesContent":["import {getLang} from \"@web3game/lang\";\r\nimport { CommonAPI } from \"./CommonAPI\";\r\nimport { getAccounts, getBalance } from \"../helpers/web3Helpers\";\r\nimport { getTokenBalance, bet } from \"../contractHelps/tokenContract\";\r\nimport { getWeb3 } from \"../helpers/getWeb3\";\r\n\r\nexport class CommonAPIReal implements CommonAPI {\r\n\r\n    public async getWeb3(): Promise<any> {\r\n        return getWeb3();\r\n    }\r\n\r\n    async getTTBalance(): Promise<number> {\r\n        const web3 = await getWeb3();\r\n        const tb = await getBalance();\r\n        const ttBalance = web3.fromWei(tb.toNumber(), 'ether');\r\n        return ttBalance;\r\n    }\r\n\r\n    async getTokenBalance(): Promise<number> {\r\n        const web3 = await getWeb3();\r\n        const tb = await getTokenBalance();\r\n        const tokenBalance = web3.fromWei(tb.toNumber(), 'ether');\r\n        return tokenBalance;\r\n    }\r\n\r\n    public async getAccount(): Promise<string[]> {\r\n        return getAccounts();\r\n    }\r\n\r\n    public async submitGame(params: any): Promise<void> {\r\n        console.log(params);\r\n        const web3 = await getWeb3();\r\n        const tokenBalance = await getTokenBalance();\r\n        if (tokenBalance.lt(params.money)) {\r\n            throw new Error(getLang().TOKEN_BALANCE_NOT_ENOUGH);\r\n        }\r\n        return bet(params.betAddress, params.betType, web3.toWei(params.money, 'ether'), params.issueNo, params.nums, params.amounts);\r\n    }\r\n\r\n}\r\n\r\nexport default new CommonAPIReal();\r\n","import Web3 from 'web3'\r\nimport {getLang} from \"@web3game/lang\";\r\n\r\nlet web3Instance = null;\r\n// const thunderTestNetwork = \"18\";\r\n// const thunderMainNetwork = \"108\";\r\n\r\nexport const getWeb3 = async () => {\r\n  if (web3Instance) {  \r\n    return web3Instance;\r\n  }\r\n  const context = (typeof window === 'object') ? window : global;\r\n  var web3Provider;\r\n\r\n  if (context.ethereum) {\r\n    web3Provider = context.ethereum;\r\n\r\n    try {\r\n      // 请求用户账号授权\r\n      await context.ethereum.enable();\r\n    } catch (error) {\r\n      // 用户拒绝了访问\r\n      throw new Error(\"User denied account access.\");\r\n    }\r\n  }\r\n  // 老版 MetaMask\r\n  else if (typeof context.web3 !== 'undefined') {\r\n    web3Provider = context.web3.currentProvider;\r\n    console.log('Injected web3 detected.');\r\n  } else {\r\n    // Fallback to localhost if no web3 injection. We've configured this to\r\n    // use the development console's port by default.\r\n    web3Provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\r\n    // throw new Error('No web3 instance injected, using Local web3.');\r\n    throw new Error(getLang().WEB3.NO_WEB3_PROVIDER);\r\n  }\r\n  // throw new Error(web3Provider.isTrust);\r\n  // // const networkVersion = web3Provider.networkVersion;\r\n  // // if(networkVersion !== thunderTestNetwork && networkVersion !== thunderMainNetwork) {\r\n  // //   throw new Error(getLang().WEB3.WRONG_NETWORK);\r\n  // // }\r\n\r\n  web3 = new Web3(web3Provider);\r\n\r\n  web3Instance = web3;\r\n\r\n  return web3;\r\n};\r\n","import { promisify } from 'util';\r\nimport { getWeb3 } from \"./getWeb3\";\r\n\r\nexport async function getAccounts() {\r\n    const { eth } = await getWeb3();\r\n    const getAccountsAsync = promisify(eth.getAccounts);\r\n    return getAccountsAsync();\r\n}\r\n\r\nexport async function getBalance() {\r\n    const { eth } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    const getBalanceAsync = promisify(eth.getBalance);\r\n    return getBalanceAsync(accounts[0]);\r\n}\r\n\r\nexport async function getProviderAndAccounts() {\r\n    const { currentProvider } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    return {currentProvider, accounts};\r\n}\r\n\r\nexport async function estimateGas(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const estimateGasAsync = promisify(eth.estimateGas);\r\n    return estimateGasAsync(transactionObject);\r\n}\r\n\r\nexport async function sendTransaction(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const gas = await estimateGas(transactionObject);\r\n    transactionObject.gas = gas;\r\n    const sendTransactionAsync = promisify(eth.sendTransaction);\r\n    return sendTransactionAsync(transactionObject);\r\n}","import TruffleContract from 'truffle-contract';\r\nimport InstitutionContract from '../contracts/Institution.json';\r\nimport { getProviderAndAccounts } from '../helpers/web3Helpers';\r\n\r\nexport async function institutionContract() {\r\n    const contract = TruffleContract(InstitutionContract);\r\n    const { currentProvider, accounts } = await getProviderAndAccounts();\r\n    contract.setProvider(currentProvider);\r\n    contract.defaults({from: accounts[0]});\r\n    return contract.deployed();\r\n}\r\n\r\nexport async function batchDrawStaticProfit() {\r\n    const contract = await institutionContract();\r\n    return contract.batchDrawStaticProfit();\r\n}\r\n\r\nexport async function releaseScroll(task) {\r\n    const contract = await institutionContract();\r\n    return contract.releaseScroll(task.scrollType, task.id);\r\n}\r\n\r\nexport async function renewScroll(task) {\r\n    const contract = await institutionContract();\r\n    return contract.renewScroll(task.scrollType, task.id);\r\n}\r\n\r\n\r\n","import TruffleContract from 'truffle-contract';\r\n\r\nimport TokenContract from '../contracts/CupcakeToken.json';\r\nimport { getProviderAndAccounts, getAccounts, sendTransaction } from '../helpers/web3Helpers';\r\nimport { institutionContract } from './institutionContract';\r\nimport { getWeb3 } from \"../helpers/getWeb3\";\r\n\r\nexport async function tokenContract() {\r\n    const contract = TruffleContract(TokenContract);\r\n    const { currentProvider, accounts } = await getProviderAndAccounts();\r\n    contract.setProvider(currentProvider);\r\n    contract.defaults({from: accounts[0]});\r\n    return contract.deployed();\r\n}\r\n\r\nexport async function getTokenBalance() {\r\n    const accounts = await getAccounts();\r\n    const contract = await tokenContract();\r\n    return contract.balanceOf(accounts[0]);\r\n}\r\n\r\nexport async function buyScroll(scrollType, price) {\r\n    const contract = await tokenContract();\r\n    const institution = await institutionContract();\r\n    return contract.buyScroll(institution.address, scrollType, web3.toWei(price, 'ether'), 1, web3.toWei(price, 'ether'));\r\n}\r\n\r\nexport async function bet(betAddress, betType, value, issueNo, nums, amounts) {\r\n    const contract = await tokenContract();\r\n    const institution = await institutionContract();\r\n    return contract.bet(\r\n        betAddress, \r\n        institution.address, \r\n        betType, \r\n        value, \r\n        issueNo, \r\n        nums, \r\n        amounts,\r\n    );\r\n}\r\n\r\nexport async function transfer(transferParam) {\r\n    const web3 = await getWeb3();\r\n    const { accounts } = await getProviderAndAccounts();\r\n    if(transferParam.type === 'TT') {\r\n        var transactionObject = {};\r\n        transactionObject.from = accounts[0];\r\n        transactionObject.to = transferParam.toAccount;\r\n        transactionObject.value = web3.toWei(transferParam.amount,'ether');\r\n        return sendTransaction(transactionObject);\r\n    }\r\n    const contract = await tokenContract();\r\n    return contract.transfer(transferParam.toAccount, web3.toWei(transferParam.amount,'ether'));\r\n}\r\n"],"sourceRoot":""}