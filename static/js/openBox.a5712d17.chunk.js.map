{"version":3,"sources":["common/components/layouts/HistoryButton.tsx","common/components/layouts/QuitGameButton.tsx","common/components/popups/PopupRenderer.tsx","common/components/popups/PopupManger.tsx","common/components/layouts/GameLayout.tsx","common/components/MoneySelector.tsx","common/components/Scene.tsx","common/components/index.ts","common/components/HistoryListPopup.tsx","common/components/PlayerInfo.tsx","typings/openBox/index.ts","openBox/core/openBoxConstants.ts","common/utils/NavigatorEvents.ts","common/utils/navigatorHelper.ts","common/utils/EventEmitter.ts","openBox/OpenBoxGame.tsx","common/styles/images/beijingtu.png","common/components/AuthForm.tsx","apis/openbox/getOpenBoxAPI.ts","common/components/viewPort/ViewPortSizeProvider.tsx","openBox/statics/sounds/oh_no.mp3","openBox/statics/sounds/add-score.mp3","openBox/statics/sounds/result.wav","openBox/components/GameResultPopup.tsx","openBox/core/functions/getOpenBoxMoneyList.ts","common/utils/watchAccountChange.ts","openBox/stores/HistoryStore.ts","openBox/eventBus/openBoxEvents.ts","openBox/stores/GamePlayerStore.ts","openBox/stores/index.ts","openBox/components/Box.tsx","openBox/components/BoxGrid.tsx","openBox/components/BoxGameDesk.tsx","common/components/viewPort/getElStyle.ts","openBox/core/gameHelper.ts","common/components/viewPort/viewPortSizeHelper.tsx","common/components/popups/Popup.tsx","common/components/Table.tsx"],"names":["HistoryButton","_ref","onShowHistory","buttonSize","useVPStyle","paddingTop","fontSize","width","height","react_default","a","createElement","className","onClick","type","style","getLang","OPEN_BOX_PAGE","HISTORY","React","memo","QuitGameButtonPure","onQuitPlayer","onQuitGame","isPlayerActive","BACK","defaultProps","QuitGameButton","inject","_ref2","gameUIStore","scene","GameUIScene","gamePlayer","PopupRenderer","_ref3","name","isActive","visiblePopup","children","PopupManagerContext","createContext","PopupManager","_ref$popups","popups","_usePopupManager","popupsList","_useState","useState","_useState2","Object","slicedToArray","setPopups","showPopup","popup","concat","toConsumableArray","closePopup","filter","p","usePopupManager","popupList","Provider","value","react","map","renderer","key","GameLayout","_useContext","useContext","ViewPortSizeContext","adjustedHeight","applicationSize","adjustedWidth","gameContentStyle","src","BackgroundUrl","alt","MoneySelector","moneyList","onSelect","money","text","Scene","__webpack_require__","d","__webpack_exports__","HistoryListPopup","PlayerInfo","module","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","mobx_react__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_2__","moment__WEBPACK_IMPORTED_MODULE_2___default","_web3game_lang__WEBPACK_IMPORTED_MODULE_3__","_popups_Popup__WEBPACK_IMPORTED_MODULE_4__","_Table__WEBPACK_IMPORTED_MODULE_5__","_utils_compose__WEBPACK_IMPORTED_MODULE_6__","compose","historyStore","displayList","onPlayGame","tHeader","HISTORY_NO","AMOUNT","HISTORY_DATE","renderListItem","useCallback","item","id","issueNo","moment","time","format","listContent","title","tHead","bodyClassName","imageIndex","_ref$isActive","score","pos","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isInPosition","setIsInPosition","useEffect","userImageSize","userScoreSize","top","left","normalPosition","positionType","PositionType","topBase","right","leftBase","bottom","getPlayerPosition","scoreInfo","react__WEBPACK_IMPORTED_MODULE_1___default","Player","posed","div","enter","active","orgPosition","newPos","_","clone","getActivePosition","inActive","react_pose__WEBPACK_IMPORTED_MODULE_4__","pose","OpenBoxTimeSpan","PrepareBoxTimeSpan","OpeningDuration","BoxStatus","closed","opened","opening","EventKeys","back","push","NavigatorEvents","EventEmitter","historyStack","HashSplitter","pushHash","hash","currentHash","document","location","pushPage","_x","_x2","_pushPage","apply","this","arguments","_callee","navigator","router","options","routerName","_args","regenerator_default","wrap","_context","prev","next","length","undefined","stop","popPage","window","history","addEventListener","event","newURL","oldURL","componentName","replace","emit","emitBack","last","pop","popPageInner","replaceState","Collection","collection","_this$collection","forEach","fn","_EventEmitterBase","eventKeys","_this","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","removeEventListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setMaxListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","eventName","_this2","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__","prototype","removeFn","removeListener","o","dispose","on","_collection$getCollec","createCollection","getCollection","removeAll","EventEmitterBase","OpenBoxStores","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","stores","commonStores","gamePlayerStore","accountStore","setVisiblePopup","PopupNames","betEvent","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","openBoxAPI","gameRecord","getOpenBoxAPI","sent","loadGame","none","setScene","startGame","onGameEnd","gameResult","quit","moneySelector","onQuitGameResult","onSubmitAuth","params","_callee2","submitGame","_context2","getCommonAPI","betType","nums","amounts","betAddress","updateDataVersion","t0","alert","onSelectMoney","authForm","prepareRecords","records","currentUserId","record","random","OpenBoxGame","_ref4","dataVersion","_callee3","_ref6","getHistoryList","getBetAddress","list","_context3","setDisplayList","account","setBetAddress","react__WEBPACK_IMPORTED_MODULE_3___default","_web3game_common_components__WEBPACK_IMPORTED_MODULE_7__","_web3game_common_components_AuthForm__WEBPACK_IMPORTED_MODULE_11__","onSubmit","_components_GameResultPopup__WEBPACK_IMPORTED_MODULE_18__","onQuit","react_onsenui__WEBPACK_IMPORTED_MODULE_4__","_web3game_common_components_viewPort_ViewPortSizeProvider__WEBPACK_IMPORTED_MODULE_15__","perfectHeight","perfectWidth","preferMaxWidth","mobx_react__WEBPACK_IMPORTED_MODULE_6__","assign","getOpenBoxMoneyList","_components_BoxGameDesk__WEBPACK_IMPORTED_MODULE_19__","watchAccountChange","exports","AuthForm","_web3game_lang__WEBPACK_IMPORTED_MODULE_2__","_popups_Popup__WEBPACK_IMPORTED_MODULE_3__","popupData","ttBalance","tokenBalance","gas","_ref$money","handleSubmit","CONFIRM_SUBMIT","ACCOUNT","TT_BALANCE","TOKEN_BALANCE","marginTop","SUBMIT","_getOpenBoxAPI","isUsingMockAPI","abrupt","e","then","bind","m","default","Promise","all","ViewPortSizeProvider","_ref$preferMode","preferMode","PreferMode","_ref$preferMaxWidth","preferMaxHeight","getWinSize","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_useState2$","winHeight","winWidth","setWinSize","staticSizeInfo","adjustedSizeInfo","getAdjustedSizeInfo","sizeInfo","extend","react__WEBPACK_IMPORTED_MODULE_2___default","GameResultPopup","_web3game_common_components_popups_Popup__WEBPACK_IMPORTED_MODULE_2__","_web3game_common_components_Table__WEBPACK_IMPORTED_MODULE_3__","_web3game_common_components__WEBPACK_IMPORTED_MODULE_4__","_core_gameHelper__WEBPACK_IMPORTED_MODULE_5__","toNumber","num","web3","heroList","getSortedHeroList","sort","b","comparedTo","hero","index","slice","fromWei","gain","_web3game_lang__WEBPACK_IMPORTED_MODULE_0__","OPEN_BOX_MONEY_TEXT_1","OPEN_BOX_MONEY_TEXT_2","OPEN_BOX_MONEY_TEXT_3","OPEN_BOX_MONEY_TEXT_4","OPEN_BOX_MONEY_TEXT_5","mobx_react__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","injectMainAccountData","Component","locale","observer","_class","HistoryStore","classCallCheck","initializerDefineProperty","_descriptor","createClass","applyDecoratedDescriptor","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","ON_GAME_NOT_READY","openBoxEvents","_EventEmitter","GlobalEvent","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","onGameReadyStatusChange","triggerGameReadyStatus","isReady","inherits","GamePlayerStore_class","GamePlayerStore","start","end","pause","resume","beginOpenBox","finishOpenBox","GamePlayerStore_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","playerTimeout","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","resetPlayer","play","isPaused","resolve","playBoxByIndex","isEnd","playSound","Sounds","result","clearTimeout","openIndex","_this3","openingBox","sortedBoxes","getSortedBoxes","waitTimeout","box","finishedOpenIndex","heroPos","playerScores","boomedHeroId","heroId","boom","addScore","oldScore","actionFn","_this4","timeout","setTimeout","fasterTimes","clearPlayerTimeout","_this5","_this6","AnimatedClassNames","defineProperty","Box","_dec","_temp","_class2","_React$Component","isBoxOpened","_this$props","props","_this$props2","boxIndex","isOpened","isOpening","status","_this$props3","boxCover","isBoomer","getStatus","boomClassName","scoreClassName","boxCoverClassName","boxClassName","boxWrapperClassName","boxSize","getAnimatedClassByStatus","ColumnNum","range4","range","BoxGrid","GAME_IS_NOT_READY","tableSize","Table","rowIndex","colIndex","columnIndex","boxInfo","Box_Box","renderColumn","BoxGameDesk","_ref$openIndex","Fragment","components","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","_viewPortSizeHelper__WEBPACK_IMPORTED_MODULE_2__","styles","finalRatio","reduce","val","isNumber","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","howler__WEBPACK_IMPORTED_MODULE_1__","_web3game_typings_openBox__WEBPACK_IMPORTED_MODULE_2__","require","soundSrc","Howl","playerAddrs","_gameRecord$playerAwa","playerAwards","currentUserIdIndex","indexOf","imageIndexsMap","userIds","getRandomValue","im","userId","imageIndexMap","userImageIndexCache","prevImageIndexList","values","getRandomValueNotIn","getRandomUsersImageIndex","resortedUserIds","posDiff","i","startMoveIndex","cloneDeep","genOtherRecord","sortedIndex","isCurrentUser","getCurrentRecord","scores","sequencs","sortedHeroList","heroInfo","find","heroIndex","initialSizeInfo","widthHeightRatio","innerHeight","innerWidth","_ref$perfectHeight","_ref$perfectWidth","_preferMaxHeight","_preferMaxWidth","_ref$winWidth","resizeRatioByWidth","Modal","y","opacity","delay","transition","stiffness","damping","duration","exit","Backdrop","Popup","debounce","_ref$className","isVisible","setIsVisible","react_pose__WEBPACK_IMPORTED_MODULE_3__","onTouchEnd","onKeyDown","role","tabIndex","aria-label","_ref$bodyClassName"],"mappings":"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","file":"static/js/openBox.a5712d17.chunk.js","sourcesContent":["import React from 'react';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\ntype HistoryButtonProps = {\r\n    onShowHistory: () => void;\r\n};\r\n\r\nexport function HistoryButton(\r\n    {\r\n        onShowHistory,\r\n    }: HistoryButtonProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n    return (\r\n        <button\r\n            className=\"gameHistoryButton\"\r\n            onClick={onShowHistory}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().OPEN_BOX_PAGE.HISTORY}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default React.memo(HistoryButton);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {GameUIScene} from \"../../utils/constants\";\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\ntype QuitGameButtonProps = {\r\n    onQuitPlayer?: () => void;\r\n    onQuitGame?: () => void;\r\n    isPlayerActive: boolean;\r\n};\r\n\r\nexport function QuitGameButtonPure(\r\n    {\r\n        onQuitPlayer,\r\n        onQuitGame,\r\n        isPlayerActive,\r\n    }: QuitGameButtonProps,\r\n) {\r\n    const onClick = isPlayerActive ? onQuitPlayer : onQuitGame;\r\n\r\n    if (!onClick) {\r\n        return null;\r\n    }\r\n\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"gameQuitButton\"\r\n            onClick={onClick}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().BACK}\r\n        </button>\r\n    );\r\n}\r\n\r\nQuitGameButtonPure.defaultProps = {\r\n    isPlayerActive: false,\r\n};\r\n\r\ntype QuitGameButtonInjectedProps = {\r\n    gameUIStore?: GameUIStore;\r\n    onQuitGame: () => void;\r\n    onQuitPlayer: () => void;\r\n};\r\n\r\nexport const QuitGameButton = inject(\r\n    (\r\n        { gameUIStore }: QuitGameButtonInjectedProps,\r\n    ) => {\r\n        const isPlayerActive = gameUIStore && gameUIStore.scene === GameUIScene.gamePlayer;\r\n\r\n        return {\r\n            isPlayerActive,\r\n        };\r\n    },\r\n)(QuitGameButtonPure);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    name: PopupNames;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function PopupRendererPure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    return isActive ? children() : null;\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const PopupRenderer = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.visiblePopup === name,\r\n    }),\r\n)(PopupRendererPure);\r\n","import React, {Fragment, useState} from 'react';\r\nimport {PopupRenderer} from \"./PopupRenderer\";\r\nimport {PopupElement} from \"..\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\n\r\nexport type PopupManagerProps = {\r\n    popups?: PopupElement[];\r\n};\r\n\r\nconst PopupManagerContext = React.createContext({});\r\n\r\nfunction usePopupManager(popupsList: PopupElement[]) {\r\n    const [popups, setPopups] = useState(popupsList);\r\n\r\n    return {\r\n        popups,\r\n        showPopup: (popup: PopupElement) => {\r\n            setPopups([\r\n                ...popups,\r\n                popup,\r\n            ]);\r\n        },\r\n        closePopup: (name: PopupNames) => {\r\n            setPopups(popups.filter((p: any) => p.name !== name));\r\n        },\r\n    };\r\n}\r\n\r\nexport function PopupManager({ popups = [] }: PopupManagerProps) {\r\n\r\n    const { showPopup, popups: popupList } = usePopupManager(popups);\r\n\r\n    return (\r\n        <PopupManagerContext.Provider value={{ showPopup }}>\r\n            <Fragment>\r\n                {\r\n                    popupList.map(({ name, renderer }) => (\r\n                        <PopupRenderer key={name} name={name}>\r\n                            {renderer}\r\n                        </PopupRenderer>\r\n                    ))\r\n                }\r\n            </Fragment>\r\n        </PopupManagerContext.Provider>\r\n    );\r\n\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {HistoryButton} from \"./HistoryButton\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\nimport {QuitGameButton} from \"./QuitGameButton\";\r\nimport {PopupManager} from \"../popups/PopupManger\";\r\nimport {ViewPortSizeContext} from \"../viewPort/viewPortSizeHelper\";\r\n\r\nimport BackgroundUrl from '../../styles/images/beijingtu.png';\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\nexport type PopupElement = { name: PopupNames; renderer: () => React.ReactElement }\r\n\r\nexport type GameLayoutProps = {\r\n    children?: React.ReactElement | React.ReactElement[];\r\n    onShowHistory: () => void;\r\n    onQuitGame?: () => void;\r\n    onQuitPlayer?: () => void;\r\n    popups?: PopupElement[];\r\n};\r\n\r\nexport function GameLayout(\r\n    {\r\n        children,\r\n        onShowHistory,\r\n        popups = [],\r\n        onQuitGame,\r\n        onQuitPlayer,\r\n    }: GameLayoutProps,\r\n) {\r\n    const {\r\n        adjustedHeight,\r\n        adjustedWidth,\r\n    } = useContext(ViewPortSizeContext);\r\n\r\n    const applicationSize = {\r\n        width: adjustedWidth,\r\n        height: adjustedHeight,\r\n    };\r\n\r\n    const gameContentStyle = useVPStyle({\r\n        paddingTop: 460,\r\n    });\r\n\r\n    return (\r\n        <div className=\"gameApplication\" style={applicationSize}>\r\n            <img src={BackgroundUrl} alt=\"background\" className=\"backgroundImage\" />\r\n            <HistoryButton onShowHistory={onShowHistory} />\r\n            <QuitGameButton\r\n                onQuitGame={onQuitGame}\r\n                onQuitPlayer={onQuitPlayer}\r\n            />\r\n            <div className=\"gameDesktop\">\r\n                <div className=\"gameDesktopContent\" style={gameContentStyle}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n\r\n            <PopupManager popups={popups} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(GameLayout);\r\n","import React from 'react';\r\nimport {useVPStyle} from \"./viewPort/getElStyle\";\r\n\r\ntype MoneySelectorPureProps = {\r\n    moneyList: any[];\r\n    onSelect: (money: number) => void;\r\n};\r\n\r\nexport function MoneySelectorPure(\r\n    {\r\n        moneyList,\r\n        onSelect,\r\n    }: MoneySelectorPureProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        width: 180,\r\n        height: 90,\r\n        fontSize: 24,\r\n    });\r\n\r\n    return (\r\n        <div className=\"moneySelector\">\r\n            {moneyList.map(({ money, text }) => (\r\n                <div key={money}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`moneySelectorButton moneySelectorButton_${money}`}\r\n                        style={buttonSize}\r\n                        onClick={() => onSelect(money)}\r\n                    >\r\n                        {text}\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const MoneySelector = React.memo(MoneySelectorPure);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../stores/GameUIStore\";\r\nimport {GameUIScene} from \"../utils/constants\";\r\n\r\ntype ScenePureProps = {\r\n    name: GameUIScene;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function ScenePure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: ScenePureProps,\r\n) {\r\n    if (!isActive) {\r\n        return null;\r\n    }\r\n\r\n    return children();\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const Scene = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.scene === name,\r\n    }),\r\n)(ScenePure);\r\n","export * from './layouts/GameLayout';\r\nexport * from './layouts/HistoryButton';\r\nexport * from './HistoryListPopup';\r\nexport * from './MoneySelector';\r\nexport * from './PlayerInfo';\r\nexport * from './Scene';\r\nexport * from './popups/PopupRenderer';\r\n","import React from 'react';\r\nimport {hot} from \"react-hot-loader\";\r\nimport {inject} from \"mobx-react\";\r\nimport moment from \"moment\";\r\nimport {BetEvent} from '@web3game/typings/openBox';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {Popup} from \"./popups/Popup\";\r\nimport {HistoryStore} from \"../../openBox/stores/HistoryStore\";\r\nimport {Table} from \"./Table\";\r\nimport {compose} from \"../utils/compose\";\r\n\r\n\r\ntype HistoryListProps = {\r\n    onPlayGame: (betEvent: BetEvent) => void;\r\n    displayList?: [];\r\n};\r\n\r\nexport function HistoryListPure(\r\n    {\r\n        onPlayGame,\r\n        displayList,\r\n    }: HistoryListProps,\r\n) {\r\n    const tHeader = (\r\n        <tr>\r\n            <th className=\"historyNo\">{getLang().OPEN_BOX_PAGE.HISTORY_NO}</th>\r\n            <th>{getLang().AMOUNT}</th>\r\n            <th className=\"historyDate\">{getLang().OPEN_BOX_PAGE.HISTORY_DATE}</th>\r\n            <th className=\"historyAction\">{\" \"}</th>\r\n        </tr>\r\n    );\r\n\r\n    const renderListItem = React.useCallback(\r\n        (item: any) => (\r\n            <tr key={item.id}>\r\n                <td className=\"historyNo\">{item.issueNo}</td>\r\n                <td>{item.money}</td>\r\n                <td className=\"historyDate\">{moment(item.time).format('MM/DD HH:mm')}</td>\r\n                <td className=\"historyAction\">\r\n                    <button\r\n                        className=\"historyActionButton\"\r\n                        onClick={() => onPlayGame(item)}\r\n                        type=\"button\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const listContent = displayList ? displayList.map(renderListItem) : null;\r\n\r\n    return (\r\n        <Popup title={getLang().OPEN_BOX_PAGE.HISTORY}>\r\n            <Table\r\n                tHead={tHeader}\r\n                className=\"historyList\"\r\n                bodyClassName=\"purchaseListTbody\"\r\n            >\r\n                {listContent}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    historyStore?: HistoryStore;\r\n};\r\n\r\nexport const HistoryListPopup = compose<HistoryListProps>(\r\n    hot(module),\r\n    inject(\r\n        ({ historyStore }: BoxGridInjectedStores) => ({\r\n            displayList: historyStore ? historyStore.displayList : [],\r\n        }),\r\n    )\r\n)(HistoryListPure);\r\n","import React, {CSSProperties, useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {hot} from \"react-hot-loader\";\r\nimport {PositionType} from \"@web3game/typings/openBox\";\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {useVPStyle} from \"./viewPort/getElStyle\";\r\nimport {compose} from \"../utils/compose\";\r\n\r\nexport type PlayerInfoProps = {\r\n    imageIndex: number;\r\n    isActive?: boolean;\r\n    id?: any;\r\n    score?: number;\r\n    pos?: PositionType;\r\n};\r\n\r\nexport function PlayerInfoPure(\r\n    {\r\n        imageIndex,\r\n        isActive = false,\r\n        score,\r\n        pos,\r\n    }: PlayerInfoProps,\r\n) {\r\n    const [isInPosition, setIsInPosition] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsInPosition(true);\r\n    }, []);\r\n\r\n    const userImageSize = useVPStyle({\r\n        width: 100,\r\n        height: 100,\r\n    });\r\n    const userScoreSize = useVPStyle({\r\n        width: 55,\r\n        height: 63,\r\n        fontSize: 24,\r\n        top: -70,\r\n        left: 24,\r\n        paddingTop: 16,\r\n    });\r\n\r\n    const getPlayerPosition = (positionType: PositionType | undefined): CSSProperties => {\r\n\r\n        const topBase = 200;\r\n        const leftBase = 340;\r\n        const verticalDiff = 460;\r\n        const horizontalDiff = 280;\r\n\r\n        switch (positionType) {\r\n\r\n            case PositionType.top:\r\n                return useVPStyle({\r\n                    top: topBase + 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.right:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase + horizontalDiff,\r\n                });\r\n\r\n            case PositionType.bottom:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff * 2 - 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.left:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase - horizontalDiff,\r\n                });\r\n\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const normalPosition = getPlayerPosition(pos);\r\n\r\n    const getActivePosition = (\r\n        positionType: PositionType | undefined,\r\n        orgPosition: CSSProperties,\r\n    ) => {\r\n        const newPos: any = _.clone(orgPosition);\r\n        const activeDiff = 50;\r\n\r\n        switch (pos) {\r\n            case PositionType.top:\r\n                newPos.top += activeDiff;\r\n                break;\r\n            case PositionType.right:\r\n                newPos.left -= activeDiff;\r\n                break;\r\n\r\n            case PositionType.bottom:\r\n                newPos.top -= activeDiff;\r\n                break;\r\n            case PositionType.left:\r\n                newPos.left += activeDiff;\r\n                break;\r\n\r\n        }\r\n\r\n        return newPos;\r\n    };\r\n\r\n    const scoreInfo = score !== null ? (\r\n        <span className=\"userScore\" style={userScoreSize}>\r\n            {score}\r\n        </span>\r\n    ) : null;\r\n\r\n    const Player = posed.div({\r\n        enter: normalPosition,\r\n        active: getActivePosition(pos, normalPosition),\r\n        inActive: normalPosition\r\n    });\r\n\r\n    const className = `playerInfo userImage userImage${imageIndex} ${pos} ${isActive ? 'active' : ''}`;\r\n\r\n    return (\r\n        <PoseGroup>\r\n            {isInPosition && (\r\n                <Player\r\n                    key=\"player\"\r\n                    pose={isActive ? 'active' : 'inActive'}\r\n                    className={className}\r\n                    style={userImageSize}\r\n                >\r\n                    {scoreInfo}\r\n                </Player>\r\n            )}\r\n        </PoseGroup>\r\n    );\r\n}\r\n\r\nexport const PlayerInfo = compose<PlayerInfoProps>(\r\n    hot(module),\r\n)(PlayerInfoPure);\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport type GameRecord = {\r\n    id?: any;\r\n    currentUserId: any;\r\n    play: boolean;\r\n    scores: number[];\r\n    sequencs: number[];\r\n    playerScores: BigNumber[];\r\n    playerAwards: BigNumber[];\r\n    playerAddrs: string[];\r\n};\r\n\r\nexport type BetEvent = {\r\n    id?: number;\r\n    issueNo: number;\r\n    money: number;\r\n    time: number;\r\n    currentUserId: string;\r\n}\r\n\r\n// export type PositionType = 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport enum PositionType {\r\n    top = 'top',\r\n    bottom = 'bottom',\r\n    left = 'left',\r\n    right = 'right'\r\n}\r\n\r\nexport type PlayerScoreByPosition = {\r\n    top: number;\r\n    bottom: number;\r\n    left: number;\r\n    right: number;\r\n};\r\n\r\nexport type BoxInfo = {\r\n    boxIndex: number;\r\n    score: number;\r\n    openIndex: number;\r\n    heroId: any;\r\n    heroIndex: number;\r\n\r\n    /** @type {HeroInfo} */\r\n    heroInfo: any;\r\n    heroPos: any;\r\n};\r\n\r\nexport type HeroInfo = {\r\n    id: any;\r\n    index: number;\r\n    pos: any;\r\n    isCurrentUser: boolean;\r\n    score: BigNumber;\r\n    imageIndex: number;\r\n    gain: BigNumber;\r\n};\r\n","export const OpenBoxTimeSpan = 1000; // ms\r\nexport const PrepareBoxTimeSpan = 1500; //\r\nexport const OpeningDuration = 650; // ms\r\n\r\nexport const BoxStatus = {\r\n    closed: 'closed',\r\n    opened: 'opened',\r\n    opening: 'opening',\r\n};\r\n\r\nexport const HeroPositions = {\r\n    top: 'top',\r\n    right: 'right',\r\n    bottom: 'bottom',\r\n    left: 'left',\r\n};\r\n","import EventEmitter from \"./EventEmitter\";\r\n\r\nconst EventKeys = {\r\n    back: 'back',\r\n    push: 'push',\r\n};\r\n\r\nconst NavigatorEvents = new EventEmitter();\r\n\r\nexport function emitBack(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.back, componentName);\r\n}\r\n\r\nexport function onBack(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.back, fn);\r\n}\r\n\r\nexport function emitPush(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.push, componentName);\r\n}\r\n\r\nexport function onPush(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.push, fn);\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {Navigator, PageTransitionOptions} from \"react-onsenui\";\r\nimport {emitBack} from \"./NavigatorEvents\";\r\n\r\n\r\nconst historyStack: object[] = [];\r\n\r\nexport const hasHistory = () => historyStack.length > 0;\r\n\r\nconst HashSplitter = '|';\r\n\r\nfunction pushHash(hash: string) {\r\n    const currentHash = document.location.hash;\r\n    document.location.hash = `${currentHash}${currentHash ? HashSplitter : ''}${hash}`;\r\n}\r\n\r\nexport async function pushPage(\r\n    navigator: Navigator,\r\n    router: any,\r\n    options: PageTransitionOptions = {\r\n    },\r\n) {\r\n    const routerName = router.key;\r\n    pushHash(routerName);\r\n    historyStack.push({ navigator, router, options, routerName });\r\n    await navigator.pushPage(router, options);\r\n}\r\n\r\nexport function popPage() {\r\n    window.history.back();\r\n}\r\n\r\nfunction popPageInner(componentName: string) {\r\n    const { navigator, routerName } = _.last(historyStack) as any;\r\n\r\n    historyStack.pop();\r\n\r\n    if (routerName === componentName) {\r\n        navigator.popPage();\r\n    }\r\n}\r\n\r\n// handle history back\r\nwindow.addEventListener('hashchange', (event) => {\r\n    const { newURL, oldURL } = event;\r\n    if (newURL.length < oldURL.length) {\r\n        const componentName = oldURL.replace(newURL, '').replace('#', '');\r\n        emitBack(componentName);\r\n        popPageInner(componentName);\r\n    }\r\n});\r\n\r\nif (window.location.hash) {\r\n    window.history.replaceState(null, '', '#');\r\n}\r\n\r\n\r\n","/**\r\n * Created by trump on 16/6/18.\r\n */\r\nimport {EventEmitter as EventEmitterBase} from \"events\";\r\n\r\n\r\nclass Collection {\r\n    private collection: (() => void)[] = [];\r\n\r\n    /** @returns {Collection} */\r\n    public push(...fn: (() => void)[]) {\r\n        this.collection.push(...fn);\r\n        return this;\r\n    }\r\n\r\n    public removeAll() {\r\n        this.collection.forEach(fn => fn());\r\n        this.collection = [];\r\n    }\r\n\r\n    public getCollection() {\r\n        return this.collection;\r\n    }\r\n}\r\n\r\nexport class EventEmitter extends EventEmitterBase {\r\n\r\n    protected EventKeys = {};\r\n\r\n    private removeEventListeners: (() => void)[] = [];\r\n\r\n    public constructor(eventKeys?: object) {\r\n        super();\r\n\r\n        /** @field */\r\n        this.EventKeys = { ...eventKeys };\r\n\r\n        this.setMaxListeners(9999);\r\n    }\r\n\r\n    // @ts-ignore\r\n    public on(eventName: string, fn: (() => void) | any) {\r\n        super.on(eventName, fn);\r\n\r\n        const removeFn = () => {\r\n            this.removeListener(eventName, fn);\r\n            this.removeEventListeners = this.removeEventListeners.filter(o => o !== removeFn);\r\n        };\r\n\r\n        removeFn.eventName = eventName;\r\n\r\n        if (!this.removeEventListeners) {\r\n            this.removeEventListeners = [];\r\n        }\r\n\r\n        this.removeEventListeners.push(removeFn);\r\n\r\n        return removeFn;\r\n    }\r\n\r\n    public one(eventName: string, fn: (...args: any[]) => void) {\r\n        const dispose = this.on(eventName, (...args: any[]) => {\r\n            fn(...args);\r\n            dispose();\r\n        });\r\n\r\n        return dispose;\r\n    }\r\n\r\n    public removeByName(name: string) {\r\n        this.removeEventListeners.forEach((fn) => {\r\n            if ((fn as any).eventName === name) fn();\r\n        });\r\n\r\n        this.removeEventListeners = this.removeEventListeners.filter(\r\n            o => (o as any).eventName !== name,\r\n        );\r\n    }\r\n\r\n    public removeAll() {\r\n        this.removeEventListeners.forEach(fn => fn());\r\n        this.removeEventListeners = [];\r\n    }\r\n\r\n    /** @returns Collection */\r\n    public createCollection() {\r\n        return new Collection();\r\n    }\r\n\r\n    public listenToMany(...listeners: (() => void)[]) {\r\n        const collection = this.createCollection();\r\n        collection.getCollection().push(...listeners);\r\n        return () => collection.removeAll();\r\n    }\r\n}\r\n\r\nexport default EventEmitter;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {Page} from \"react-onsenui\";\r\nimport _ from 'lodash';\r\nimport {Provider} from \"mobx-react\";\r\nimport {hot} from \"react-hot-loader\";\r\nimport {\r\n    GameLayout,\r\n    HistoryListPopup,\r\n    MoneySelector,\r\n    PopupElement,\r\n    Scene,\r\n} from \"@web3game/common/components\";\r\nimport * as commonStores from '@web3game/common/stores';\r\nimport {GameUIScene, PopupNames} from \"@web3game/common/utils/constants\";\r\nimport {popPage} from \"@web3game/common/utils/navigatorHelper\";\r\nimport {BetEvent} from \"@web3game/typings/openBox\";\r\nimport {AuthForm} from \"@web3game/common/components/AuthForm\";\r\nimport {getCommonAPI} from \"@web3game/apis/common/getCommonAPI\";\r\nimport {getOpenBoxAPI} from \"@web3game/apis/openbox/getOpenBoxAPI\";\r\nimport '@web3game/common/styles/common.scss';\r\nimport {ViewPortSizeProvider} from \"@web3game/common/components/viewPort/ViewPortSizeProvider\";\r\nimport * as stores from './stores';\r\nimport './styles/openBox.scss';\r\nimport {GameResultPopup} from \"./components/GameResultPopup\";\r\nimport {BoxGameDesk} from \"./components/BoxGameDesk\";\r\nimport {getOpenBoxMoneyList} from \"./core/functions/getOpenBoxMoneyList\";\r\nimport {compose} from \"@web3game/common/utils/compose\";\r\nimport {watchAccountChange} from \"@web3game/common/utils/watchAccountChange\";\r\n\r\n// @ts-ignore\r\nwindow.OpenBoxStores = {\r\n    ...stores,\r\n    ...commonStores,\r\n};\r\n\r\n// region store helpers\r\nconst { gamePlayerStore } = stores;\r\nconst { gameUIStore, accountStore } = commonStores;\r\n\r\nconst onShowHistory = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.history);\r\n};\r\n\r\nconst onPlayGame = (betEvent: BetEvent) => {\r\n    (async () => {\r\n        const openBoxAPI = await getOpenBoxAPI();\r\n\r\n        const gameRecord = await openBoxAPI.loadGame(betEvent);\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n        gameUIStore.setScene(GameUIScene.gamePlayer);\r\n        gamePlayerStore.startGame(gameRecord);\r\n\r\n        // 游戏结束弹出弹窗\r\n        gamePlayerStore.onGameEnd(() => gameUIStore.setVisiblePopup(PopupNames.gameResult));\r\n\r\n    })();\r\n};\r\n\r\nconst onQuitPlayer = () => {\r\n    gamePlayerStore.quit();\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n};\r\n\r\nconst onQuitGameResult = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.none);\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n    gamePlayerStore.quit();\r\n};\r\n\r\nconst onSubmitAuth = (params: any) => {\r\n    (async () => {\r\n        const { submitGame } = await getCommonAPI();\r\n        try {\r\n            await submitGame({\r\n                ...params,\r\n                betType: 3,\r\n                issueNo: 0,\r\n                nums: [],\r\n                amounts: [],\r\n                betAddress: gamePlayerStore.betAddress,\r\n            });\r\n            accountStore.updateDataVersion();\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    })();\r\n\r\n};\r\n\r\nconst onSelectMoney = (money: number) => {\r\n    gameUIStore.setVisiblePopup(PopupNames.authForm, { money });\r\n};\r\n\r\nconst prepareRecords = (records: any[], currentUserId: string): object[] => _.map(\r\n    records,\r\n    record => ({\r\n        ...record,\r\n        currentUserId,\r\n        id: record.id || _.random(0),\r\n    }),\r\n);\r\n\r\n\r\n// endregion\r\n\r\ntype OpenBoxGameProps = {\r\n    dataVersion: string;\r\n};\r\n\r\nexport function OpenBoxGame(\r\n    {\r\n        dataVersion,\r\n    }: OpenBoxGameProps\r\n) {\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { getHistoryList, getBetAddress } = await getOpenBoxAPI();\r\n            const list = await getHistoryList();\r\n            stores.historyStore.setDisplayList(prepareRecords(list, accountStore.account));\r\n            const betAddress = await getBetAddress();\r\n            gamePlayerStore.setBetAddress(betAddress);\r\n        })();\r\n\r\n        // unbind listeners of gamePlayerStore\r\n        return () => {\r\n            gamePlayerStore.quit();\r\n        };\r\n    }, [dataVersion]);\r\n\r\n    const popups: PopupElement[] = [\r\n        { name: PopupNames.history, renderer: () => <HistoryListPopup onPlayGame={onPlayGame} /> },\r\n        { \r\n            name: PopupNames.authForm,\r\n            renderer: () => (\r\n                <AuthForm \r\n                    onSubmit={onSubmitAuth}\r\n                />\r\n            ), \r\n        },\r\n        {\r\n            name: PopupNames.gameResult,\r\n            renderer: () => (<GameResultPopup onQuit={onQuitGameResult} />),\r\n        },\r\n    ];\r\n\r\n    const onQuitGame = useCallback(() => popPage(), []);\r\n\r\n    return (\r\n        <Page className=\"openBoxGamePage\">\r\n            <ViewPortSizeProvider\r\n                perfectHeight={1344}\r\n                perfectWidth={750}\r\n                preferMaxWidth={600}\r\n            >\r\n                <Provider {...commonStores} {...stores}>\r\n                    <GameLayout\r\n                        onShowHistory={onShowHistory}\r\n                        onQuitGame={onQuitGame}\r\n                        onQuitPlayer={onQuitPlayer}\r\n                        popups={popups}\r\n                    >\r\n\r\n                        <Scene name={GameUIScene.moneySelector}>\r\n                            {() => (\r\n                                <MoneySelector\r\n                                    moneyList={getOpenBoxMoneyList()}\r\n                                    onSelect={onSelectMoney}\r\n                                />\r\n                            )}\r\n                        </Scene>\r\n\r\n                        <Scene name={GameUIScene.gamePlayer}>\r\n                            {() => <BoxGameDesk />}\r\n                        </Scene>\r\n                    </GameLayout>\r\n                </Provider>\r\n            </ViewPortSizeProvider>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default compose<OpenBoxGameProps>(\r\n    hot(module),\r\n    React.memo,\r\n    watchAccountChange\r\n)(OpenBoxGame);\r\n","module.exports = __webpack_public_path__ + \"static/media/beijingtu.03f0d956.png\";","import React, {useCallback} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {Popup} from \"./popups/Popup\";\r\nimport {AccountStore} from \"../stores/AccountStore\";\r\nimport {GameUIStore} from '../stores/GameUIStore';\r\n\r\ntype AuthFormPureProps = {\r\n    onSubmit: (params: any) => void;\r\n    account?: string;\r\n    ttBalance?: any;\r\n    tokenBalance?: any;\r\n    gas?: any;\r\n    money?: number;\r\n};\r\n\r\nexport function AuthFormPure(\r\n    {\r\n        onSubmit,\r\n        account,\r\n        ttBalance,\r\n        tokenBalance,\r\n        money = 0,\r\n    }: AuthFormPureProps,\r\n) {\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        onSubmit({\r\n            account,\r\n            money,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Popup title={getLang().CONFIRM_SUBMIT} className=\"gameAuthFormPopup\">\r\n            <div className=\"gameAuthForm\">\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().ACCOUNT}&nbsp;:&nbsp;\r\n                    {account}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TT_BALANCE}&nbsp;:&nbsp;\r\n                    {ttBalance}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TOKEN_BALANCE}&nbsp;:&nbsp;\r\n                    {tokenBalance}\r\n                </div>\r\n                <hr />\r\n                <div className=\"gameAuthFormField\" style={{marginTop: '20px'}}>\r\n                    <button type=\"submit\" onClick={handleSubmit}>\r\n                        {getLang().SUBMIT}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype AuthFormInjectedProps = {\r\n    accountStore?: AccountStore;\r\n    gameUIStore?: GameUIStore;\r\n};\r\n\r\n\r\nexport const AuthForm = inject(\r\n    (\r\n        {\r\n            accountStore,\r\n            gameUIStore,\r\n        }: AuthFormInjectedProps,\r\n    ) => {\r\n        if (!accountStore || !gameUIStore) {\r\n            return {};\r\n        }\r\n\r\n        const { popupData: {money} } = gameUIStore;\r\n\r\n        const { \r\n            account, \r\n            ttBalance, \r\n            tokenBalance, \r\n            gas, \r\n        } = accountStore;\r\n\r\n        return { account, ttBalance, tokenBalance, gas, money };\r\n    },\r\n)(AuthFormPure);\r\n","import {OpenBoxAPI} from './OpenBoxAPI';\r\nimport {isUsingMockAPI} from \"../isUsingMockAPI\";\r\n\r\n\r\nexport async function getOpenBoxAPI(): Promise<OpenBoxAPI> {\r\n\r\n    if (isUsingMockAPI()) {\r\n        return import('./OpenBoxAPIMock').then(m => m.default);\r\n    }\r\n\r\n    return import('./OpenBoxAPIReal').then(m => m.default);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport _ from 'lodash';\r\nimport {\r\n    getAdjustedSizeInfo,\r\n    getWinSize,\r\n    InitialSizeInfo,\r\n    PreferMode,\r\n    ViewPortSizeContext,\r\n} from \"./viewPortSizeHelper\";\r\n\r\n\r\nexport type ViewPortSizeProps = {\r\n    children: React.ReactNode | React.ReactElement;\r\n\r\n    perfectHeight: number;\r\n    perfectWidth: number;\r\n\r\n    preferMaxWidth?: number;\r\n    preferMaxHeight?: number;\r\n\r\n    preferMode?: PreferMode;\r\n}\r\n\r\nexport const ViewPortSizeProvider = React.memo(\r\n    (\r\n        {\r\n            preferMode = PreferMode.width,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxHeight = 0,\r\n            preferMaxWidth = 900,\r\n\r\n            children,\r\n        }: ViewPortSizeProps\r\n    ) => {\r\n\r\n        const [{ winHeight, winWidth }, setWinSize] = useState(getWinSize());\r\n\r\n        useEffect(() => {\r\n            window.addEventListener(\r\n                'resize',\r\n                () => {\r\n                    setWinSize(getWinSize());\r\n                }\r\n            );\r\n        }, []);\r\n\r\n        const { Provider } = ViewPortSizeContext;\r\n\r\n        const staticSizeInfo = {\r\n            winHeight,\r\n            winWidth,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxWidth,\r\n        };\r\n\r\n        const adjustedSizeInfo = getAdjustedSizeInfo({\r\n            ...staticSizeInfo,\r\n            preferMode,\r\n        });\r\n\r\n        const sizeInfo = _.extend<InitialSizeInfo>({}, staticSizeInfo, adjustedSizeInfo);\r\n\r\n        return (\r\n            <Provider value={sizeInfo}>\r\n                {children}\r\n            </Provider>\r\n        );\r\n    },\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/oh_no.4b9dfc8c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/add-score.e14110a0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/result.e786a7c7.wav\";","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {Popup} from \"@web3game/common/components/popups/Popup\";\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {PlayerInfo} from \"@web3game/common/components\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\n\r\n\r\ntype GameResultPopupProps = {\r\n    onQuit: () => void;\r\n    gameRecord?: GameRecord;\r\n    web3?: any;\r\n};\r\n\r\nconst toNumber = (num: any) => {\r\n    if (num && num.toNumber) {\r\n        return num.toNumber();\r\n    }\r\n\r\n    return num;\r\n};\r\n\r\nexport function GameResultPopupPure(\r\n    {\r\n        onQuit,\r\n        gameRecord,\r\n        web3,\r\n    }: GameResultPopupProps,\r\n) {\r\n\r\n    if (!web3) {\r\n        return null;\r\n    }\r\n\r\n    const heroList = !gameRecord ? [] : getSortedHeroList(gameRecord)\r\n        .sort((a, b) => {\r\n\r\n            if (a.score && b.score && a.score.comparedTo && b.score.comparedTo) {\r\n                return b.score.comparedTo(a.score);\r\n            }\r\n\r\n            // @ts-ignore\r\n            return a - b;\r\n        });\r\n\r\n    const tHead = (\r\n        <tr>\r\n            <th className=\"rankIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerName\">\r\n                玩家\r\n            </th>\r\n            <th className=\"payerScore\">\r\n                钻石                \r\n            </th>\r\n            <th className=\"payerAward\">\r\n                奖励\r\n            </th>\r\n        </tr>\r\n    );\r\n    \r\n    return (\r\n        <Popup title=\"排行\" onQuit={onQuit} className=\"gameResultPopup\">\r\n            <Table tHead={tHead} className=\"gameResult\">\r\n                {heroList.map((hero, index) => (\r\n                    <tr key={hero.id}>\r\n                        <td className=\"rankIcon\">\r\n                            <div className={`rankImage rankImage${index + 1}`}>{index}</div>\r\n                        </td>\r\n                        <td className=\"playerIcon\">\r\n                            <PlayerInfo id={hero.id} imageIndex={hero.imageIndex} />\r\n                        </td>\r\n                        <td className=\"playerName\">{hero.id.slice(-6)}</td>\r\n                        <td className=\"payerScore\">{toNumber(hero.score)}</td>\r\n                        <td className=\"payerAward\">{web3.fromWei(toNumber(hero.gain), 'ether')}</td>\r\n                    </tr>\r\n                ))}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype GameResultPopupInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    web3?: any;\r\n};\r\n\r\nexport const GameResultPopup = inject(\r\n    ({ gamePlayerStore, web3 }: GameResultPopupInjectedProps) => (\r\n        {\r\n            gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n            web3,\r\n        }\r\n    ),\r\n)(GameResultPopupPure);\r\n","import {getLang} from \"@web3game/lang\";\r\n\r\nexport const getOpenBoxMoneyList = () => [\r\n    { money: 10, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_1 },\r\n    { money: 2000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_2 },\r\n    { money: 5000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_3 },\r\n    { money: 10000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_4 },\r\n    { money: 50000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_5 },\r\n];\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {AccountStore} from \"../stores/AccountStore\";\r\nimport {compose} from \"./compose\";\r\n\r\ntype RC<P> = React.ComponentType<P> | React.FunctionComponent<P> ;\r\n\r\n\r\ntype WatchLocaleInjectedProps = { accountStore: AccountStore };\r\n\r\nexport function injectMainAccountData<P>(Component: RC<P>) {\r\n    return inject(\r\n        (\r\n            {\r\n                accountStore,\r\n            }: WatchLocaleInjectedProps,\r\n        ) => (\r\n            {\r\n                locale: accountStore.locale,\r\n                dataVersion: accountStore.dataVersion,\r\n                updateDataVersion: () => accountStore.updateDataVersion(),\r\n            }\r\n        ),\r\n    )(Component);\r\n}\r\n\r\nexport function watchAccountChange<P>(Component: RC<P>) {\r\n    return compose<P>(\r\n        observer,\r\n        injectMainAccountData,\r\n    )(Component);\r\n}\r\n\r\n\r\n","import {action, observable} from \"mobx\";\r\n\r\n\r\nexport class HistoryStore {\r\n\r\n    @observable\r\n    public displayList: object[] = [];\r\n\r\n    @action\r\n    public setDisplayList(history: object[]) {\r\n        this.displayList = history;\r\n    }\r\n\r\n}\r\n\r\nexport const historyStore = new HistoryStore();\r\n","import {EventEmitter} from \"../../common/utils/EventEmitter\";\r\n\r\nconst ON_GAME_NOT_READY = 'ON_GAME_NOT_READY';\r\n\r\nexport class GlobalEvent extends EventEmitter {\r\n\r\n    public onGameReadyStatusChange = (fn: () => void) => this.on(ON_GAME_NOT_READY, fn);\r\n\r\n    public triggerGameReadyStatus = (isReady: boolean) => this.emit(ON_GAME_NOT_READY, isReady);\r\n\r\n}\r\n\r\nexport const openBoxEvents = new GlobalEvent({});\r\n\r\nexport default openBoxEvents;\r\n","import {action, observable} from \"mobx\";\r\nimport * as _ from 'lodash';\r\nimport {BoxInfo, GameRecord, PlayerScoreByPosition, PositionType} from \"@web3game/typings/openBox\";\r\n\r\nimport {EventEmitter} from \"../../common/utils/EventEmitter\";\r\nimport {OpenBoxTimeSpan, OpeningDuration, PrepareBoxTimeSpan} from \"../core/openBoxConstants\";\r\n\r\n\r\nimport {getSortedBoxes, playSound, Sounds} from \"../core/gameHelper\";\r\nimport {openBoxEvents} from \"../eventBus/openBoxEvents\";\r\n\r\n/**\r\n * @typedef {Object} GameRecord\r\n * @property {[Number]} scores\r\n * @property {[Number]} sequencs\r\n * @property {[Number]} playerScores\r\n * */\r\n\r\n\r\n\r\nconst getInitialScores = (): PlayerScoreByPosition => ({\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n});\r\n\r\nexport class GamePlayerStore extends EventEmitter {\r\n\r\n    public EventKeys = {\r\n        start: 'start',\r\n        end: 'end',\r\n        pause: 'pause',\r\n        resume: 'resume',\r\n        beginOpenBox: 'beginOpenBox',\r\n        finishOpenBox: 'finishOpenBox',\r\n    };\r\n\r\n    @observable\r\n    public betAddress = '';\r\n\r\n    @action\r\n    public setBetAddress(betAddress: string) {\r\n        this.betAddress = betAddress;\r\n    }\r\n\r\n    @observable\r\n    public gameRecord: GameRecord | null = null;\r\n\r\n    @observable\r\n    public openIndex = -1;\r\n\r\n    @observable\r\n    public finishedOpenIndex: number = -1;\r\n\r\n    @observable\r\n    public openingBox: BoxInfo | null | undefined = null;\r\n\r\n    @observable\r\n    public isPaused = false;\r\n\r\n    private playerTimeout = 0;\r\n\r\n    @observable\r\n    public playerScores: PlayerScoreByPosition = getInitialScores();\r\n\r\n    @observable\r\n    public boomedHeroId = null;\r\n\r\n    @observable\r\n    public fasterTimes = 1; // 播放时间间隔倍数\r\n\r\n\r\n    /**\r\n     * @param {CurrentGameRecord} gameRecord\r\n     * */\r\n    @action\r\n    public startGame(gameRecord: GameRecord): Promise<any> {\r\n        this.resetPlayer();\r\n        if (!gameRecord) return Promise.resolve();\r\n\r\n        if (gameRecord.play === false) {\r\n            this.isPaused = true;\r\n            openBoxEvents.triggerGameReadyStatus(false);\r\n        } else {\r\n            openBoxEvents.triggerGameReadyStatus(true);\r\n        }\r\n\r\n        this.gameRecord = gameRecord;\r\n\r\n        this.emit(this.EventKeys.start);\r\n\r\n        return Promise.resolve(\r\n            this.playBoxByIndex(0),\r\n        ).then((isEnd) => {\r\n            if (isEnd && !this.isPaused) {\r\n                this.emit(this.EventKeys.end);\r\n                playSound(Sounds.result);\r\n            }\r\n        });\r\n    }\r\n\r\n    @action\r\n    public restartGame() {\r\n        if (this.gameRecord) {\r\n            this.startGame(this.gameRecord);\r\n        }\r\n    }\r\n\r\n    @action\r\n    private clearPlayerTimeout() {\r\n        if (this.playerTimeout) {\r\n            clearTimeout(this.playerTimeout);\r\n            this.playerTimeout = 0;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public playBoxByIndex(openIndex: number): any {\r\n        if (!this.gameRecord) {\r\n            return false;\r\n        }\r\n\r\n        this.openIndex = openIndex;\r\n\r\n        this.openingBox = null;\r\n\r\n        const sortedBoxes = getSortedBoxes(this.gameRecord);\r\n\r\n        const getBoxByOpenIndex = (index: number) => _.find(\r\n            sortedBoxes,\r\n            box => box.openIndex === index,\r\n        );\r\n\r\n        if (openIndex < sortedBoxes.length && openIndex >= 0) {\r\n\r\n            return this.waitTimeout(\r\n                action('onPrepareBox', () => {\r\n                    const openingBox = getBoxByOpenIndex(openIndex);\r\n\r\n                    this.openingBox = openingBox;\r\n\r\n                    this.emit(this.EventKeys.beginOpenBox, openIndex, openingBox);\r\n\r\n                    return this.waitTimeout(\r\n                        action('onBoxOpen', () => {\r\n\r\n                            if (this.isPaused) {\r\n                                return false;\r\n                            }\r\n\r\n\r\n                            this.finishedOpenIndex = openIndex;\r\n\r\n                            this.emit(this.EventKeys.finishOpenBox, openIndex, openingBox);\r\n\r\n                            if (openingBox) {\r\n                                const heroPos = openingBox.heroPos as PositionType;\r\n\r\n                                if (openingBox.score === 0) {\r\n                                    this.playerScores[heroPos] = 0;\r\n                                    this.boomedHeroId = openingBox.heroId;\r\n                                    playSound(Sounds.boom);\r\n                                } else {\r\n                                    playSound(Sounds.addScore);\r\n                                    const oldScore = this.playerScores[heroPos];\r\n                                    this.playerScores[heroPos] = oldScore\r\n                                        + openingBox.score;\r\n                                    this.boomedHeroId = null;\r\n                                }\r\n                            }\r\n\r\n                            return this.waitTimeout(\r\n                                () => this.playBoxByIndex(openIndex + 1),\r\n                                OpeningDuration,\r\n                            );\r\n\r\n                        }),\r\n                        OpenBoxTimeSpan,\r\n                    );\r\n                }),\r\n                PrepareBoxTimeSpan,\r\n            );\r\n\r\n\r\n        }\r\n\r\n        this.openIndex = -1;\r\n        this.openingBox = null;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    @action\r\n    public clearBoomer() {\r\n        this.boomedHeroId = null;\r\n    }\r\n\r\n    public waitTimeout(actionFn: () => any, timeout = OpeningDuration) {\r\n        return new Promise((resolve) => {\r\n            // @ts-ignore\r\n            this.playerTimeout = setTimeout(() => resolve(actionFn()), timeout * this.fasterTimes);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public toggleFaster() {\r\n        if (this.fasterTimes === 1) {\r\n            this.fasterTimes = 0.2;\r\n        } else {\r\n            this.fasterTimes = 1;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public pause = () => {\r\n        this.isPaused = true;\r\n        this.clearPlayerTimeout();\r\n    };\r\n\r\n    @action\r\n    public resume = () => {\r\n        this.isPaused = false;\r\n        this.playBoxByIndex(this.openIndex);\r\n    };\r\n\r\n    @action\r\n    public resetPlayer() {\r\n        this.fasterTimes = 1;\r\n        this.gameRecord = null;\r\n        this.openingBox = null;\r\n        this.openIndex = -1;\r\n        this.finishedOpenIndex = -1;\r\n        this.isPaused = false;\r\n        this.boomedHeroId = null;\r\n        this.playerScores = getInitialScores();\r\n        this.clearPlayerTimeout();\r\n    }\r\n\r\n    @action\r\n    public quit() {\r\n        this.resetPlayer();\r\n        this.removeAll();\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onBeginOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.beginOpenBox, fn);\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onFinishOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.finishOpenBox, fn);\r\n    }\r\n\r\n    public onStart(fn: () => void) {\r\n        return this.on(this.EventKeys.start, fn);\r\n    }\r\n\r\n    public onGameEnd(fn: () => void) {\r\n        return this.on(this.EventKeys.end, fn);\r\n    }\r\n\r\n    public onPause(fn: () => void) {\r\n        return this.on(this.EventKeys.pause, fn);\r\n    }\r\n\r\n    public onResume(fn: () => void) {\r\n        return this.on(this.EventKeys.resume, fn);\r\n    }\r\n\r\n}\r\n\r\nexport const gamePlayerStore = new GamePlayerStore();\r\n","export {historyStore} from './HistoryStore';\r\nexport {gamePlayerStore} from './GamePlayerStore';\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {BoxStatus} from \"../core/openBoxConstants\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst AnimatedClassNames = {\r\n    [BoxStatus.opening]: 'animated swing active',\r\n};\r\n\r\ntype BoxInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\ntype BoxProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    boxIndex: number;\r\n    openIndex: number;\r\n    score: number;\r\n    boxCover: number;\r\n};\r\n\r\n@inject(\r\n    (stores: BoxInjectedStores) => ({\r\n        gamePlayerStore: stores.gamePlayerStore,\r\n    }),\r\n)\r\n@observer\r\nexport class Box extends React.Component<BoxProps> {\r\n\r\n    static defaultProps = {\r\n        boxCover: 0,\r\n    };\r\n\r\n    getStatus() {\r\n        const { boxIndex, gamePlayerStore } = this.props;\r\n        const isOpened = this.isBoxOpened();\r\n        const isOpening = gamePlayerStore && gamePlayerStore.openingBox\r\n            && (gamePlayerStore.openingBox.boxIndex === boxIndex);\r\n\r\n        if (isOpened) {\r\n            return BoxStatus.opened;\r\n        }\r\n\r\n        return isOpening ? BoxStatus.opening : BoxStatus.closed;\r\n    }\r\n\r\n    getAnimatedClassByStatus(status: string) {\r\n        const { gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore || gamePlayerStore.isPaused) {\r\n            return '';\r\n        }\r\n\r\n        return AnimatedClassNames[status] || '';\r\n    }\r\n\r\n    isBoxOpened = () => {\r\n        const { openIndex, gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore) {\r\n            return false;\r\n        }\r\n\r\n        return openIndex <= gamePlayerStore.finishedOpenIndex;\r\n    };\r\n\r\n    render() {\r\n        const { score, boxCover } = this.props;\r\n        const isBoomer = score === 0;\r\n        const status = this.getStatus();\r\n        const boomClassName = isBoomer ? 'boom' : '';\r\n        const scoreClassName = score >= 5 ? 'largerThen5' : 'lessThen5';\r\n        const boxCoverClassName = `box${boxCover}`;\r\n        const boxClassName = `${boomClassName} ${scoreClassName} score score${score}`;\r\n\r\n        const boxWrapperClassName = `${boxCoverClassName}`;\r\n        const boxSize = useVPStyle({\r\n            width: 100,\r\n            height: 132,\r\n        });\r\n\r\n        return (\r\n            <div\r\n                className={`box box-${status} ${boxWrapperClassName} ${this.getAnimatedClassByStatus(status)} xk`}\r\n                style={boxSize}\r\n            >\r\n                {!this.isBoxOpened() ? null : (\r\n                    <div className={boxClassName}>\r\n                        {isBoomer ? null : ` `}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport _ from 'lodash';\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {Box} from \"./Box\";\r\nimport {getSortedBoxes} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst ColumnNum = 4;\r\n\r\nconst range4 = () => _.range(4);\r\n\r\ntype BoxGridProps = {\r\n    gameRecord?: GameRecord;\r\n};\r\n\r\nexport function BoxGridPure({ gameRecord }: BoxGridProps) {\r\n\r\n    useEffect(() => {\r\n        if (gameRecord && !gameRecord.play) {\r\n            setTimeout(() => alert(getLang().GAME_IS_NOT_READY), 300);\r\n        }\r\n    }, [gameRecord && gameRecord.id]);\r\n\r\n    const renderColumn = (rowIndex: number, columnIndex: number) => {\r\n        const boxIndex = rowIndex * ColumnNum + columnIndex;\r\n        const boxInfo = gameRecord ? getSortedBoxes(gameRecord)[boxIndex] : null;\r\n\r\n        if (!boxInfo) {\r\n            return (\r\n                <td key={columnIndex} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <td key={columnIndex}>\r\n                <Box\r\n                    boxIndex={boxIndex}\r\n                    openIndex={boxInfo.openIndex}\r\n                    score={boxInfo.score}\r\n                    boxCover={_.random(1, 3)}\r\n                />\r\n            </td>\r\n        );\r\n    };\r\n\r\n    const renderRow = (rowIndex: number) => (\r\n        <tr key={rowIndex}>\r\n            {range4().map(colIndex => renderColumn(rowIndex, colIndex))}\r\n        </tr>\r\n    );\r\n\r\n    const tableSize = useVPStyle({\r\n        width: 320,\r\n    });\r\n\r\n    return (\r\n        <Table\r\n            className=\"boxGrid\"\r\n            style={tableSize}\r\n        >\r\n            {range4().map(renderRow)}\r\n        </Table>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\n\r\nexport const BoxGrid = inject(\r\n    ({ gamePlayerStore }: BoxGridInjectedStores) => (\r\n        { gameRecord: gamePlayerStore && gamePlayerStore.gameRecord }\r\n    ),\r\n)(BoxGridPure);\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {PlayerInfo} from \"@web3game/common/components\";\r\nimport {GameRecord, PositionType} from \"@web3game/typings/openBox\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {BoxGrid} from \"./BoxGrid\";\r\n\r\nexport type BoxGameDeskProps = {\r\n    gameRecord?: GameRecord;\r\n    playerScores?: object;\r\n    openIndex?: number;\r\n};\r\n\r\nexport function BoxGameDeskPure(\r\n    {\r\n        gameRecord,\r\n        playerScores,\r\n        openIndex = -1,\r\n    }: BoxGameDeskProps\r\n) {\r\n    const heroList = gameRecord ? getSortedHeroList(gameRecord) : [];\r\n    const realTimeScore = (pos: PositionType) => {\r\n        if (!gameRecord || !playerScores) {\r\n            return 0;\r\n        }\r\n\r\n        return (playerScores as any)[pos];\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {heroList.map(\r\n                hero => (\r\n                    <PlayerInfo\r\n                        key={hero.id}\r\n                        imageIndex={hero.imageIndex}\r\n                        score={realTimeScore(hero.pos)}\r\n                        pos={hero.pos}\r\n                        isActive={openIndex % 4 === hero.index}\r\n                    />\r\n                ),\r\n            )}\r\n\r\n            <BoxGrid />\r\n        </>\r\n    );\r\n}\r\n\r\nexport type BoxGameDeskInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\nexport const BoxGameDesk = inject(\r\n    ({ gamePlayerStore }: BoxGameDeskInjectedProps) => ({\r\n        gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n        playerScores: gamePlayerStore ? gamePlayerStore.playerScores : {},\r\n        openIndex: gamePlayerStore ? gamePlayerStore.openIndex : -1,\r\n    }),\r\n)(observer(BoxGameDeskPure));\r\n","import {CSSProperties, useContext} from \"react\";\r\nimport _ from 'lodash';\r\nimport {ViewPortSizeContext} from \"./viewPortSizeHelper\";\r\n\r\nexport function useVPStyle(styles: CSSProperties) {\r\n    const { finalRatio } = useContext(ViewPortSizeContext);\r\n    const getStyleVal = (val: number) => (val ? val * finalRatio : 0);\r\n\r\n    return _.reduce(\r\n        styles,\r\n        (result: any, value: any, key: string) => {\r\n\r\n            if (value && _.isNumber(value)) {\r\n                /* eslint no-param-reassign:0 */\r\n                result[key] = getStyleVal(value);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        styles,\r\n    );\r\n}\r\n","import _ from 'lodash';\r\nimport {Howl} from 'howler';\r\nimport {BoxInfo, GameRecord, HeroInfo, PositionType} from \"@web3game/typings/openBox\";\r\n\r\n\r\nexport const Sounds = {\r\n    boom: require('../statics/sounds/oh_no.mp3'),\r\n    addScore: require('../statics/sounds/add-score.mp3'),\r\n    result: require('../statics/sounds/result.wav'),\r\n};\r\n\r\nexport function playSound(soundSrc: string) {\r\n    const sound = new Howl({\r\n        src: [soundSrc],\r\n    });\r\n\r\n    sound.play();\r\n\r\n}\r\n\r\nexport function getSortedHeroList(gameRecord: GameRecord) {\r\n    const targetSelfPosition = 2;\r\n    const {currentUserId, playerAddrs, playerScores, playerAwards = []} = gameRecord;\r\n\r\n    const currentUserIdIndex = playerAddrs.indexOf(currentUserId);\r\n    const imageIndexsMap = getRandomUsersImageIndex(playerAddrs);\r\n\r\n    let resortedUserIds: string[] = [];\r\n\r\n    const posDiff = currentUserIdIndex - targetSelfPosition;\r\n\r\n    if (posDiff > 0) {\r\n        (() => {\r\n            for (let i = posDiff; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(\r\n                    playerAddrs[i],\r\n                );\r\n            }\r\n\r\n            for (let i = 0; i < posDiff; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else if (posDiff < 0) {\r\n        (() => {\r\n            const startMoveIndex = playerAddrs.length + posDiff;\r\n            for (let i = startMoveIndex; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n\r\n            for (let i = 0; i < startMoveIndex; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else {\r\n        resortedUserIds = _.cloneDeep(playerAddrs);\r\n    }\r\n\r\n    /** @returns {HeroInfo} */\r\n    const genOtherRecord = (pos: PositionType, sortedIndex: number): HeroInfo => {\r\n        const id = resortedUserIds[sortedIndex];\r\n        const index = playerAddrs.indexOf(id);\r\n        return {\r\n            id,\r\n            pos,\r\n            index,\r\n            isCurrentUser: false,\r\n            score: playerScores[index],\r\n            gain: playerAwards[index],\r\n            imageIndex: imageIndexsMap[id],\r\n        };\r\n    };\r\n\r\n    /** @returns {HeroInfo} */\r\n    const getCurrentRecord = (id: string): HeroInfo => {\r\n        const index = playerAddrs.indexOf(id);\r\n\r\n        return {\r\n            id,\r\n            pos: PositionType.bottom,\r\n            index,\r\n            isCurrentUser: true,\r\n            score: playerScores[index],\r\n            imageIndex: imageIndexsMap[id],\r\n            gain: playerAwards[index],\r\n        };\r\n    };\r\n\r\n    return [\r\n        genOtherRecord(PositionType.top, 0),\r\n        genOtherRecord(PositionType.right, 1),\r\n        getCurrentRecord(currentUserId),\r\n        genOtherRecord(PositionType.left, 3),\r\n    ];\r\n}\r\n\r\n\r\nexport function getSortedBoxes(gameRecord: GameRecord): BoxInfo[] {\r\n    const {scores, sequencs, playerAddrs} = gameRecord;\r\n    const sortedHeroList = getSortedHeroList(gameRecord);\r\n\r\n    return scores.map((score: number, boxIndex: number) => {\r\n\r\n        let openIndex = sequencs.indexOf(boxIndex);\r\n\r\n        if (openIndex === -1) {\r\n            openIndex = boxIndex;\r\n        }\r\n\r\n        const playerIndex = openIndex % 4;\r\n\r\n        const heroId = playerAddrs[playerIndex];\r\n\r\n        const heroInfo = _.find(sortedHeroList, hero => hero.id === heroId);\r\n\r\n        return {\r\n            boxIndex,\r\n            score,\r\n            openIndex,\r\n            heroId,\r\n            heroIndex: heroInfo ? heroInfo.index : -1,\r\n\r\n            /** @type {HeroInfo} */\r\n            heroInfo,\r\n            heroPos: heroInfo ? heroInfo.pos : '',\r\n        };\r\n    });\r\n}\r\n\r\n\r\nconst userImageIndexCache: { [name: string]: any } = {};\r\n\r\n/**\r\n * returns {Object} // { userId1: 1, userId2: 9, userId3: 3, userId4: 5}\r\n * */\r\nexport function getRandomUsersImageIndex(userIds: string[]): { [name: string]: any } {\r\n    const getRandomValue = () => _.random(1, 12);\r\n\r\n    const getRandomValueNotIn = (values: number[]) => {\r\n        let value: number;\r\n\r\n        do {\r\n            value = getRandomValue();\r\n        } while (values.indexOf(value) >= 0);\r\n\r\n        return value;\r\n    };\r\n\r\n    return _.reduce(\r\n        userIds,\r\n        (im: { [name: string]: number }, userId: string) => {\r\n            const imageIndexMap = im;\r\n\r\n            let imageIndex = userImageIndexCache[userId];\r\n            const prevImageIndexList = Object.values(imageIndexMap) as number[];\r\n\r\n            if (imageIndex === undefined || prevImageIndexList.indexOf(imageIndex) >= 0) {\r\n                imageIndex = getRandomValueNotIn(prevImageIndexList);\r\n            }\r\n\r\n            imageIndexMap[userId] = imageIndex;\r\n\r\n            userImageIndexCache[userId] = imageIndex;\r\n\r\n            return imageIndexMap;\r\n        },\r\n        {},\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport enum PreferMode {\r\n    width = 'width',\r\n    height = 'height',\r\n}\r\n\r\nexport const initialSizeInfo = {\r\n    perfectHeight: 0,\r\n    perfectWidth: 0,\r\n\r\n\r\n    preferMaxWidth: 0,\r\n    preferMaxHeight: 0,\r\n\r\n    winWidth: 0,\r\n    winHeight: 0,\r\n\r\n    widthHeightRatio: 1,\r\n\r\n    adjustedWidth: 0,\r\n    adjustedHeight: 0,\r\n\r\n    finalRatio: 1,\r\n\r\n    preferMode: PreferMode.width,\r\n};\r\n\r\nexport type InitialSizeInfo = typeof initialSizeInfo;\r\n\r\nexport const ViewPortSizeContext = React.createContext(initialSizeInfo);\r\n\r\n\r\nexport const getWidthHeightRatio = (width: number, height: number) => width / height;\r\n\r\nexport const getWinSize = () => ({\r\n    winHeight: window.innerHeight,\r\n    winWidth: window.innerWidth,\r\n});\r\n\r\n\r\n\r\ntype AdjustedSizeInfoType = Partial<InitialSizeInfo> & {\r\n    preferMode?: PreferMode;\r\n};\r\n\r\nexport const getAdjustedSizeInfo = (\r\n    {\r\n        perfectHeight = 0,\r\n        perfectWidth = 0,\r\n\r\n        preferMaxHeight: _preferMaxHeight,\r\n        preferMaxWidth: _preferMaxWidth,\r\n\r\n\r\n        winWidth = 0,\r\n        winHeight = 0,\r\n        preferMode = PreferMode.width,\r\n    }: AdjustedSizeInfoType\r\n): AdjustedSizeInfoType => {\r\n    const widthHeightRatio = getWidthHeightRatio(perfectWidth, perfectHeight);\r\n    let preferMaxHeight = _preferMaxHeight || perfectHeight;\r\n    const preferMaxWidth = _preferMaxWidth || perfectWidth;\r\n\r\n    let adjustedWidth = perfectWidth;\r\n    let adjustedHeight = perfectHeight;\r\n    let resizeRatioByWidth = perfectWidth / winWidth;\r\n    let finalRatio = 1;\r\n\r\n    if (preferMode === PreferMode.width) {\r\n        if (preferMaxWidth < winWidth) {\r\n            adjustedWidth = preferMaxWidth;\r\n        } else {\r\n            adjustedWidth = winWidth;\r\n        }\r\n\r\n\r\n        resizeRatioByWidth = adjustedWidth / perfectWidth;\r\n\r\n        adjustedHeight = perfectHeight * resizeRatioByWidth;\r\n        preferMaxHeight = perfectHeight * resizeRatioByWidth;\r\n        finalRatio = resizeRatioByWidth;\r\n    }\r\n\r\n\r\n    return {\r\n        adjustedWidth,\r\n        adjustedHeight,\r\n\r\n        widthHeightRatio,\r\n\r\n        preferMaxWidth,\r\n        preferMaxHeight,\r\n\r\n        finalRatio,\r\n\r\n        preferMode,\r\n    };\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    title: string;\r\n    className?: string;\r\n    onQuit?: () => void;\r\n    children: React.ReactElement | React.ReactElement[];\r\n};\r\n\r\nconst Modal = posed.div({\r\n    enter: {\r\n        y: 0,\r\n        opacity: 1,\r\n        delay: 300,\r\n        transition: {\r\n            y: { type: 'spring', stiffness: 1000, damping: 15 },\r\n            default: { duration: 300 }\r\n        }\r\n    },\r\n    exit: {\r\n        y: 50,\r\n        opacity: 0,\r\n        transition: { duration: 150 }\r\n    }\r\n});\r\n\r\nconst Backdrop = posed.div({\r\n    enter: { opacity: 0.8 },\r\n    exit: { opacity: 0 }\r\n});\r\n\r\nexport function PopupPure(\r\n    {\r\n        title,\r\n        className = '',\r\n        onQuit,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    useEffect(() => {\r\n        setIsVisible(true);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`popup ${className}`}>\r\n            <PoseGroup>\r\n                {\r\n                    isVisible && [\r\n                        (\r\n                            <Backdrop\r\n                                key=\"popupBackdrop\"\r\n                                className=\"popupBackdrop\"\r\n                                onClick={onQuit}\r\n                                onTouchEnd={onQuit}\r\n                                onKeyDown={() => undefined}\r\n                                role=\"button\"\r\n                                tabIndex={0}\r\n                                aria-label=\"click to close popup\"\r\n                            />\r\n                        ),\r\n                        (\r\n                            <Modal key=\"popupWrapper\" className=\"popupWrapper\">\r\n                                <div className=\"popupContainer\">\r\n                                    <div className=\"popupHeader\">\r\n                                        <button\r\n                                            onClick={onQuit}\r\n                                            onTouchEnd={onQuit}\r\n                                            type=\"button\"\r\n                                            className=\"popupQuitButton\"\r\n                                        >\r\n                                            Quit\r\n                                        </button>\r\n                                        <h2>{title}</h2>\r\n                                    </div>\r\n                                    <div className=\"popupBody\">\r\n                                        <div className=\"popupContent\">\r\n                                            {children}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Modal>\r\n                        )\r\n                    ]\r\n                }\r\n            </PoseGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype PopupProps = { gameUIStore: GameUIStore };\r\n\r\nexport const Popup = inject(({ gameUIStore }: PopupProps, { onQuit }) => ({\r\n    onQuit: _.debounce(() => {\r\n        if (onQuit) {\r\n            onQuit();\r\n        }\r\n\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    }, 50),\r\n}))(PopupPure);\r\n","import React, {CSSProperties} from 'react';\r\n\r\nexport type TableProps = {\r\n    children?: React.ReactElement | React.ReactElement[] | null;\r\n    tHead?: React.ReactElement | React.ReactElement[];\r\n    className?: string;\r\n    bodyClassName?: string;\r\n    style?: CSSProperties;\r\n};\r\n\r\n\r\nexport function Table(\r\n    {\r\n        tHead,\r\n        children,\r\n        className = \"\",\r\n        bodyClassName = \"\",\r\n        style,\r\n    }: TableProps\r\n) {\r\n    return (\r\n        <table className={className} style={style}>\r\n            <thead>{tHead}</thead>\r\n            <tbody className={bodyClassName}>{children}</tbody>\r\n        </table>\r\n    );\r\n}\r\n"],"sourceRoot":""}