{"version":3,"sources":["common/components/popups/Popup.tsx","common/components/Table.tsx","common/components/layouts/HistoryButton.tsx","common/components/layouts/QuitGameButton.tsx","common/components/popups/PopupRenderer.tsx","common/components/popups/PopupManger.tsx","common/components/layouts/GameLayout.tsx","common/components/MoneySelector.tsx","common/components/Scene.tsx","common/components/index.ts","common/components/HistoryListPopup.tsx","common/components/PlayerInfo.tsx","typings/openBox/index.ts","openBox/core/openBoxConstants.ts","common/utils/NavigatorEvents.ts","common/utils/navigatorHelper.ts","common/utils/EventEmitter.ts","openBox/OpenBoxGame.tsx","common/styles/images/beijingtu.png","common/components/AuthForm.tsx","apis/openbox/getOpenBoxAPI.ts","common/components/viewPort/ViewPortSizeProvider.tsx","openBox/statics/sounds/oh_no.mp3","openBox/statics/sounds/add-score.mp3","openBox/statics/sounds/result.wav","openBox/components/GameResultPopup.tsx","openBox/core/functions/getOpenBoxMoneyList.ts","common/utils/watchAccountChange.ts","openBox/stores/HistoryStore.ts","openBox/eventBus/openBoxEvents.ts","openBox/stores/GamePlayerStore.ts","openBox/stores/index.ts","openBox/components/Box.tsx","openBox/components/BoxGrid.tsx","openBox/components/BoxGameDesk.tsx","common/components/viewPort/getElStyle.ts","openBox/core/gameHelper.ts","common/components/viewPort/viewPortSizeHelper.tsx"],"names":["Modal","posed","div","enter","y","opacity","delay","transition","type","stiffness","damping","default","duration","exit","Backdrop","Popup","inject","_ref2","_ref3","gameUIStore","onQuit","_","debounce","setVisiblePopup","PopupNames","none","_ref","title","_ref$className","className","children","_useState","useState","_useState2","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isVisible","setIsVisible","useEffect","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","concat","react_pose__WEBPACK_IMPORTED_MODULE_3__","key","onClick","onTouchEnd","onKeyDown","role","tabIndex","aria-label","__webpack_require__","d","__webpack_exports__","Table","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","tHead","_ref$bodyClassName","bodyClassName","style","HistoryButton","onShowHistory","buttonSize","useVPStyle","paddingTop","fontSize","width","height","react_default","getLang","OPEN_BOX_PAGE","HISTORY","React","memo","QuitGameButtonPure","onQuitPlayer","onQuitGame","isPlayerActive","BACK","defaultProps","QuitGameButton","scene","GameUIScene","gamePlayer","PopupRenderer","name","isActive","visiblePopup","PopupManagerContext","createContext","PopupManager","_ref$popups","popups","_usePopupManager","popupsList","slicedToArray","setPopups","showPopup","popup","toConsumableArray","closePopup","filter","p","usePopupManager","popupList","Provider","value","react","map","renderer","GameLayout","_useContext","useContext","ViewPortSizeContext","adjustedHeight","applicationSize","adjustedWidth","gameContentStyle","src","BackgroundUrl","alt","MoneySelector","moneyList","onSelect","money","text","Scene","HistoryListPopup","PlayerInfo","module","mobx_react__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_2__","moment__WEBPACK_IMPORTED_MODULE_2___default","_web3game_lang__WEBPACK_IMPORTED_MODULE_3__","_popups_Popup__WEBPACK_IMPORTED_MODULE_4__","_Table__WEBPACK_IMPORTED_MODULE_5__","_utils_compose__WEBPACK_IMPORTED_MODULE_6__","compose","historyStore","displayList","onPlayGame","tHeader","HISTORY_NO","AMOUNT","HISTORY_DATE","renderListItem","useCallback","item","id","issueNo","moment","time","format","listContent","imageIndex","_ref$isActive","score","pos","isInPosition","setIsInPosition","userImageSize","userScoreSize","top","left","normalPosition","positionType","PositionType","topBase","right","leftBase","bottom","getPlayerPosition","scoreInfo","Player","active","orgPosition","newPos","clone","getActivePosition","inActive","react_pose__WEBPACK_IMPORTED_MODULE_4__","pose","OpenBoxTimeSpan","PrepareBoxTimeSpan","OpeningDuration","BoxStatus","closed","opened","opening","EventKeys","back","push","NavigatorEvents","EventEmitter","historyStack","HashSplitter","pushHash","hash","currentHash","document","location","pushPage","_x","_x2","_pushPage","apply","this","arguments","_callee","navigator","router","options","routerName","_args","regenerator_default","wrap","_context","prev","next","length","undefined","stop","popPage","window","history","addEventListener","event","newURL","oldURL","componentName","replace","emit","emitBack","last","pop","popPageInner","replaceState","Collection","collection","_this$collection","forEach","fn","_EventEmitterBase","eventKeys","_this","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","removeEventListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setMaxListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","eventName","_this2","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__","prototype","removeFn","removeListener","o","dispose","on","_collection$getCollec","createCollection","getCollection","removeAll","EventEmitterBase","OpenBoxStores","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","stores","commonStores","gamePlayerStore","accountStore","betEvent","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","openBoxAPI","gameRecord","getOpenBoxAPI","sent","loadGame","setScene","startGame","onGameEnd","gameResult","quit","moneySelector","onQuitGameResult","onSubmitAuth","params","_callee2","submitGame","_context2","getCommonAPI","betType","nums","amounts","betAddress","updateDataVersion","t0","alert","onSelectMoney","authForm","prepareRecords","records","currentUserId","record","random","OpenBoxGame","_ref4","dataVersion","_callee3","_ref6","getHistoryList","getBetAddress","list","_context3","setDisplayList","account","setBetAddress","react__WEBPACK_IMPORTED_MODULE_3___default","_web3game_common_components__WEBPACK_IMPORTED_MODULE_7__","_web3game_common_components_AuthForm__WEBPACK_IMPORTED_MODULE_11__","onSubmit","_components_GameResultPopup__WEBPACK_IMPORTED_MODULE_18__","react_onsenui__WEBPACK_IMPORTED_MODULE_4__","_web3game_common_components_viewPort_ViewPortSizeProvider__WEBPACK_IMPORTED_MODULE_15__","perfectHeight","perfectWidth","preferMaxWidth","mobx_react__WEBPACK_IMPORTED_MODULE_6__","assign","getOpenBoxMoneyList","_components_BoxGameDesk__WEBPACK_IMPORTED_MODULE_19__","watchAccountChange","exports","AuthForm","_web3game_lang__WEBPACK_IMPORTED_MODULE_2__","_popups_Popup__WEBPACK_IMPORTED_MODULE_3__","popupData","ttBalance","tokenBalance","gas","_ref$money","handleSubmit","CONFIRM_SUBMIT","ACCOUNT","TT_BALANCE","TOKEN_BALANCE","marginTop","SUBMIT","_getOpenBoxAPI","isUsingMockAPI","abrupt","e","then","bind","m","Promise","all","ViewPortSizeProvider","_ref$preferMode","preferMode","PreferMode","_ref$preferMaxWidth","preferMaxHeight","getWinSize","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_useState2$","winHeight","winWidth","setWinSize","staticSizeInfo","adjustedSizeInfo","getAdjustedSizeInfo","sizeInfo","extend","react__WEBPACK_IMPORTED_MODULE_2___default","GameResultPopup","_web3game_common_components_popups_Popup__WEBPACK_IMPORTED_MODULE_2__","_web3game_common_components_Table__WEBPACK_IMPORTED_MODULE_3__","_web3game_common_components__WEBPACK_IMPORTED_MODULE_4__","_core_gameHelper__WEBPACK_IMPORTED_MODULE_5__","toNumber","num","web3","heroList","getSortedHeroList","sort","b","comparedTo","hero","index","slice","fromWei","gain","_web3game_lang__WEBPACK_IMPORTED_MODULE_0__","OPEN_BOX_MONEY_TEXT_1","OPEN_BOX_MONEY_TEXT_2","OPEN_BOX_MONEY_TEXT_3","OPEN_BOX_MONEY_TEXT_4","OPEN_BOX_MONEY_TEXT_5","mobx_react__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","injectMainAccountData","Component","locale","observer","_class","HistoryStore","classCallCheck","initializerDefineProperty","_descriptor","createClass","applyDecoratedDescriptor","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","ON_GAME_NOT_READY","openBoxEvents","_EventEmitter","GlobalEvent","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","onGameReadyStatusChange","triggerGameReadyStatus","isReady","inherits","GamePlayerStore_class","GamePlayerStore","start","end","pause","resume","beginOpenBox","finishOpenBox","GamePlayerStore_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","playerTimeout","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","resetPlayer","play","isPaused","resolve","playBoxByIndex","isEnd","playSound","Sounds","result","clearTimeout","openIndex","_this3","openingBox","sortedBoxes","getSortedBoxes","waitTimeout","box","finishedOpenIndex","heroPos","playerScores","boomedHeroId","heroId","boom","addScore","oldScore","actionFn","_this4","timeout","setTimeout","fasterTimes","clearPlayerTimeout","_this5","_this6","AnimatedClassNames","defineProperty","Box","_dec","_temp","_class2","_React$Component","isBoxOpened","_this$props","props","_this$props2","boxIndex","isOpened","isOpening","status","_this$props3","boxCover","isBoomer","getStatus","boomClassName","scoreClassName","boxCoverClassName","boxClassName","boxWrapperClassName","boxSize","getAnimatedClassByStatus","ColumnNum","range4","range","BoxGrid","GAME_IS_NOT_READY","tableSize","rowIndex","colIndex","columnIndex","boxInfo","Box_Box","renderColumn","BoxGameDesk","_ref$openIndex","Fragment","components","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","_viewPortSizeHelper__WEBPACK_IMPORTED_MODULE_2__","styles","finalRatio","reduce","val","isNumber","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","howler__WEBPACK_IMPORTED_MODULE_1__","_web3game_typings_openBox__WEBPACK_IMPORTED_MODULE_2__","require","soundSrc","Howl","playerAddrs","_gameRecord$playerAwa","playerAwards","currentUserIdIndex","indexOf","imageIndexsMap","userIds","getRandomValue","im","userId","imageIndexMap","userImageIndexCache","prevImageIndexList","values","getRandomValueNotIn","getRandomUsersImageIndex","resortedUserIds","posDiff","i","startMoveIndex","cloneDeep","genOtherRecord","sortedIndex","isCurrentUser","getCurrentRecord","scores","sequencs","sortedHeroList","heroInfo","find","heroIndex","initialSizeInfo","widthHeightRatio","innerHeight","innerWidth","_ref$perfectHeight","_ref$perfectWidth","_preferMaxHeight","_preferMaxWidth","_ref$winWidth","resizeRatioByWidth"],"mappings":"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","file":"static/js/openBox.4a1484a2.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    title: string;\r\n    className?: string;\r\n    onQuit?: () => void;\r\n    children: React.ReactElement | React.ReactElement[];\r\n};\r\n\r\nconst Modal = posed.div({\r\n    enter: {\r\n        y: 0,\r\n        opacity: 1,\r\n        delay: 300,\r\n        transition: {\r\n            y: { type: 'spring', stiffness: 1000, damping: 15 },\r\n            default: { duration: 300 }\r\n        }\r\n    },\r\n    exit: {\r\n        y: 50,\r\n        opacity: 0,\r\n        transition: { duration: 150 }\r\n    }\r\n});\r\n\r\nconst Backdrop = posed.div({\r\n    enter: { opacity: 0.8 },\r\n    exit: { opacity: 0 }\r\n});\r\n\r\nexport function PopupPure(\r\n    {\r\n        title,\r\n        className = '',\r\n        onQuit,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    useEffect(() => {\r\n        setIsVisible(true);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`popup ${className}`}>\r\n            <PoseGroup>\r\n                {\r\n                    isVisible && [\r\n                        (\r\n                            <Backdrop\r\n                                key=\"popupBackdrop\"\r\n                                className=\"popupBackdrop\"\r\n                                onClick={onQuit}\r\n                                onTouchEnd={onQuit}\r\n                                onKeyDown={() => undefined}\r\n                                role=\"button\"\r\n                                tabIndex={0}\r\n                                aria-label=\"click to close popup\"\r\n                            />\r\n                        ),\r\n                        (\r\n                            <Modal key=\"popupWrapper\" className=\"popupWrapper\">\r\n                                <div className=\"popupContainer\">\r\n                                    <div className=\"popupHeader\">\r\n                                        <button\r\n                                            onClick={onQuit}\r\n                                            onTouchEnd={onQuit}\r\n                                            type=\"button\"\r\n                                            className=\"popupQuitButton\"\r\n                                        >\r\n                                            Quit\r\n                                        </button>\r\n                                        <h2>{title}</h2>\r\n                                    </div>\r\n                                    <div className=\"popupBody\">\r\n                                        <div className=\"popupContent\">\r\n                                            {children}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Modal>\r\n                        )\r\n                    ]\r\n                }\r\n            </PoseGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype PopupProps = { gameUIStore: GameUIStore };\r\n\r\nexport const Popup = inject(({ gameUIStore }: PopupProps, { onQuit }) => ({\r\n    onQuit: _.debounce(() => {\r\n        if (onQuit) {\r\n            onQuit();\r\n        }\r\n\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    }, 50),\r\n}))(PopupPure);\r\n","import React, {CSSProperties} from 'react';\r\n\r\nexport type TableProps = {\r\n    children?: React.ReactElement | React.ReactElement[] | null;\r\n    tHead?: React.ReactElement | React.ReactElement[];\r\n    className?: string;\r\n    bodyClassName?: string;\r\n    style?: CSSProperties;\r\n};\r\n\r\n\r\nexport function Table(\r\n    {\r\n        tHead,\r\n        children,\r\n        className = \"\",\r\n        bodyClassName = \"\",\r\n        style,\r\n    }: TableProps\r\n) {\r\n    return (\r\n        <table className={className} style={style}>\r\n            <thead>{tHead}</thead>\r\n            <tbody className={bodyClassName}>{children}</tbody>\r\n        </table>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\ntype HistoryButtonProps = {\r\n    onShowHistory: () => void;\r\n};\r\n\r\nexport function HistoryButton(\r\n    {\r\n        onShowHistory,\r\n    }: HistoryButtonProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n    return (\r\n        <button\r\n            className=\"gameHistoryButton\"\r\n            onClick={onShowHistory}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().OPEN_BOX_PAGE.HISTORY}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default React.memo(HistoryButton);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {GameUIScene} from \"../../utils/constants\";\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\ntype QuitGameButtonProps = {\r\n    onQuitPlayer?: () => void;\r\n    onQuitGame?: () => void;\r\n    isPlayerActive: boolean;\r\n};\r\n\r\nexport function QuitGameButtonPure(\r\n    {\r\n        onQuitPlayer,\r\n        onQuitGame,\r\n        isPlayerActive,\r\n    }: QuitGameButtonProps,\r\n) {\r\n    const onClick = isPlayerActive ? onQuitPlayer : onQuitGame;\r\n\r\n    if (!onClick) {\r\n        return null;\r\n    }\r\n\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"gameQuitButton\"\r\n            onClick={onClick}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().BACK}\r\n        </button>\r\n    );\r\n}\r\n\r\nQuitGameButtonPure.defaultProps = {\r\n    isPlayerActive: false,\r\n};\r\n\r\ntype QuitGameButtonInjectedProps = {\r\n    gameUIStore?: GameUIStore;\r\n    onQuitGame: () => void;\r\n    onQuitPlayer: () => void;\r\n};\r\n\r\nexport const QuitGameButton = inject(\r\n    (\r\n        { gameUIStore }: QuitGameButtonInjectedProps,\r\n    ) => {\r\n        const isPlayerActive = gameUIStore && gameUIStore.scene === GameUIScene.gamePlayer;\r\n\r\n        return {\r\n            isPlayerActive,\r\n        };\r\n    },\r\n)(QuitGameButtonPure);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    name: PopupNames;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function PopupRendererPure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    return isActive ? children() : null;\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const PopupRenderer = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.visiblePopup === name,\r\n    }),\r\n)(PopupRendererPure);\r\n","import React, {Fragment, useState} from 'react';\r\nimport {PopupRenderer} from \"./PopupRenderer\";\r\nimport {PopupElement} from \"..\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\n\r\nexport type PopupManagerProps = {\r\n    popups?: PopupElement[];\r\n};\r\n\r\nconst PopupManagerContext = React.createContext({});\r\n\r\nfunction usePopupManager(popupsList: PopupElement[]) {\r\n    const [popups, setPopups] = useState(popupsList);\r\n\r\n    return {\r\n        popups,\r\n        showPopup: (popup: PopupElement) => {\r\n            setPopups([\r\n                ...popups,\r\n                popup,\r\n            ]);\r\n        },\r\n        closePopup: (name: PopupNames) => {\r\n            setPopups(popups.filter((p: any) => p.name !== name));\r\n        },\r\n    };\r\n}\r\n\r\nexport function PopupManager({ popups = [] }: PopupManagerProps) {\r\n\r\n    const { showPopup, popups: popupList } = usePopupManager(popups);\r\n\r\n    return (\r\n        <PopupManagerContext.Provider value={{ showPopup }}>\r\n            <Fragment>\r\n                {\r\n                    popupList.map(({ name, renderer }) => (\r\n                        <PopupRenderer key={name} name={name}>\r\n                            {renderer}\r\n                        </PopupRenderer>\r\n                    ))\r\n                }\r\n            </Fragment>\r\n        </PopupManagerContext.Provider>\r\n    );\r\n\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {HistoryButton} from \"./HistoryButton\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\nimport {QuitGameButton} from \"./QuitGameButton\";\r\nimport {PopupManager} from \"../popups/PopupManger\";\r\nimport {ViewPortSizeContext} from \"../viewPort/viewPortSizeHelper\";\r\n\r\nimport BackgroundUrl from '../../styles/images/beijingtu.png';\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\nexport type PopupElement = { name: PopupNames; renderer: () => React.ReactElement }\r\n\r\nexport type GameLayoutProps = {\r\n    children?: React.ReactElement | React.ReactElement[];\r\n    onShowHistory: () => void;\r\n    onQuitGame?: () => void;\r\n    onQuitPlayer?: () => void;\r\n    popups?: PopupElement[];\r\n};\r\n\r\nexport function GameLayout(\r\n    {\r\n        children,\r\n        onShowHistory,\r\n        popups = [],\r\n        onQuitGame,\r\n        onQuitPlayer,\r\n    }: GameLayoutProps,\r\n) {\r\n    const {\r\n        adjustedHeight,\r\n        adjustedWidth,\r\n    } = useContext(ViewPortSizeContext);\r\n\r\n    const applicationSize = {\r\n        width: adjustedWidth,\r\n        height: adjustedHeight,\r\n    };\r\n\r\n    const gameContentStyle = useVPStyle({\r\n        paddingTop: 460,\r\n    });\r\n\r\n    return (\r\n        <div className=\"gameApplication\" style={applicationSize}>\r\n            <img src={BackgroundUrl} alt=\"background\" className=\"backgroundImage\" />\r\n            <HistoryButton onShowHistory={onShowHistory} />\r\n            <QuitGameButton\r\n                onQuitGame={onQuitGame}\r\n                onQuitPlayer={onQuitPlayer}\r\n            />\r\n            <div className=\"gameDesktop\">\r\n                <div className=\"gameDesktopContent\" style={gameContentStyle}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n\r\n            <PopupManager popups={popups} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(GameLayout);\r\n","import React from 'react';\r\nimport {useVPStyle} from \"./viewPort/getElStyle\";\r\n\r\ntype MoneySelectorPureProps = {\r\n    moneyList: any[];\r\n    onSelect: (money: number) => void;\r\n};\r\n\r\nexport function MoneySelectorPure(\r\n    {\r\n        moneyList,\r\n        onSelect,\r\n    }: MoneySelectorPureProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        width: 180,\r\n        height: 90,\r\n        fontSize: 24,\r\n    });\r\n\r\n    return (\r\n        <div className=\"moneySelector\">\r\n            {moneyList.map(({ money, text }) => (\r\n                <div key={money}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`moneySelectorButton moneySelectorButton_${money}`}\r\n                        style={buttonSize}\r\n                        onClick={() => onSelect(money)}\r\n                    >\r\n                        {text}\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const MoneySelector = React.memo(MoneySelectorPure);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../stores/GameUIStore\";\r\nimport {GameUIScene} from \"../utils/constants\";\r\n\r\ntype ScenePureProps = {\r\n    name: GameUIScene;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function ScenePure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: ScenePureProps,\r\n) {\r\n    if (!isActive) {\r\n        return null;\r\n    }\r\n\r\n    return children();\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const Scene = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.scene === name,\r\n    }),\r\n)(ScenePure);\r\n","export * from './layouts/GameLayout';\r\nexport * from './layouts/HistoryButton';\r\nexport * from './HistoryListPopup';\r\nexport * from './MoneySelector';\r\nexport * from './PlayerInfo';\r\nexport * from './Scene';\r\nexport * from './popups/PopupRenderer';\r\n","import React from 'react';\r\nimport {hot} from \"react-hot-loader\";\r\nimport {inject} from \"mobx-react\";\r\nimport moment from \"moment\";\r\nimport {BetEvent} from '@web3game/typings/openBox';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {Popup} from \"./popups/Popup\";\r\nimport {HistoryStore} from \"../../openBox/stores/HistoryStore\";\r\nimport {Table} from \"./Table\";\r\nimport {compose} from \"../utils/compose\";\r\n\r\n\r\ntype HistoryListProps = {\r\n    onPlayGame: (betEvent: BetEvent) => void;\r\n    displayList?: [];\r\n};\r\n\r\nexport function HistoryListPure(\r\n    {\r\n        onPlayGame,\r\n        displayList,\r\n    }: HistoryListProps,\r\n) {\r\n    const tHeader = (\r\n        <tr>\r\n            <th className=\"historyNo\">{getLang().OPEN_BOX_PAGE.HISTORY_NO}</th>\r\n            <th>{getLang().AMOUNT}</th>\r\n            <th className=\"historyDate\">{getLang().OPEN_BOX_PAGE.HISTORY_DATE}</th>\r\n            <th className=\"historyAction\">{\" \"}</th>\r\n        </tr>\r\n    );\r\n\r\n    const renderListItem = React.useCallback(\r\n        (item: any) => (\r\n            <tr key={item.id}>\r\n                <td className=\"historyNo\">{item.issueNo}</td>\r\n                <td>{item.money}</td>\r\n                <td className=\"historyDate\">{moment(item.time).format('MM/DD HH:mm')}</td>\r\n                <td className=\"historyAction\">\r\n                    <button\r\n                        className=\"historyActionButton\"\r\n                        onClick={() => onPlayGame(item)}\r\n                        type=\"button\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const listContent = displayList ? displayList.map(renderListItem) : null;\r\n\r\n    return (\r\n        <Popup title={getLang().OPEN_BOX_PAGE.HISTORY}>\r\n            <Table\r\n                tHead={tHeader}\r\n                className=\"historyList\"\r\n                bodyClassName=\"purchaseListTbody\"\r\n            >\r\n                {listContent}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    historyStore?: HistoryStore;\r\n};\r\n\r\nexport const HistoryListPopup = compose<HistoryListProps>(\r\n    hot(module),\r\n    inject(\r\n        ({ historyStore }: BoxGridInjectedStores) => ({\r\n            displayList: historyStore ? historyStore.displayList : [],\r\n        }),\r\n    )\r\n)(HistoryListPure);\r\n","import React, {CSSProperties, useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {hot} from \"react-hot-loader\";\r\nimport {PositionType} from \"@web3game/typings/openBox\";\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {useVPStyle} from \"./viewPort/getElStyle\";\r\nimport {compose} from \"../utils/compose\";\r\n\r\nexport type PlayerInfoProps = {\r\n    imageIndex: number;\r\n    isActive?: boolean;\r\n    id?: any;\r\n    score?: number;\r\n    pos?: PositionType;\r\n};\r\n\r\nexport function PlayerInfoPure(\r\n    {\r\n        imageIndex,\r\n        isActive = false,\r\n        score,\r\n        pos,\r\n    }: PlayerInfoProps,\r\n) {\r\n    const [isInPosition, setIsInPosition] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsInPosition(true);\r\n    }, []);\r\n\r\n    const userImageSize = useVPStyle({\r\n        width: 100,\r\n        height: 100,\r\n    });\r\n    const userScoreSize = useVPStyle({\r\n        width: 55,\r\n        height: 63,\r\n        fontSize: 24,\r\n        top: -70,\r\n        left: 24,\r\n        paddingTop: 16,\r\n    });\r\n\r\n    const getPlayerPosition = (positionType: PositionType | undefined): CSSProperties => {\r\n\r\n        const topBase = 200;\r\n        const leftBase = 340;\r\n        const verticalDiff = 460;\r\n        const horizontalDiff = 280;\r\n\r\n        switch (positionType) {\r\n\r\n            case PositionType.top:\r\n                return useVPStyle({\r\n                    top: topBase + 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.right:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase + horizontalDiff,\r\n                });\r\n\r\n            case PositionType.bottom:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff * 2 - 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.left:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase - horizontalDiff,\r\n                });\r\n\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const normalPosition = getPlayerPosition(pos);\r\n\r\n    const getActivePosition = (\r\n        positionType: PositionType | undefined,\r\n        orgPosition: CSSProperties,\r\n    ) => {\r\n        const newPos: any = _.clone(orgPosition);\r\n        const activeDiff = 50;\r\n\r\n        switch (pos) {\r\n            case PositionType.top:\r\n                newPos.top += activeDiff;\r\n                break;\r\n            case PositionType.right:\r\n                newPos.left -= activeDiff;\r\n                break;\r\n\r\n            case PositionType.bottom:\r\n                newPos.top -= activeDiff;\r\n                break;\r\n            case PositionType.left:\r\n                newPos.left += activeDiff;\r\n                break;\r\n\r\n        }\r\n\r\n        return newPos;\r\n    };\r\n\r\n    const scoreInfo = score !== null ? (\r\n        <span className=\"userScore\" style={userScoreSize}>\r\n            {score}\r\n        </span>\r\n    ) : null;\r\n\r\n    const Player = posed.div({\r\n        enter: normalPosition,\r\n        active: getActivePosition(pos, normalPosition),\r\n        inActive: normalPosition\r\n    });\r\n\r\n    const className = `playerInfo userImage userImage${imageIndex} ${pos} ${isActive ? 'active' : ''}`;\r\n\r\n    return (\r\n        <PoseGroup>\r\n            {isInPosition && (\r\n                <Player\r\n                    key=\"player\"\r\n                    pose={isActive ? 'active' : 'inActive'}\r\n                    className={className}\r\n                    style={userImageSize}\r\n                >\r\n                    {scoreInfo}\r\n                </Player>\r\n            )}\r\n        </PoseGroup>\r\n    );\r\n}\r\n\r\nexport const PlayerInfo = compose<PlayerInfoProps>(\r\n    hot(module),\r\n)(PlayerInfoPure);\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport type GameRecord = {\r\n    id?: any;\r\n    currentUserId: any;\r\n    play: boolean;\r\n    scores: number[];\r\n    sequencs: number[];\r\n    playerScores: BigNumber[];\r\n    playerAwards: BigNumber[];\r\n    playerAddrs: string[];\r\n};\r\n\r\nexport type BetEvent = {\r\n    id?: number;\r\n    issueNo: number;\r\n    money: number;\r\n    time: number;\r\n    currentUserId: string;\r\n}\r\n\r\n// export type PositionType = 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport enum PositionType {\r\n    top = 'top',\r\n    bottom = 'bottom',\r\n    left = 'left',\r\n    right = 'right'\r\n}\r\n\r\nexport type PlayerScoreByPosition = {\r\n    top: number;\r\n    bottom: number;\r\n    left: number;\r\n    right: number;\r\n};\r\n\r\nexport type BoxInfo = {\r\n    boxIndex: number;\r\n    score: number;\r\n    openIndex: number;\r\n    heroId: any;\r\n    heroIndex: number;\r\n\r\n    /** @type {HeroInfo} */\r\n    heroInfo: any;\r\n    heroPos: any;\r\n};\r\n\r\nexport type HeroInfo = {\r\n    id: any;\r\n    index: number;\r\n    pos: any;\r\n    isCurrentUser: boolean;\r\n    score: BigNumber;\r\n    imageIndex: number;\r\n    gain: BigNumber;\r\n};\r\n","export const OpenBoxTimeSpan = 1000; // ms\r\nexport const PrepareBoxTimeSpan = 1500; //\r\nexport const OpeningDuration = 650; // ms\r\n\r\nexport const BoxStatus = {\r\n    closed: 'closed',\r\n    opened: 'opened',\r\n    opening: 'opening',\r\n};\r\n\r\nexport const HeroPositions = {\r\n    top: 'top',\r\n    right: 'right',\r\n    bottom: 'bottom',\r\n    left: 'left',\r\n};\r\n","import EventEmitter from \"./EventEmitter\";\r\n\r\nconst EventKeys = {\r\n    back: 'back',\r\n    push: 'push',\r\n};\r\n\r\nconst NavigatorEvents = new EventEmitter();\r\n\r\nexport function emitBack(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.back, componentName);\r\n}\r\n\r\nexport function onBack(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.back, fn);\r\n}\r\n\r\nexport function emitPush(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.push, componentName);\r\n}\r\n\r\nexport function onPush(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.push, fn);\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {Navigator, PageTransitionOptions} from \"react-onsenui\";\r\nimport {emitBack} from \"./NavigatorEvents\";\r\n\r\n\r\nconst historyStack: object[] = [];\r\n\r\nexport const hasHistory = () => historyStack.length > 0;\r\n\r\nconst HashSplitter = '|';\r\n\r\nfunction pushHash(hash: string) {\r\n    const currentHash = document.location.hash;\r\n    document.location.hash = `${currentHash}${currentHash ? HashSplitter : ''}${hash}`;\r\n}\r\n\r\nexport async function pushPage(\r\n    navigator: Navigator,\r\n    router: any,\r\n    options: PageTransitionOptions = {\r\n    },\r\n) {\r\n    const routerName = router.key;\r\n    pushHash(routerName);\r\n    historyStack.push({ navigator, router, options, routerName });\r\n    await navigator.pushPage(router, options);\r\n}\r\n\r\nexport function popPage() {\r\n    window.history.back();\r\n}\r\n\r\nfunction popPageInner(componentName: string) {\r\n    const { navigator, routerName } = _.last(historyStack) as any;\r\n\r\n    historyStack.pop();\r\n\r\n    if (routerName === componentName) {\r\n        navigator.popPage();\r\n    }\r\n}\r\n\r\n// handle history back\r\nwindow.addEventListener('hashchange', (event) => {\r\n    const { newURL, oldURL } = event;\r\n    if (newURL.length < oldURL.length) {\r\n        const componentName = oldURL.replace(newURL, '').replace('#', '');\r\n        emitBack(componentName);\r\n        popPageInner(componentName);\r\n    }\r\n});\r\n\r\nif (window.location.hash) {\r\n    window.history.replaceState(null, '', '#');\r\n}\r\n\r\n\r\n","/**\r\n * Created by trump on 16/6/18.\r\n */\r\nimport {EventEmitter as EventEmitterBase} from \"events\";\r\n\r\n\r\nclass Collection {\r\n    private collection: (() => void)[] = [];\r\n\r\n    /** @returns {Collection} */\r\n    public push(...fn: (() => void)[]) {\r\n        this.collection.push(...fn);\r\n        return this;\r\n    }\r\n\r\n    public removeAll() {\r\n        this.collection.forEach(fn => fn());\r\n        this.collection = [];\r\n    }\r\n\r\n    public getCollection() {\r\n        return this.collection;\r\n    }\r\n}\r\n\r\nexport class EventEmitter extends EventEmitterBase {\r\n\r\n    protected EventKeys = {};\r\n\r\n    private removeEventListeners: (() => void)[] = [];\r\n\r\n    public constructor(eventKeys?: object) {\r\n        super();\r\n\r\n        /** @field */\r\n        this.EventKeys = { ...eventKeys };\r\n\r\n        this.setMaxListeners(9999);\r\n    }\r\n\r\n    // @ts-ignore\r\n    public on(eventName: string, fn: (() => void) | any) {\r\n        super.on(eventName, fn);\r\n\r\n        const removeFn = () => {\r\n            this.removeListener(eventName, fn);\r\n            this.removeEventListeners = this.removeEventListeners.filter(o => o !== removeFn);\r\n        };\r\n\r\n        removeFn.eventName = eventName;\r\n\r\n        if (!this.removeEventListeners) {\r\n            this.removeEventListeners = [];\r\n        }\r\n\r\n        this.removeEventListeners.push(removeFn);\r\n\r\n        return removeFn;\r\n    }\r\n\r\n    public one(eventName: string, fn: (...args: any[]) => void) {\r\n        const dispose = this.on(eventName, (...args: any[]) => {\r\n            fn(...args);\r\n            dispose();\r\n        });\r\n\r\n        return dispose;\r\n    }\r\n\r\n    public removeByName(name: string) {\r\n        this.removeEventListeners.forEach((fn) => {\r\n            if ((fn as any).eventName === name) fn();\r\n        });\r\n\r\n        this.removeEventListeners = this.removeEventListeners.filter(\r\n            o => (o as any).eventName !== name,\r\n        );\r\n    }\r\n\r\n    public removeAll() {\r\n        this.removeEventListeners.forEach(fn => fn());\r\n        this.removeEventListeners = [];\r\n    }\r\n\r\n    /** @returns Collection */\r\n    public createCollection() {\r\n        return new Collection();\r\n    }\r\n\r\n    public listenToMany(...listeners: (() => void)[]) {\r\n        const collection = this.createCollection();\r\n        collection.getCollection().push(...listeners);\r\n        return () => collection.removeAll();\r\n    }\r\n}\r\n\r\nexport default EventEmitter;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {Page} from \"react-onsenui\";\r\nimport _ from 'lodash';\r\nimport {Provider} from \"mobx-react\";\r\nimport {hot} from \"react-hot-loader\";\r\nimport {\r\n    GameLayout,\r\n    HistoryListPopup,\r\n    MoneySelector,\r\n    PopupElement,\r\n    Scene,\r\n} from \"@web3game/common/components\";\r\nimport * as commonStores from '@web3game/common/stores';\r\nimport {GameUIScene, PopupNames} from \"@web3game/common/utils/constants\";\r\nimport {popPage} from \"@web3game/common/utils/navigatorHelper\";\r\nimport {BetEvent} from \"@web3game/typings/openBox\";\r\nimport {AuthForm} from \"@web3game/common/components/AuthForm\";\r\nimport {getCommonAPI} from \"@web3game/apis/common/getCommonAPI\";\r\nimport {getOpenBoxAPI} from \"@web3game/apis/openbox/getOpenBoxAPI\";\r\nimport '@web3game/common/styles/common.scss';\r\nimport {ViewPortSizeProvider} from \"@web3game/common/components/viewPort/ViewPortSizeProvider\";\r\nimport * as stores from './stores';\r\nimport './styles/openBox.scss';\r\nimport {GameResultPopup} from \"./components/GameResultPopup\";\r\nimport {BoxGameDesk} from \"./components/BoxGameDesk\";\r\nimport {getOpenBoxMoneyList} from \"./core/functions/getOpenBoxMoneyList\";\r\nimport {compose} from \"@web3game/common/utils/compose\";\r\nimport {watchAccountChange} from \"@web3game/common/utils/watchAccountChange\";\r\n\r\n// @ts-ignore\r\nwindow.OpenBoxStores = {\r\n    ...stores,\r\n    ...commonStores,\r\n};\r\n\r\n// region store helpers\r\nconst { gamePlayerStore } = stores;\r\nconst { gameUIStore, accountStore } = commonStores;\r\n\r\nconst onShowHistory = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.history);\r\n};\r\n\r\nconst onPlayGame = (betEvent: BetEvent) => {\r\n    (async () => {\r\n        const openBoxAPI = await getOpenBoxAPI();\r\n\r\n        const gameRecord = await openBoxAPI.loadGame(betEvent);\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n        gameUIStore.setScene(GameUIScene.gamePlayer);\r\n        gamePlayerStore.startGame(gameRecord);\r\n\r\n        // 游戏结束弹出弹窗\r\n        gamePlayerStore.onGameEnd(() => gameUIStore.setVisiblePopup(PopupNames.gameResult));\r\n\r\n    })();\r\n};\r\n\r\nconst onQuitPlayer = () => {\r\n    gamePlayerStore.quit();\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n};\r\n\r\nconst onQuitGameResult = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.none);\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n    gamePlayerStore.quit();\r\n};\r\n\r\nconst onSubmitAuth = (params: any) => {\r\n    (async () => {\r\n        const { submitGame } = await getCommonAPI();\r\n        try {\r\n            await submitGame({\r\n                ...params,\r\n                betType: 3,\r\n                issueNo: 0,\r\n                nums: [],\r\n                amounts: [],\r\n                betAddress: gamePlayerStore.betAddress,\r\n            });\r\n            accountStore.updateDataVersion();\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    })();\r\n\r\n};\r\n\r\nconst onSelectMoney = (money: number) => {\r\n    gameUIStore.setVisiblePopup(PopupNames.authForm, { money });\r\n};\r\n\r\nconst prepareRecords = (records: any[], currentUserId: string): object[] => _.map(\r\n    records,\r\n    record => ({\r\n        ...record,\r\n        currentUserId,\r\n        id: record.id || _.random(0),\r\n    }),\r\n);\r\n\r\n\r\n// endregion\r\n\r\ntype OpenBoxGameProps = {\r\n    dataVersion: string;\r\n};\r\n\r\nexport function OpenBoxGame(\r\n    {\r\n        dataVersion,\r\n    }: OpenBoxGameProps\r\n) {\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { getHistoryList, getBetAddress } = await getOpenBoxAPI();\r\n            const list = await getHistoryList();\r\n            stores.historyStore.setDisplayList(prepareRecords(list, accountStore.account));\r\n            const betAddress = await getBetAddress();\r\n            gamePlayerStore.setBetAddress(betAddress);\r\n        })();\r\n\r\n        // unbind listeners of gamePlayerStore\r\n        return () => {\r\n            gamePlayerStore.quit();\r\n        };\r\n    }, [dataVersion]);\r\n\r\n    const popups: PopupElement[] = [\r\n        { name: PopupNames.history, renderer: () => <HistoryListPopup onPlayGame={onPlayGame} /> },\r\n        { \r\n            name: PopupNames.authForm,\r\n            renderer: () => (\r\n                <AuthForm \r\n                    onSubmit={onSubmitAuth}\r\n                />\r\n            ), \r\n        },\r\n        {\r\n            name: PopupNames.gameResult,\r\n            renderer: () => (<GameResultPopup onQuit={onQuitGameResult} />),\r\n        },\r\n    ];\r\n\r\n    const onQuitGame = useCallback(() => popPage(), []);\r\n\r\n    return (\r\n        <Page className=\"openBoxGamePage\">\r\n            <ViewPortSizeProvider\r\n                perfectHeight={1344}\r\n                perfectWidth={750}\r\n                preferMaxWidth={600}\r\n            >\r\n                <Provider {...commonStores} {...stores}>\r\n                    <GameLayout\r\n                        onShowHistory={onShowHistory}\r\n                        onQuitGame={onQuitGame}\r\n                        onQuitPlayer={onQuitPlayer}\r\n                        popups={popups}\r\n                    >\r\n\r\n                        <Scene name={GameUIScene.moneySelector}>\r\n                            {() => (\r\n                                <MoneySelector\r\n                                    moneyList={getOpenBoxMoneyList()}\r\n                                    onSelect={onSelectMoney}\r\n                                />\r\n                            )}\r\n                        </Scene>\r\n\r\n                        <Scene name={GameUIScene.gamePlayer}>\r\n                            {() => <BoxGameDesk />}\r\n                        </Scene>\r\n                    </GameLayout>\r\n                </Provider>\r\n            </ViewPortSizeProvider>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default compose<OpenBoxGameProps>(\r\n    hot(module),\r\n    React.memo,\r\n    watchAccountChange\r\n)(OpenBoxGame);\r\n","module.exports = __webpack_public_path__ + \"static/media/beijingtu.03f0d956.png\";","import React, {useCallback} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {Popup} from \"./popups/Popup\";\r\nimport {AccountStore} from \"../stores/AccountStore\";\r\nimport {GameUIStore} from '../stores/GameUIStore';\r\n\r\ntype AuthFormPureProps = {\r\n    onSubmit: (params: any) => void;\r\n    account?: string;\r\n    ttBalance?: any;\r\n    tokenBalance?: any;\r\n    gas?: any;\r\n    money?: number;\r\n};\r\n\r\nexport function AuthFormPure(\r\n    {\r\n        onSubmit,\r\n        account,\r\n        ttBalance,\r\n        tokenBalance,\r\n        money = 0,\r\n    }: AuthFormPureProps,\r\n) {\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        onSubmit({\r\n            account,\r\n            money,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Popup title={getLang().CONFIRM_SUBMIT} className=\"gameAuthFormPopup\">\r\n            <div className=\"gameAuthForm\">\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().ACCOUNT}&nbsp;:&nbsp;\r\n                    {account}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TT_BALANCE}&nbsp;:&nbsp;\r\n                    {ttBalance}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TOKEN_BALANCE}&nbsp;:&nbsp;\r\n                    {tokenBalance}\r\n                </div>\r\n                <hr />\r\n                <div className=\"gameAuthFormField\" style={{marginTop: '20px'}}>\r\n                    <button type=\"submit\" onClick={handleSubmit}>\r\n                        {getLang().SUBMIT}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype AuthFormInjectedProps = {\r\n    accountStore?: AccountStore;\r\n    gameUIStore?: GameUIStore;\r\n};\r\n\r\n\r\nexport const AuthForm = inject(\r\n    (\r\n        {\r\n            accountStore,\r\n            gameUIStore,\r\n        }: AuthFormInjectedProps,\r\n    ) => {\r\n        if (!accountStore || !gameUIStore) {\r\n            return {};\r\n        }\r\n\r\n        const { popupData: {money} } = gameUIStore;\r\n\r\n        const { \r\n            account, \r\n            ttBalance, \r\n            tokenBalance, \r\n            gas, \r\n        } = accountStore;\r\n\r\n        return { account, ttBalance, tokenBalance, gas, money };\r\n    },\r\n)(AuthFormPure);\r\n","import {OpenBoxAPI} from './OpenBoxAPI';\r\nimport {isUsingMockAPI} from \"../isUsingMockAPI\";\r\n\r\n\r\nexport async function getOpenBoxAPI(): Promise<OpenBoxAPI> {\r\n\r\n    if (isUsingMockAPI()) {\r\n        return import('./OpenBoxAPIMock').then(m => m.default);\r\n    }\r\n\r\n    return import('./OpenBoxAPIReal').then(m => m.default);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport _ from 'lodash';\r\nimport {\r\n    getAdjustedSizeInfo,\r\n    getWinSize,\r\n    InitialSizeInfo,\r\n    PreferMode,\r\n    ViewPortSizeContext,\r\n} from \"./viewPortSizeHelper\";\r\n\r\n\r\nexport type ViewPortSizeProps = {\r\n    children: React.ReactNode | React.ReactElement;\r\n\r\n    perfectHeight: number;\r\n    perfectWidth: number;\r\n\r\n    preferMaxWidth?: number;\r\n    preferMaxHeight?: number;\r\n\r\n    preferMode?: PreferMode;\r\n}\r\n\r\nexport const ViewPortSizeProvider = React.memo(\r\n    (\r\n        {\r\n            preferMode = PreferMode.width,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxHeight = 0,\r\n            preferMaxWidth = 900,\r\n\r\n            children,\r\n        }: ViewPortSizeProps\r\n    ) => {\r\n\r\n        const [{ winHeight, winWidth }, setWinSize] = useState(getWinSize());\r\n\r\n        useEffect(() => {\r\n            window.addEventListener(\r\n                'resize',\r\n                () => {\r\n                    setWinSize(getWinSize());\r\n                }\r\n            );\r\n        }, []);\r\n\r\n        const { Provider } = ViewPortSizeContext;\r\n\r\n        const staticSizeInfo = {\r\n            winHeight,\r\n            winWidth,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxWidth,\r\n        };\r\n\r\n        const adjustedSizeInfo = getAdjustedSizeInfo({\r\n            ...staticSizeInfo,\r\n            preferMode,\r\n        });\r\n\r\n        const sizeInfo = _.extend<InitialSizeInfo>({}, staticSizeInfo, adjustedSizeInfo);\r\n\r\n        return (\r\n            <Provider value={sizeInfo}>\r\n                {children}\r\n            </Provider>\r\n        );\r\n    },\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/oh_no.4b9dfc8c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/add-score.e14110a0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/result.e786a7c7.wav\";","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {Popup} from \"@web3game/common/components/popups/Popup\";\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {PlayerInfo} from \"@web3game/common/components\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\n\r\n\r\ntype GameResultPopupProps = {\r\n    onQuit: () => void;\r\n    gameRecord?: GameRecord;\r\n    web3?: any;\r\n};\r\n\r\nconst toNumber = (num: any) => {\r\n    if (num && num.toNumber) {\r\n        return num.toNumber();\r\n    }\r\n\r\n    return num;\r\n};\r\n\r\nexport function GameResultPopupPure(\r\n    {\r\n        onQuit,\r\n        gameRecord,\r\n        web3,\r\n    }: GameResultPopupProps,\r\n) {\r\n\r\n    if (!web3) {\r\n        return null;\r\n    }\r\n\r\n    const heroList = !gameRecord ? [] : getSortedHeroList(gameRecord)\r\n        .sort((a, b) => {\r\n\r\n            if (a.score && b.score && a.score.comparedTo && b.score.comparedTo) {\r\n                return b.score.comparedTo(a.score);\r\n            }\r\n\r\n            // @ts-ignore\r\n            return a - b;\r\n        });\r\n\r\n    const tHead = (\r\n        <tr>\r\n            <th className=\"rankIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerName\">\r\n                玩家\r\n            </th>\r\n            <th className=\"payerScore\">\r\n                钻石                \r\n            </th>\r\n            <th className=\"payerAward\">\r\n                奖励\r\n            </th>\r\n        </tr>\r\n    );\r\n    \r\n    return (\r\n        <Popup title=\"排行\" onQuit={onQuit} className=\"gameResultPopup\">\r\n            <Table tHead={tHead} className=\"gameResult\">\r\n                {heroList.map((hero, index) => (\r\n                    <tr key={hero.id}>\r\n                        <td className=\"rankIcon\">\r\n                            <div className={`rankImage rankImage${index + 1}`}>{index}</div>\r\n                        </td>\r\n                        <td className=\"playerIcon\">\r\n                            <PlayerInfo id={hero.id} imageIndex={hero.imageIndex} />\r\n                        </td>\r\n                        <td className=\"playerName\">{hero.id.slice(-6)}</td>\r\n                        <td className=\"payerScore\">{toNumber(hero.score)}</td>\r\n                        <td className=\"payerAward\">{web3.fromWei(toNumber(hero.gain), 'ether')}</td>\r\n                    </tr>\r\n                ))}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype GameResultPopupInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    web3?: any;\r\n};\r\n\r\nexport const GameResultPopup = inject(\r\n    ({ gamePlayerStore, web3 }: GameResultPopupInjectedProps) => (\r\n        {\r\n            gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n            web3,\r\n        }\r\n    ),\r\n)(GameResultPopupPure);\r\n","import {getLang} from \"@web3game/lang\";\r\n\r\nexport const getOpenBoxMoneyList = () => [\r\n    { money: 10, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_1 },\r\n    { money: 2000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_2 },\r\n    { money: 5000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_3 },\r\n    { money: 10000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_4 },\r\n    { money: 50000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_5 },\r\n];\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {AccountStore} from \"../stores/AccountStore\";\r\nimport {compose} from \"./compose\";\r\n\r\ntype RC<P> = React.ComponentType<P> | React.FunctionComponent<P> ;\r\n\r\n\r\ntype WatchLocaleInjectedProps = { accountStore: AccountStore };\r\n\r\nexport function injectMainAccountData<P>(Component: RC<P>) {\r\n    return inject(\r\n        (\r\n            {\r\n                accountStore,\r\n            }: WatchLocaleInjectedProps,\r\n        ) => (\r\n            {\r\n                locale: accountStore.locale,\r\n                dataVersion: accountStore.dataVersion,\r\n                updateDataVersion: () => accountStore.updateDataVersion(),\r\n            }\r\n        ),\r\n    )(Component);\r\n}\r\n\r\nexport function watchAccountChange<P>(Component: RC<P>) {\r\n    return compose<P>(\r\n        observer,\r\n        injectMainAccountData,\r\n    )(Component);\r\n}\r\n\r\n\r\n","import {action, observable} from \"mobx\";\r\n\r\n\r\nexport class HistoryStore {\r\n\r\n    @observable\r\n    public displayList: object[] = [];\r\n\r\n    @action\r\n    public setDisplayList(history: object[]) {\r\n        this.displayList = history;\r\n    }\r\n\r\n}\r\n\r\nexport const historyStore = new HistoryStore();\r\n","import {EventEmitter} from \"../../common/utils/EventEmitter\";\r\n\r\nconst ON_GAME_NOT_READY = 'ON_GAME_NOT_READY';\r\n\r\nexport class GlobalEvent extends EventEmitter {\r\n\r\n    public onGameReadyStatusChange = (fn: () => void) => this.on(ON_GAME_NOT_READY, fn);\r\n\r\n    public triggerGameReadyStatus = (isReady: boolean) => this.emit(ON_GAME_NOT_READY, isReady);\r\n\r\n}\r\n\r\nexport const openBoxEvents = new GlobalEvent({});\r\n\r\nexport default openBoxEvents;\r\n","import {action, observable} from \"mobx\";\r\nimport * as _ from 'lodash';\r\nimport {BoxInfo, GameRecord, PlayerScoreByPosition, PositionType} from \"@web3game/typings/openBox\";\r\n\r\nimport {EventEmitter} from \"../../common/utils/EventEmitter\";\r\nimport {OpenBoxTimeSpan, OpeningDuration, PrepareBoxTimeSpan} from \"../core/openBoxConstants\";\r\n\r\n\r\nimport {getSortedBoxes, playSound, Sounds} from \"../core/gameHelper\";\r\nimport {openBoxEvents} from \"../eventBus/openBoxEvents\";\r\n\r\n/**\r\n * @typedef {Object} GameRecord\r\n * @property {[Number]} scores\r\n * @property {[Number]} sequencs\r\n * @property {[Number]} playerScores\r\n * */\r\n\r\n\r\n\r\nconst getInitialScores = (): PlayerScoreByPosition => ({\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n});\r\n\r\nexport class GamePlayerStore extends EventEmitter {\r\n\r\n    public EventKeys = {\r\n        start: 'start',\r\n        end: 'end',\r\n        pause: 'pause',\r\n        resume: 'resume',\r\n        beginOpenBox: 'beginOpenBox',\r\n        finishOpenBox: 'finishOpenBox',\r\n    };\r\n\r\n    @observable\r\n    public betAddress = '';\r\n\r\n    @action\r\n    public setBetAddress(betAddress: string) {\r\n        this.betAddress = betAddress;\r\n    }\r\n\r\n    @observable\r\n    public gameRecord: GameRecord | null = null;\r\n\r\n    @observable\r\n    public openIndex = -1;\r\n\r\n    @observable\r\n    public finishedOpenIndex: number = -1;\r\n\r\n    @observable\r\n    public openingBox: BoxInfo | null | undefined = null;\r\n\r\n    @observable\r\n    public isPaused = false;\r\n\r\n    private playerTimeout = 0;\r\n\r\n    @observable\r\n    public playerScores: PlayerScoreByPosition = getInitialScores();\r\n\r\n    @observable\r\n    public boomedHeroId = null;\r\n\r\n    @observable\r\n    public fasterTimes = 1; // 播放时间间隔倍数\r\n\r\n\r\n    /**\r\n     * @param {CurrentGameRecord} gameRecord\r\n     * */\r\n    @action\r\n    public startGame(gameRecord: GameRecord): Promise<any> {\r\n        this.resetPlayer();\r\n        if (!gameRecord) return Promise.resolve();\r\n\r\n        if (gameRecord.play === false) {\r\n            this.isPaused = true;\r\n            openBoxEvents.triggerGameReadyStatus(false);\r\n        } else {\r\n            openBoxEvents.triggerGameReadyStatus(true);\r\n        }\r\n\r\n        this.gameRecord = gameRecord;\r\n\r\n        this.emit(this.EventKeys.start);\r\n\r\n        return Promise.resolve(\r\n            this.playBoxByIndex(0),\r\n        ).then((isEnd) => {\r\n            if (isEnd && !this.isPaused) {\r\n                this.emit(this.EventKeys.end);\r\n                playSound(Sounds.result);\r\n            }\r\n        });\r\n    }\r\n\r\n    @action\r\n    public restartGame() {\r\n        if (this.gameRecord) {\r\n            this.startGame(this.gameRecord);\r\n        }\r\n    }\r\n\r\n    @action\r\n    private clearPlayerTimeout() {\r\n        if (this.playerTimeout) {\r\n            clearTimeout(this.playerTimeout);\r\n            this.playerTimeout = 0;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public playBoxByIndex(openIndex: number): any {\r\n        if (!this.gameRecord) {\r\n            return false;\r\n        }\r\n\r\n        this.openIndex = openIndex;\r\n\r\n        this.openingBox = null;\r\n\r\n        const sortedBoxes = getSortedBoxes(this.gameRecord);\r\n\r\n        const getBoxByOpenIndex = (index: number) => _.find(\r\n            sortedBoxes,\r\n            box => box.openIndex === index,\r\n        );\r\n\r\n        if (openIndex < sortedBoxes.length && openIndex >= 0) {\r\n\r\n            return this.waitTimeout(\r\n                action('onPrepareBox', () => {\r\n                    const openingBox = getBoxByOpenIndex(openIndex);\r\n\r\n                    this.openingBox = openingBox;\r\n\r\n                    this.emit(this.EventKeys.beginOpenBox, openIndex, openingBox);\r\n\r\n                    return this.waitTimeout(\r\n                        action('onBoxOpen', () => {\r\n\r\n                            if (this.isPaused) {\r\n                                return false;\r\n                            }\r\n\r\n\r\n                            this.finishedOpenIndex = openIndex;\r\n\r\n                            this.emit(this.EventKeys.finishOpenBox, openIndex, openingBox);\r\n\r\n                            if (openingBox) {\r\n                                const heroPos = openingBox.heroPos as PositionType;\r\n\r\n                                if (openingBox.score === 0) {\r\n                                    this.playerScores[heroPos] = 0;\r\n                                    this.boomedHeroId = openingBox.heroId;\r\n                                    playSound(Sounds.boom);\r\n                                } else {\r\n                                    playSound(Sounds.addScore);\r\n                                    const oldScore = this.playerScores[heroPos];\r\n                                    this.playerScores[heroPos] = oldScore\r\n                                        + openingBox.score;\r\n                                    this.boomedHeroId = null;\r\n                                }\r\n                            }\r\n\r\n                            return this.waitTimeout(\r\n                                () => this.playBoxByIndex(openIndex + 1),\r\n                                OpeningDuration,\r\n                            );\r\n\r\n                        }),\r\n                        OpenBoxTimeSpan,\r\n                    );\r\n                }),\r\n                PrepareBoxTimeSpan,\r\n            );\r\n\r\n\r\n        }\r\n\r\n        this.openIndex = -1;\r\n        this.openingBox = null;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    @action\r\n    public clearBoomer() {\r\n        this.boomedHeroId = null;\r\n    }\r\n\r\n    public waitTimeout(actionFn: () => any, timeout = OpeningDuration) {\r\n        return new Promise((resolve) => {\r\n            // @ts-ignore\r\n            this.playerTimeout = setTimeout(() => resolve(actionFn()), timeout * this.fasterTimes);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public toggleFaster() {\r\n        if (this.fasterTimes === 1) {\r\n            this.fasterTimes = 0.2;\r\n        } else {\r\n            this.fasterTimes = 1;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public pause = () => {\r\n        this.isPaused = true;\r\n        this.clearPlayerTimeout();\r\n    };\r\n\r\n    @action\r\n    public resume = () => {\r\n        this.isPaused = false;\r\n        this.playBoxByIndex(this.openIndex);\r\n    };\r\n\r\n    @action\r\n    public resetPlayer() {\r\n        this.fasterTimes = 1;\r\n        this.gameRecord = null;\r\n        this.openingBox = null;\r\n        this.openIndex = -1;\r\n        this.finishedOpenIndex = -1;\r\n        this.isPaused = false;\r\n        this.boomedHeroId = null;\r\n        this.playerScores = getInitialScores();\r\n        this.clearPlayerTimeout();\r\n    }\r\n\r\n    @action\r\n    public quit() {\r\n        this.resetPlayer();\r\n        this.removeAll();\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onBeginOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.beginOpenBox, fn);\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onFinishOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.finishOpenBox, fn);\r\n    }\r\n\r\n    public onStart(fn: () => void) {\r\n        return this.on(this.EventKeys.start, fn);\r\n    }\r\n\r\n    public onGameEnd(fn: () => void) {\r\n        return this.on(this.EventKeys.end, fn);\r\n    }\r\n\r\n    public onPause(fn: () => void) {\r\n        return this.on(this.EventKeys.pause, fn);\r\n    }\r\n\r\n    public onResume(fn: () => void) {\r\n        return this.on(this.EventKeys.resume, fn);\r\n    }\r\n\r\n}\r\n\r\nexport const gamePlayerStore = new GamePlayerStore();\r\n","export {historyStore} from './HistoryStore';\r\nexport {gamePlayerStore} from './GamePlayerStore';\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {BoxStatus} from \"../core/openBoxConstants\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst AnimatedClassNames = {\r\n    [BoxStatus.opening]: 'animated swing active',\r\n};\r\n\r\ntype BoxInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\ntype BoxProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    boxIndex: number;\r\n    openIndex: number;\r\n    score: number;\r\n    boxCover: number;\r\n};\r\n\r\n@inject(\r\n    (stores: BoxInjectedStores) => ({\r\n        gamePlayerStore: stores.gamePlayerStore,\r\n    }),\r\n)\r\n@observer\r\nexport class Box extends React.Component<BoxProps> {\r\n\r\n    static defaultProps = {\r\n        boxCover: 0,\r\n    };\r\n\r\n    getStatus() {\r\n        const { boxIndex, gamePlayerStore } = this.props;\r\n        const isOpened = this.isBoxOpened();\r\n        const isOpening = gamePlayerStore && gamePlayerStore.openingBox\r\n            && (gamePlayerStore.openingBox.boxIndex === boxIndex);\r\n\r\n        if (isOpened) {\r\n            return BoxStatus.opened;\r\n        }\r\n\r\n        return isOpening ? BoxStatus.opening : BoxStatus.closed;\r\n    }\r\n\r\n    getAnimatedClassByStatus(status: string) {\r\n        const { gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore || gamePlayerStore.isPaused) {\r\n            return '';\r\n        }\r\n\r\n        return AnimatedClassNames[status] || '';\r\n    }\r\n\r\n    isBoxOpened = () => {\r\n        const { openIndex, gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore) {\r\n            return false;\r\n        }\r\n\r\n        return openIndex <= gamePlayerStore.finishedOpenIndex;\r\n    };\r\n\r\n    render() {\r\n        const { score, boxCover } = this.props;\r\n        const isBoomer = score === 0;\r\n        const status = this.getStatus();\r\n        const boomClassName = isBoomer ? 'boom' : '';\r\n        const scoreClassName = score >= 5 ? 'largerThen5' : 'lessThen5';\r\n        const boxCoverClassName = `box${boxCover}`;\r\n        const boxClassName = `${boomClassName} ${scoreClassName} score score${score}`;\r\n\r\n        const boxWrapperClassName = `${boxCoverClassName}`;\r\n        const boxSize = useVPStyle({\r\n            width: 100,\r\n            height: 132,\r\n        });\r\n\r\n        return (\r\n            <div\r\n                className={`box box-${status} ${boxWrapperClassName} ${this.getAnimatedClassByStatus(status)} xk`}\r\n                style={boxSize}\r\n            >\r\n                {!this.isBoxOpened() ? null : (\r\n                    <div className={boxClassName}>\r\n                        {isBoomer ? null : ` `}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport _ from 'lodash';\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {Box} from \"./Box\";\r\nimport {getSortedBoxes} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst ColumnNum = 4;\r\n\r\nconst range4 = () => _.range(4);\r\n\r\ntype BoxGridProps = {\r\n    gameRecord?: GameRecord;\r\n};\r\n\r\nexport function BoxGridPure({ gameRecord }: BoxGridProps) {\r\n\r\n    useEffect(() => {\r\n        if (gameRecord && !gameRecord.play) {\r\n            setTimeout(() => alert(getLang().GAME_IS_NOT_READY), 300);\r\n        }\r\n    }, [gameRecord && gameRecord.id]);\r\n\r\n    const renderColumn = (rowIndex: number, columnIndex: number) => {\r\n        const boxIndex = rowIndex * ColumnNum + columnIndex;\r\n        const boxInfo = gameRecord ? getSortedBoxes(gameRecord)[boxIndex] : null;\r\n\r\n        if (!boxInfo) {\r\n            return (\r\n                <td key={columnIndex} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <td key={columnIndex}>\r\n                <Box\r\n                    boxIndex={boxIndex}\r\n                    openIndex={boxInfo.openIndex}\r\n                    score={boxInfo.score}\r\n                    boxCover={_.random(1, 3)}\r\n                />\r\n            </td>\r\n        );\r\n    };\r\n\r\n    const renderRow = (rowIndex: number) => (\r\n        <tr key={rowIndex}>\r\n            {range4().map(colIndex => renderColumn(rowIndex, colIndex))}\r\n        </tr>\r\n    );\r\n\r\n    const tableSize = useVPStyle({\r\n        width: 320,\r\n    });\r\n\r\n    return (\r\n        <Table\r\n            className=\"boxGrid\"\r\n            style={tableSize}\r\n        >\r\n            {range4().map(renderRow)}\r\n        </Table>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\n\r\nexport const BoxGrid = inject(\r\n    ({ gamePlayerStore }: BoxGridInjectedStores) => (\r\n        { gameRecord: gamePlayerStore && gamePlayerStore.gameRecord }\r\n    ),\r\n)(BoxGridPure);\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {PlayerInfo} from \"@web3game/common/components\";\r\nimport {GameRecord, PositionType} from \"@web3game/typings/openBox\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {BoxGrid} from \"./BoxGrid\";\r\n\r\nexport type BoxGameDeskProps = {\r\n    gameRecord?: GameRecord;\r\n    playerScores?: object;\r\n    openIndex?: number;\r\n};\r\n\r\nexport function BoxGameDeskPure(\r\n    {\r\n        gameRecord,\r\n        playerScores,\r\n        openIndex = -1,\r\n    }: BoxGameDeskProps\r\n) {\r\n    const heroList = gameRecord ? getSortedHeroList(gameRecord) : [];\r\n    const realTimeScore = (pos: PositionType) => {\r\n        if (!gameRecord || !playerScores) {\r\n            return 0;\r\n        }\r\n\r\n        return (playerScores as any)[pos];\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {heroList.map(\r\n                hero => (\r\n                    <PlayerInfo\r\n                        key={hero.id}\r\n                        imageIndex={hero.imageIndex}\r\n                        score={realTimeScore(hero.pos)}\r\n                        pos={hero.pos}\r\n                        isActive={openIndex % 4 === hero.index}\r\n                    />\r\n                ),\r\n            )}\r\n\r\n            <BoxGrid />\r\n        </>\r\n    );\r\n}\r\n\r\nexport type BoxGameDeskInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\nexport const BoxGameDesk = inject(\r\n    ({ gamePlayerStore }: BoxGameDeskInjectedProps) => ({\r\n        gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n        playerScores: gamePlayerStore ? gamePlayerStore.playerScores : {},\r\n        openIndex: gamePlayerStore ? gamePlayerStore.openIndex : -1,\r\n    }),\r\n)(observer(BoxGameDeskPure));\r\n","import {CSSProperties, useContext} from \"react\";\r\nimport _ from 'lodash';\r\nimport {ViewPortSizeContext} from \"./viewPortSizeHelper\";\r\n\r\nexport function useVPStyle(styles: CSSProperties) {\r\n    const { finalRatio } = useContext(ViewPortSizeContext);\r\n    const getStyleVal = (val: number) => (val ? val * finalRatio : 0);\r\n\r\n    return _.reduce(\r\n        styles,\r\n        (result: any, value: any, key: string) => {\r\n\r\n            if (value && _.isNumber(value)) {\r\n                /* eslint no-param-reassign:0 */\r\n                result[key] = getStyleVal(value);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        styles,\r\n    );\r\n}\r\n","import _ from 'lodash';\r\nimport {Howl} from 'howler';\r\nimport {BoxInfo, GameRecord, HeroInfo, PositionType} from \"@web3game/typings/openBox\";\r\n\r\n\r\nexport const Sounds = {\r\n    boom: require('../statics/sounds/oh_no.mp3'),\r\n    addScore: require('../statics/sounds/add-score.mp3'),\r\n    result: require('../statics/sounds/result.wav'),\r\n};\r\n\r\nexport function playSound(soundSrc: string) {\r\n    const sound = new Howl({\r\n        src: [soundSrc],\r\n    });\r\n\r\n    sound.play();\r\n\r\n}\r\n\r\nexport function getSortedHeroList(gameRecord: GameRecord) {\r\n    const targetSelfPosition = 2;\r\n    const {currentUserId, playerAddrs, playerScores, playerAwards = []} = gameRecord;\r\n\r\n    const currentUserIdIndex = playerAddrs.indexOf(currentUserId);\r\n    const imageIndexsMap = getRandomUsersImageIndex(playerAddrs);\r\n\r\n    let resortedUserIds: string[] = [];\r\n\r\n    const posDiff = currentUserIdIndex - targetSelfPosition;\r\n\r\n    if (posDiff > 0) {\r\n        (() => {\r\n            for (let i = posDiff; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(\r\n                    playerAddrs[i],\r\n                );\r\n            }\r\n\r\n            for (let i = 0; i < posDiff; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else if (posDiff < 0) {\r\n        (() => {\r\n            const startMoveIndex = playerAddrs.length + posDiff;\r\n            for (let i = startMoveIndex; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n\r\n            for (let i = 0; i < startMoveIndex; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else {\r\n        resortedUserIds = _.cloneDeep(playerAddrs);\r\n    }\r\n\r\n    /** @returns {HeroInfo} */\r\n    const genOtherRecord = (pos: PositionType, sortedIndex: number): HeroInfo => {\r\n        const id = resortedUserIds[sortedIndex];\r\n        const index = playerAddrs.indexOf(id);\r\n        return {\r\n            id,\r\n            pos,\r\n            index,\r\n            isCurrentUser: false,\r\n            score: playerScores[index],\r\n            gain: playerAwards[index],\r\n            imageIndex: imageIndexsMap[id],\r\n        };\r\n    };\r\n\r\n    /** @returns {HeroInfo} */\r\n    const getCurrentRecord = (id: string): HeroInfo => {\r\n        const index = playerAddrs.indexOf(id);\r\n\r\n        return {\r\n            id,\r\n            pos: PositionType.bottom,\r\n            index,\r\n            isCurrentUser: true,\r\n            score: playerScores[index],\r\n            imageIndex: imageIndexsMap[id],\r\n            gain: playerAwards[index],\r\n        };\r\n    };\r\n\r\n    return [\r\n        genOtherRecord(PositionType.top, 0),\r\n        genOtherRecord(PositionType.right, 1),\r\n        getCurrentRecord(currentUserId),\r\n        genOtherRecord(PositionType.left, 3),\r\n    ];\r\n}\r\n\r\n\r\nexport function getSortedBoxes(gameRecord: GameRecord): BoxInfo[] {\r\n    const {scores, sequencs, playerAddrs} = gameRecord;\r\n    const sortedHeroList = getSortedHeroList(gameRecord);\r\n\r\n    return scores.map((score: number, boxIndex: number) => {\r\n\r\n        let openIndex = sequencs.indexOf(boxIndex);\r\n\r\n        if (openIndex === -1) {\r\n            openIndex = boxIndex;\r\n        }\r\n\r\n        const playerIndex = openIndex % 4;\r\n\r\n        const heroId = playerAddrs[playerIndex];\r\n\r\n        const heroInfo = _.find(sortedHeroList, hero => hero.id === heroId);\r\n\r\n        return {\r\n            boxIndex,\r\n            score,\r\n            openIndex,\r\n            heroId,\r\n            heroIndex: heroInfo ? heroInfo.index : -1,\r\n\r\n            /** @type {HeroInfo} */\r\n            heroInfo,\r\n            heroPos: heroInfo ? heroInfo.pos : '',\r\n        };\r\n    });\r\n}\r\n\r\n\r\nconst userImageIndexCache: { [name: string]: any } = {};\r\n\r\n/**\r\n * returns {Object} // { userId1: 1, userId2: 9, userId3: 3, userId4: 5}\r\n * */\r\nexport function getRandomUsersImageIndex(userIds: string[]): { [name: string]: any } {\r\n    const getRandomValue = () => _.random(1, 12);\r\n\r\n    const getRandomValueNotIn = (values: number[]) => {\r\n        let value: number;\r\n\r\n        do {\r\n            value = getRandomValue();\r\n        } while (values.indexOf(value) >= 0);\r\n\r\n        return value;\r\n    };\r\n\r\n    return _.reduce(\r\n        userIds,\r\n        (im: { [name: string]: number }, userId: string) => {\r\n            const imageIndexMap = im;\r\n\r\n            let imageIndex = userImageIndexCache[userId];\r\n            const prevImageIndexList = Object.values(imageIndexMap) as number[];\r\n\r\n            if (imageIndex === undefined || prevImageIndexList.indexOf(imageIndex) >= 0) {\r\n                imageIndex = getRandomValueNotIn(prevImageIndexList);\r\n            }\r\n\r\n            imageIndexMap[userId] = imageIndex;\r\n\r\n            userImageIndexCache[userId] = imageIndex;\r\n\r\n            return imageIndexMap;\r\n        },\r\n        {},\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport enum PreferMode {\r\n    width = 'width',\r\n    height = 'height',\r\n}\r\n\r\nexport const initialSizeInfo = {\r\n    perfectHeight: 0,\r\n    perfectWidth: 0,\r\n\r\n\r\n    preferMaxWidth: 0,\r\n    preferMaxHeight: 0,\r\n\r\n    winWidth: 0,\r\n    winHeight: 0,\r\n\r\n    widthHeightRatio: 1,\r\n\r\n    adjustedWidth: 0,\r\n    adjustedHeight: 0,\r\n\r\n    finalRatio: 1,\r\n\r\n    preferMode: PreferMode.width,\r\n};\r\n\r\nexport type InitialSizeInfo = typeof initialSizeInfo;\r\n\r\nexport const ViewPortSizeContext = React.createContext(initialSizeInfo);\r\n\r\n\r\nexport const getWidthHeightRatio = (width: number, height: number) => width / height;\r\n\r\nexport const getWinSize = () => ({\r\n    winHeight: window.innerHeight,\r\n    winWidth: window.innerWidth,\r\n});\r\n\r\n\r\n\r\ntype AdjustedSizeInfoType = Partial<InitialSizeInfo> & {\r\n    preferMode?: PreferMode;\r\n};\r\n\r\nexport const getAdjustedSizeInfo = (\r\n    {\r\n        perfectHeight = 0,\r\n        perfectWidth = 0,\r\n\r\n        preferMaxHeight: _preferMaxHeight,\r\n        preferMaxWidth: _preferMaxWidth,\r\n\r\n\r\n        winWidth = 0,\r\n        winHeight = 0,\r\n        preferMode = PreferMode.width,\r\n    }: AdjustedSizeInfoType\r\n): AdjustedSizeInfoType => {\r\n    const widthHeightRatio = getWidthHeightRatio(perfectWidth, perfectHeight);\r\n    let preferMaxHeight = _preferMaxHeight || perfectHeight;\r\n    const preferMaxWidth = _preferMaxWidth || perfectWidth;\r\n\r\n    let adjustedWidth = perfectWidth;\r\n    let adjustedHeight = perfectHeight;\r\n    let resizeRatioByWidth = perfectWidth / winWidth;\r\n    let finalRatio = 1;\r\n\r\n    if (preferMode === PreferMode.width) {\r\n        if (preferMaxWidth < winWidth) {\r\n            adjustedWidth = preferMaxWidth;\r\n        } else {\r\n            adjustedWidth = winWidth;\r\n        }\r\n\r\n\r\n        resizeRatioByWidth = adjustedWidth / perfectWidth;\r\n\r\n        adjustedHeight = perfectHeight * resizeRatioByWidth;\r\n        preferMaxHeight = perfectHeight * resizeRatioByWidth;\r\n        finalRatio = resizeRatioByWidth;\r\n    }\r\n\r\n\r\n    return {\r\n        adjustedWidth,\r\n        adjustedHeight,\r\n\r\n        widthHeightRatio,\r\n\r\n        preferMaxWidth,\r\n        preferMaxHeight,\r\n\r\n        finalRatio,\r\n\r\n        preferMode,\r\n    };\r\n};\r\n"],"sourceRoot":""}