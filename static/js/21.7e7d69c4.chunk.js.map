{"version":3,"sources":["apis/contractHelps/openBoxContract.js","apis/openbox/OpenBoxAPIReal.ts","common/utils/functions/sort.js","apis/helpers/web3Helpers.js","apis/helpers/getWeb3.js"],"names":["openBoxContract","_openBoxContract","apply","this","arguments","_callee","contract","_ref","currentProvider","accounts","regenerator_default","a","wrap","_context","prev","next","TruffleContract","OpenBoxContract","getProviderAndAccounts","sent","setProvider","defaults","from","abrupt","deployed","stop","loadGame","_x","_loadGame","_callee2","issueNo","_context2","betEvent","_x2","_betEvent","_callee3","_from","event","getAsync","_context3","Bet","fromBlock","toBlock","promisify","get","bind","OpenBoxAPIReal","Object","classCallCheck","createClass","key","value","_getBetAddress","asyncToGenerator","mark","address","_getHistoryList","logs","events","web3","i","getAccounts","getWeb3","length","push","id","args","toNumber","money","fromWei","time","betTime","currentUserId","sort","obj1","obj2","value1","_loadGame2","historyData","game","scores","sequencs","gameRecord","playerAddrs","playerScores","playerAwards","play","__webpack_exports__","_getAccounts","eth","getAccountsAsync","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","getBalance","_getBalance","_ref2","getBalanceAsync","_getProviderAndAccounts","_ref3","sendTransaction","_sendTransaction","_callee5","transactionObject","_ref5","sendTransactionAsync","_context5","web3Instance","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","context","web3Provider","window","global","ethereum","enable","t0","Error","console","log","Web3","providers","HttpProvider","getLang","WEB3","NO_WEB3_PROVIDER"],"mappings":"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","file":"static/js/21.7e7d69c4.chunk.js","sourcesContent":["import TruffleContract from 'truffle-contract';\r\nimport { promisify } from 'util';\r\n\r\nimport OpenBoxContract from '../contracts/OpenBox.json';\r\nimport { getProviderAndAccounts } from '../helpers/web3Helpers';\r\n\r\nexport async function openBoxContract() {\r\n    const contract = TruffleContract(OpenBoxContract);\r\n    const { currentProvider, accounts } = await getProviderAndAccounts();\r\n    contract.setProvider(currentProvider);\r\n    contract.defaults({from: accounts[0]});\r\n    return contract.deployed();\r\n}\r\n\r\nexport async function loadGame(issueNo) {\r\n    const contract = await openBoxContract();\r\n    return contract.loadGame(issueNo);\r\n}\r\n\r\nexport async function betEvent(_from) {\r\n    const contract = await openBoxContract();\r\n    const event = contract.Bet({from: _from}, {fromBlock: 0, toBlock: 'latest'});\r\n    const getAsync = promisify(event.get.bind(event));\r\n    return getAsync();\r\n}\r\n","import {GameRecord} from \"@web3game/typings/openBox\";\r\nimport { OpenBoxAPI } from \"./OpenBoxAPI\";\r\nimport {openBoxContract, betEvent, loadGame} from \"../contractHelps/openBoxContract\";\r\nimport { getAccounts } from \"../helpers/web3Helpers\";\r\nimport { getWeb3 } from \"../helpers/getWeb3\";\r\nimport { compareByTime } from \"../../common/utils/functions/sort\";\r\n\r\nexport class OpenBoxAPIReal implements OpenBoxAPI {\r\n\r\n    public async getBetAddress(): Promise<string> {\r\n        const contract = await openBoxContract();\r\n        return contract.address;\r\n    }\r\n\r\n    public async getHistoryList(): Promise<object[]> {\r\n        const logs = [];\r\n        const accounts = await getAccounts();\r\n        const events = await betEvent(accounts[0]);\r\n        const web3 = await getWeb3();\r\n        for (let i = 0; i < events.length; i++) {\r\n            const event = events[i];\r\n            logs.push({\r\n                id: event.args.issueNo.toNumber(),\r\n                issueNo: event.args.issueNo.toNumber(),\r\n                money: web3.fromWei(event.args.value.toNumber(), 'ether'),\r\n                time: event.args.betTime.toNumber() * 1000,\r\n                currentUserId: accounts[0],\r\n            });\r\n        }\r\n        return logs.sort(compareByTime());\r\n    }\r\n\r\n    public async loadGame(historyData: any): Promise<GameRecord> {\r\n        const game = await loadGame(historyData.issueNo);\r\n\r\n        const scores = [];\r\n        const sequencs = [];\r\n        for (let i = 0; i < game[1].length; i++) {\r\n            scores[i] = game[1][i].toNumber();\r\n            sequencs[i] = game[2][i].toNumber();\r\n        }\r\n\r\n        const gameRecord: GameRecord = {\r\n            id: historyData.id,\r\n            currentUserId: historyData.currentUserId,\r\n            playerAddrs: game[3],\r\n            playerScores: game[4],\r\n            playerAwards: game[5],\r\n            scores,\r\n            sequencs,\r\n            play: game[3][3] !== '0x0000000000000000000000000000000000000000',\r\n        };\r\n\r\n        return gameRecord;\r\n    }\r\n}\r\n\r\nexport default new OpenBoxAPIReal();\r\n","export function compareByTime() {\r\n    return function(obj1,obj2){\r\n        var value1 = obj1['time'];\r\n        var value2 = obj2['time'];\r\n        return value2 - value1;     // 降序\r\n    }\r\n}","import { promisify } from 'util';\r\nimport { getWeb3 } from \"./getWeb3\";\r\n\r\nexport async function getAccounts() {\r\n    const { eth } = await getWeb3();\r\n    const getAccountsAsync = promisify(eth.getAccounts);\r\n    return getAccountsAsync();\r\n}\r\n\r\nexport async function getBalance() {\r\n    const { eth } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    const getBalanceAsync = promisify(eth.getBalance);\r\n    return getBalanceAsync(accounts[0]);\r\n}\r\n\r\nexport async function getProviderAndAccounts() {\r\n    const { currentProvider } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    return {currentProvider, accounts};\r\n}\r\n\r\nexport async function estimateGas(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const estimateGasAsync = promisify(eth.estimateGas);\r\n    return estimateGasAsync(transactionObject);\r\n}\r\n\r\nexport async function sendTransaction(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const sendTransactionAsync = promisify(eth.sendTransaction);\r\n    return sendTransactionAsync(transactionObject);\r\n}","import Web3 from 'web3'\r\nimport {getLang} from \"@web3game/lang\";\r\n\r\nlet web3Instance = null;\r\n// const thunderTestNetwork = \"18\";\r\n// const thunderMainNetwork = \"108\";\r\n\r\nexport const getWeb3 = async () => {\r\n  if (web3Instance) {  \r\n    return web3Instance;\r\n  }\r\n  const context = (typeof window === 'object') ? window : global;\r\n  var web3Provider;\r\n\r\n  if (context.ethereum) {\r\n    web3Provider = context.ethereum;\r\n\r\n    try {\r\n      // 请求用户账号授权\r\n      await context.ethereum.enable();\r\n    } catch (error) {\r\n      // 用户拒绝了访问\r\n      throw new Error(\"User denied account access.\");\r\n    }\r\n  }\r\n  // 老版 MetaMask\r\n  else if (typeof context.web3 !== 'undefined') {\r\n    web3Provider = context.web3.currentProvider;\r\n    console.log('Injected web3 detected.');\r\n  } else {\r\n    // Fallback to localhost if no web3 injection. We've configured this to\r\n    // use the development console's port by default.\r\n    web3Provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\r\n    // throw new Error('No web3 instance injected, using Local web3.');\r\n    throw new Error(getLang().WEB3.NO_WEB3_PROVIDER);\r\n  }\r\n  // throw new Error(web3Provider.isTrust);\r\n  // // const networkVersion = web3Provider.networkVersion;\r\n  // // if(networkVersion !== thunderTestNetwork && networkVersion !== thunderMainNetwork) {\r\n  // //   throw new Error(getLang().WEB3.WRONG_NETWORK);\r\n  // // }\r\n\r\n  web3 = new Web3(web3Provider);\r\n\r\n  web3Instance = web3;\r\n\r\n  return web3;\r\n};\r\n"],"sourceRoot":""}