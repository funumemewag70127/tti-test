{"version":3,"sources":["apis/home/HomeAPIMock.ts","home/styles/app/myTask/1@3x.png","home/styles/app/myTask/2@3x.png","home/styles/app/myTask/3@3x.png","home/styles/app/myTask/4@3x.png"],"names":["TaskImages","TaskImage1","TaskImage2","TaskImage3","TaskImage4","amount","genRankData","account","concat","Math","random","HomeAPIMock","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","invitor","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","_getDonationInfo","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","wrap","_context","prev","next","Error","stop","apply","arguments","_doDonate","_callee2","params","_context2","_x","_getTradingLog","_callee3","_context3","abrupt","_getMyEarningLog","_callee4","_context4","_getSystemAnnouncement","_callee5","_context5","task","_getTaskList","_callee6","_context6","id","tti","canBuy","description","rate","limit","name","getLang","HOME_PAGE","PRODUCT_NAME_0","times","imageUrl","PRODUCT_NAME_1","PRODUCT_NAME_2","PRODUCT_NAME_3","_addTask","_callee7","_context7","undefined","_getMyTaskList","_callee8","_context8","scrollType","latestGain","remainTimes","staticProfitOfOneTime","staticProfit","_transfer","_callee9","_context9","toAccount","_x2","_getInvitationResponse","_callee10","_context10","code","myInviter","invitationList","_getMyBonusResponse","_callee11","result","_context11","currentTotalBonus","availableTotal","bonusList","quarterName","QUARTER","reward","drawed","availableReward","endday","_getMyTaskResponse","_callee12","_context12","getMyTaskList","t0","sent","todayTotalIncome","taskList","_setInvitor","_callee13","_context13","_x3","_gainTaskEarning","_callee14","_context14","_gainQuoterBonus","_callee15","_context15","_getGamePlayRankList","_callee16","myRank","_context16","rankList","_","range","map","_getRefererRankList","_callee17","_context17","__webpack_exports__","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/21.76bdd44a.chunk.js","sourcesContent":["import _ from 'lodash';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {\r\n    InvitationInfo,\r\n    MyBonusResponse,\r\n    MyTaskInfo,\r\n    MyTaskResponse,\r\n    RankInfo,\r\n    RankResponse,\r\n    TaskInfo, TradingLog,\r\n    TransferParam,\r\n    DonateParam,\r\n    DonationInfo,\r\n} from \"@web3game/typings/home\";\r\nimport {HomeAPI} from \"./HomeAPI\";\r\n\r\nimport TaskImage1 from '../../home/styles/app/myTask/1@3x.png';\r\nimport TaskImage2 from '../../home/styles/app/myTask/2@3x.png';\r\nimport TaskImage3 from '../../home/styles/app/myTask/3@3x.png';\r\nimport TaskImage4 from '../../home/styles/app/myTask/4@3x.png';\r\n\r\nconst TaskImages = {\r\n    TaskImage1,\r\n    TaskImage2,\r\n    TaskImage3,\r\n    TaskImage4,\r\n};\r\n\r\nlet amount = 0;\r\nconst genRankData = () => ({\r\n    account: `userId${Math.random()}`,\r\n    amount: amount++\r\n} as RankInfo);\r\n\r\nexport class HomeAPIMock implements HomeAPI {\r\n\r\n    public async getDonationInfo(): Promise<DonationInfo> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public async doDonate(params: DonateParam): Promise<void> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    public async getTradingLog(): Promise<TradingLog[]> {\r\n        return [];\r\n    }\r\n\r\n    public async getMyEarningLog(): Promise<TradingLog[]> {\r\n        return [];\r\n    }\r\n\r\n    public async getSystemAnnouncement(): Promise<TradingLog[]> {\r\n        return [];\r\n    }\r\n\r\n    releaseScroll(task: MyTaskInfo): Promise<void> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    renewScroll(task: MyTaskInfo): Promise<void> {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    invitor = '';\r\n\r\n    async getTaskList(): Promise<TaskInfo[]> {\r\n        return [\r\n            {\r\n                id: '1',\r\n                tti: 100000,\r\n                canBuy: 2,\r\n                description: '',\r\n                rate: 6,\r\n                limit: 2,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_0,\r\n                times: 30,\r\n                imageUrl: TaskImages.TaskImage1,\r\n            },\r\n\r\n            {\r\n                id: '2',\r\n                tti: 200000,\r\n                canBuy: 2,\r\n                description: '',\r\n                rate: 8,\r\n                limit: 2,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_1,\r\n                times: 30,\r\n                imageUrl: TaskImages.TaskImage2,\r\n            },\r\n\r\n            {\r\n                id: '3',\r\n                tti: 600000,\r\n                canBuy: 1,\r\n                description: '',\r\n                rate: 15,\r\n                limit: 1,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_2,\r\n                times: 30,\r\n                imageUrl: TaskImages.TaskImage3,\r\n            },\r\n\r\n            {\r\n                id: '4',\r\n                tti: 1500000,\r\n                canBuy: 1,\r\n                description: '',\r\n                rate: 20,\r\n                limit: 1,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_3,\r\n                times: 30,\r\n                imageUrl: TaskImages.TaskImage4,\r\n            },\r\n        ];\r\n    }\r\n\r\n    public async addTask(): Promise<void> {\r\n        return undefined;\r\n    }\r\n\r\n    async getMyTaskList(): Promise<MyTaskInfo[]> {\r\n        return [\r\n            {\r\n                scrollType: 0,\r\n                id: 0,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_0,\r\n                rate: 6,\r\n                times: 30,\r\n                latestGain: '2019-07-02',\r\n                tti: 100000,\r\n                remainTimes: 30,\r\n                staticProfitOfOneTime: 200,\r\n                staticProfit: 0,\r\n            },\r\n\r\n            {\r\n                scrollType: 1,\r\n                id: 1,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_1,\r\n                rate: 8,\r\n                times: 30,\r\n                latestGain: '2019-07-02',\r\n                tti: 200000,\r\n                remainTimes: 30,\r\n                staticProfitOfOneTime: 533,\r\n                staticProfit: 0,\r\n            },\r\n\r\n            {\r\n                scrollType: 2,\r\n                id: 2,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_2,\r\n                rate: 15,\r\n                times: 30,\r\n                latestGain: '2019-07-02',\r\n                tti: 600000,\r\n                remainTimes: 30,\r\n                staticProfitOfOneTime: 3000,\r\n                staticProfit: 0,\r\n            },\r\n\r\n            {\r\n                scrollType: 3,\r\n                id: 3,\r\n                name: getLang().HOME_PAGE.PRODUCT_NAME_3,\r\n                rate: 20,\r\n                times: 30,\r\n                latestGain: '2019-07-02',\r\n                tti: 1500000,\r\n                remainTimes: 30,\r\n                staticProfitOfOneTime: 15000,\r\n                staticProfit: 0,\r\n            },\r\n        ];\r\n    }\r\n\r\n    public async transfer(params: TransferParam) {\r\n        const a = `${params.amount} ${params.toAccount}`\r\n        return undefined;\r\n    }\r\n\r\n    public async getInvitationResponse(): Promise<InvitationInfo> {\r\n        return {\r\n            code: 'aaaljjl',\r\n            myInviter: this.invitor,\r\n            invitationList: [\r\n                'some code',\r\n                'hash code',\r\n                'encrypt code',\r\n                'interesting code',\r\n            ]\r\n        };\r\n    }\r\n\r\n    public async getMyBonusResponse(): Promise<MyBonusResponse> {\r\n        const result: MyBonusResponse = {\r\n            currentTotalBonus: 777,\r\n            availableTotal: 5555,\r\n            bonusList: [\r\n                { quarterName: `${getLang().HOME_PAGE.QUARTER} 1`, reward: 500, drawed: false, availableReward: 0, endday: '2019-03.30' },\r\n                { quarterName: `${getLang().HOME_PAGE.QUARTER} 2`, reward: 1000, drawed: false, availableReward: 0, endday: '2019-06.30' },\r\n                { quarterName: `${getLang().HOME_PAGE.QUARTER} 3`, reward: 5000, drawed: false, availableReward: 0, endday: '2019-09.30' },\r\n                { quarterName: `${getLang().HOME_PAGE.QUARTER} 4`, reward: 10000, drawed: false, availableReward: 0, endday: '2019-12.30' },\r\n            ]\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n    public async getMyTaskResponse(): Promise<MyTaskResponse> {\r\n        const result: MyTaskResponse = {\r\n            todayTotalIncome: 999,\r\n            taskList: await this.getMyTaskList(),\r\n            latestGain: '无'\r\n        };\r\n\r\n        return result;\r\n    }\r\n\r\n    public async setInvitor(invitor: string): Promise<void> {\r\n        this.invitor = invitor;\r\n    }\r\n\r\n    public async gainTaskEarning(): Promise<void> {\r\n        throw Error('not implementation');\r\n    }\r\n\r\n    public async gainQuoterBonus(): Promise<void> {\r\n        throw Error('not implementation');\r\n    }\r\n\r\n    public async getGamePlayRankList(): Promise<RankResponse> {\r\n\r\n        const myRank = genRankData();\r\n\r\n        return {\r\n            rankList: _.range(1, 100).map(genRankData),\r\n            myRank,\r\n        };\r\n    }\r\n\r\n    public async getRefererRankList(): Promise<RankResponse> {\r\n        const myRank = genRankData();\r\n\r\n        return {\r\n            rankList: _.range(1, 100).map(genRankData),\r\n            myRank,\r\n        };\r\n    }\r\n}\r\n\r\nexport default new HomeAPIMock();\r\n","module.exports = __webpack_public_path__ + \"static/media/1@3x.0698e368.png\";","module.exports = __webpack_public_path__ + \"static/media/2@3x.b236b5ce.png\";","module.exports = __webpack_public_path__ + \"static/media/3@3x.0cf2f29a.png\";","module.exports = __webpack_public_path__ + \"static/media/4@3x.717151aa.png\";"],"sourceRoot":""}