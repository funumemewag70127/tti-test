{"version":3,"sources":["common/components/popups/PopupRenderer.tsx","common/components/viewPort/viewPortSizeHelper.tsx","common/components/Table.tsx","openBox/core/openBoxConstants.ts","typings/openBox/index.ts","openBox/components/PlayerInfo.tsx","common/utils/NavigatorEvents.ts","common/utils/navigatorHelper.ts","common/utils/EventEmitter.ts","openBox/OpenBoxGame.tsx","apis/openbox/getOpenBoxAPI.ts","common/components/viewPort/ViewPortSizeProvider.tsx","openBox/statics/sounds/oh_no.mp3","openBox/statics/sounds/add-score.mp3","openBox/statics/sounds/result.wav","openBox/components/GameResultPopup.tsx","openBox/core/functions/getOpenBoxMoneyList.ts","common/styles/images/beijingtu.png","openBox/components/MoneySelector.tsx","openBox/components/AuthForm.tsx","openBox/components/HistoryListPopup.tsx","openBox/components/GameDescriptionPopup.tsx","common/utils/watchAccountChange.ts","common/components/popups/PopupManger.tsx","openBox/components/layouts/QuitGameButton.tsx","openBox/components/layouts/HistoryButton.tsx","openBox/components/layouts/DescriptionButton.tsx","openBox/components/layouts/GameLayout.tsx","openBox/stores/HistoryStore.ts","openBox/eventBus/openBoxEvents.ts","openBox/stores/GamePlayerStore.ts","openBox/stores/index.ts","openBox/components/Box.tsx","openBox/components/BoxGrid.tsx","openBox/components/BoxGameDesk.tsx","common/components/Scene.tsx","common/components/index.ts","common/components/viewPort/getElStyle.ts","openBox/core/gameHelper.ts","common/components/popups/Popup.tsx"],"names":["__webpack_require__","d","__webpack_exports__","PopupRenderer","mobx_react__WEBPACK_IMPORTED_MODULE_0__","inject","_ref2","_ref3","gameUIStore","name","isActive","visiblePopup","_ref","children","PreferMode","ViewPortSizeContext","getWinSize","getAdjustedSizeInfo","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","initialSizeInfo","perfectHeight","perfectWidth","preferMaxWidth","preferMaxHeight","winWidth","winHeight","widthHeightRatio","adjustedWidth","adjustedHeight","finalRatio","preferMode","width","React","createContext","window","innerHeight","innerWidth","_ref$perfectHeight","_ref$perfectWidth","_preferMaxHeight","_preferMaxWidth","_ref$winWidth","_ref$preferMode","resizeRatioByWidth","Table","tHead","_ref$className","className","_ref$bodyClassName","bodyClassName","style","a","createElement","OpenBoxTimeSpan","PrepareBoxTimeSpan","OpeningDuration","BoxStatus","closed","opened","opening","PositionType","PlayerInfo","compose","module","imageIndex","_ref$isActive","score","pos","_useState","useState","_useState2","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isInPosition","setIsInPosition","useEffect","userImageSize","useVPStyle","height","userScoreSize","fontSize","top","left","paddingTop","normalPosition","positionType","topBase","right","leftBase","bottom","getPlayerPosition","scoreInfo","react__WEBPACK_IMPORTED_MODULE_1___default","Player","posed","div","enter","active","orgPosition","newPos","_","clone","getActivePosition","inActive","concat","react_pose__WEBPACK_IMPORTED_MODULE_3__","key","pose","EventKeys","back","push","NavigatorEvents","EventEmitter","historyStack","HashSplitter","pushHash","hash","currentHash","document","location","pushPage","_x","_x2","_pushPage","apply","this","arguments","_callee","navigator","router","options","routerName","_args","regenerator_default","wrap","_context","prev","next","length","undefined","stop","popPage","history","addEventListener","event","newURL","oldURL","componentName","replace","emit","emitBack","last","pop","popPageInner","replaceState","Collection","collection","_this$collection","forEach","fn","_EventEmitterBase","eventKeys","_this","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","removeEventListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setMaxListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","value","eventName","_this2","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__","prototype","removeFn","removeListener","filter","o","dispose","on","_collection$getCollec","createCollection","getCollection","removeAll","EventEmitterBase","OpenBoxStores","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","stores","commonStores","gamePlayerStore","accountStore","onShowHistory","setVisiblePopup","PopupNames","onShowDescription","description","onPlayGame","betEvent","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","openBoxAPI","gameRecord","getOpenBoxAPI","sent","loadGame","none","setScene","GameUIScene","gamePlayer","startGame","onGameEnd","gameResult","onQuitPlayer","quit","moneySelector","onQuitGameResult","onSubmitAuth","params","_callee2","submitGame","_context2","getCommonAPI","betType","issueNo","nums","amounts","betAddress","updateDataVersion","t0","alert","onSelectMoney","money","authForm","prepareRecords","records","currentUserId","map","record","id","random","OpenBoxGame","_ref4","dataVersion","_callee3","_ref6","getHistoryList","getBetAddress","list","_context3","setDisplayList","account","setBetAddress","popups","renderer","react__WEBPACK_IMPORTED_MODULE_3___default","_components_HistoryListPopup__WEBPACK_IMPORTED_MODULE_25__","_components_AuthForm__WEBPACK_IMPORTED_MODULE_24__","onSubmit","_components_GameResultPopup__WEBPACK_IMPORTED_MODULE_19__","onQuit","_components_GameDescriptionPopup__WEBPACK_IMPORTED_MODULE_26__","onQuitGame","useCallback","react_onsenui__WEBPACK_IMPORTED_MODULE_4__","_web3game_common_components_viewPort_ViewPortSizeProvider__WEBPACK_IMPORTED_MODULE_16__","mobx_react__WEBPACK_IMPORTED_MODULE_6__","assign","_components_layouts_GameLayout__WEBPACK_IMPORTED_MODULE_22__","_web3game_common_components__WEBPACK_IMPORTED_MODULE_7__","_components_MoneySelector__WEBPACK_IMPORTED_MODULE_23__","moneyList","getOpenBoxMoneyList","onSelect","_components_BoxGameDesk__WEBPACK_IMPORTED_MODULE_20__","memo","watchAccountChange","_getOpenBoxAPI","isUsingMockAPI","abrupt","e","then","bind","m","default","Promise","all","ViewPortSizeProvider","_ref$preferMaxWidth","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_useState2$","setWinSize","Provider","staticSizeInfo","adjustedSizeInfo","sizeInfo","extend","react__WEBPACK_IMPORTED_MODULE_2___default","exports","p","GameResultPopup","mobx_react__WEBPACK_IMPORTED_MODULE_1__","_web3game_common_components_popups_Popup__WEBPACK_IMPORTED_MODULE_2__","_web3game_common_components_Table__WEBPACK_IMPORTED_MODULE_3__","_core_gameHelper__WEBPACK_IMPORTED_MODULE_4__","_PlayerInfo__WEBPACK_IMPORTED_MODULE_5__","toNumber","num","web3","heroList","getSortedHeroList","sort","b","comparedTo","title","hero","index","slice","fromWei","gain","_web3game_lang__WEBPACK_IMPORTED_MODULE_0__","text","getLang","OPEN_BOX_PAGE","OPEN_BOX_MONEY_TEXT_1","OPEN_BOX_MONEY_TEXT_2","OPEN_BOX_MONEY_TEXT_3","OPEN_BOX_MONEY_TEXT_4","OPEN_BOX_MONEY_TEXT_5","MoneySelector","_web3game_common_components_viewPort_getElStyle__WEBPACK_IMPORTED_MODULE_1__","buttonSize","type","onClick","AuthForm","_web3game_lang__WEBPACK_IMPORTED_MODULE_3__","popupData","ttBalance","tokenBalance","gas","_ref$money","handleSubmit","CONFIRM_SUBMIT","ACCOUNT","TT_BALANCE","TOKEN_BALANCE","marginTop","SUBMIT","HistoryListPopup","moment__WEBPACK_IMPORTED_MODULE_2__","moment__WEBPACK_IMPORTED_MODULE_2___default","_web3game_common_components_popups_Popup__WEBPACK_IMPORTED_MODULE_4__","_web3game_common_components_Table__WEBPACK_IMPORTED_MODULE_5__","_web3game_common_utils_compose__WEBPACK_IMPORTED_MODULE_6__","historyStore","displayList","tHeader","HISTORY_NO","AMOUNT","HISTORY_DATE","renderListItem","item","moment","time","format","listContent","HISTORY","GameDescriptionPopup","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_2__","htmlContent","setHtmlContent","html","fetch","HTML_FILES","GAME_DESCRIPTION","t1","_web3game_common_components_popups_Popup__WEBPACK_IMPORTED_MODULE_5__","DESCRIPTION","dangerouslySetInnerHTML","__html","_compose__WEBPACK_IMPORTED_MODULE_1__","injectMainAccountData","Component","locale","observer","PopupManagerContext","PopupManager","_ref$popups","_usePopupManager","popupsList","slicedToArray","setPopups","showPopup","popup","toConsumableArray","closePopup","usePopupManager","popupList","react_default","react","QuitGameButtonPure","isPlayerActive","BACK","defaultProps","QuitGameButton","scene","HistoryButton","DescriptionButton","_ref$isPlayerActive","position","GameLayout","_useContext","useContext","applicationSize","gameContentStyle","src","BackgroundUrl","alt","_class","HistoryStore","classCallCheck","initializerDefineProperty","_descriptor","createClass","applyDecoratedDescriptor","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","ON_GAME_NOT_READY","openBoxEvents","_EventEmitter","GlobalEvent","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","onGameReadyStatusChange","triggerGameReadyStatus","isReady","inherits","GamePlayerStore_class","GamePlayerStore","start","end","pause","resume","beginOpenBox","finishOpenBox","GamePlayerStore_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","playerTimeout","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","resetPlayer","play","isPaused","resolve","playBoxByIndex","isEnd","playSound","Sounds","result","clearTimeout","openIndex","_this3","openingBox","sortedBoxes","getSortedBoxes","waitTimeout","box","finishedOpenIndex","heroPos","playerScores","boomedHeroId","heroId","boom","addScore","oldScore","actionFn","_this4","timeout","setTimeout","fasterTimes","clearPlayerTimeout","_this5","_this6","AnimatedClassNames","defineProperty","Box","_dec","_temp","_class2","_React$Component","isBoxOpened","_this$props","props","_this$props2","boxIndex","isOpened","isOpening","status","_this$props3","boxCover","isBoomer","getStatus","boomClassName","scoreClassName","boxCoverClassName","boxClassName","boxWrapperClassName","boxSize","getAnimatedClassByStatus","ColumnNum","range4","range","BoxGrid","GAME_IS_NOT_READY","tableSize","rowIndex","colIndex","columnIndex","boxInfo","Box_Box","renderColumn","BoxGameDesk","_ref$openIndex","Fragment","Scene","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","_viewPortSizeHelper__WEBPACK_IMPORTED_MODULE_2__","styles","reduce","val","isNumber","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","howler__WEBPACK_IMPORTED_MODULE_1__","_web3game_typings_openBox__WEBPACK_IMPORTED_MODULE_2__","require","soundSrc","Howl","playerAddrs","_gameRecord$playerAwa","playerAwards","currentUserIdIndex","indexOf","imageIndexsMap","userIds","getRandomValue","im","userId","imageIndexMap","userImageIndexCache","prevImageIndexList","values","getRandomValueNotIn","getRandomUsersImageIndex","resortedUserIds","posDiff","i","startMoveIndex","cloneDeep","genOtherRecord","sortedIndex","isCurrentUser","getCurrentRecord","scores","sequencs","sortedHeroList","heroInfo","find","heroIndex","Modal","y","opacity","delay","transition","stiffness","damping","duration","exit","Backdrop","Popup","debounce","isVisible","setIsVisible","onTouchEnd","onKeyDown","role","tabIndex","aria-label"],"mappings":"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","file":"static/js/openBox.21cd1bd8.chunk.js","sourcesContent":["import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    name: PopupNames;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function PopupRendererPure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    return isActive ? children() : null;\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const PopupRenderer = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.visiblePopup === name,\r\n    }),\r\n)(PopupRendererPure);\r\n","import React from \"react\";\r\n\r\nexport enum PreferMode {\r\n    width = 'width',\r\n    height = 'height',\r\n}\r\n\r\nexport const initialSizeInfo = {\r\n    perfectHeight: 0,\r\n    perfectWidth: 0,\r\n\r\n\r\n    preferMaxWidth: 0,\r\n    preferMaxHeight: 0,\r\n\r\n    winWidth: 0,\r\n    winHeight: 0,\r\n\r\n    widthHeightRatio: 1,\r\n\r\n    adjustedWidth: 0,\r\n    adjustedHeight: 0,\r\n\r\n    finalRatio: 1,\r\n\r\n    preferMode: PreferMode.width,\r\n};\r\n\r\nexport type InitialSizeInfo = typeof initialSizeInfo;\r\n\r\nexport const ViewPortSizeContext = React.createContext(initialSizeInfo);\r\n\r\n\r\nexport const getWidthHeightRatio = (width: number, height: number) => width / height;\r\n\r\nexport const getWinSize = () => ({\r\n    winHeight: window.innerHeight,\r\n    winWidth: window.innerWidth,\r\n});\r\n\r\n\r\n\r\ntype AdjustedSizeInfoType = Partial<InitialSizeInfo> & {\r\n    preferMode?: PreferMode;\r\n};\r\n\r\nexport const getAdjustedSizeInfo = (\r\n    {\r\n        perfectHeight = 0,\r\n        perfectWidth = 0,\r\n\r\n        preferMaxHeight: _preferMaxHeight,\r\n        preferMaxWidth: _preferMaxWidth,\r\n\r\n\r\n        winWidth = 0,\r\n        winHeight = 0,\r\n        preferMode = PreferMode.width,\r\n    }: AdjustedSizeInfoType\r\n): AdjustedSizeInfoType => {\r\n    const widthHeightRatio = getWidthHeightRatio(perfectWidth, perfectHeight);\r\n    let preferMaxHeight = _preferMaxHeight || perfectHeight;\r\n    const preferMaxWidth = _preferMaxWidth || perfectWidth;\r\n\r\n    let adjustedWidth = perfectWidth;\r\n    let adjustedHeight = perfectHeight;\r\n    let resizeRatioByWidth = perfectWidth / winWidth;\r\n    let finalRatio = 1;\r\n\r\n    if (preferMode === PreferMode.width) {\r\n        if (preferMaxWidth < winWidth) {\r\n            adjustedWidth = preferMaxWidth;\r\n        } else {\r\n            adjustedWidth = winWidth;\r\n        }\r\n\r\n\r\n        resizeRatioByWidth = adjustedWidth / perfectWidth;\r\n\r\n        adjustedHeight = perfectHeight * resizeRatioByWidth;\r\n        preferMaxHeight = perfectHeight * resizeRatioByWidth;\r\n        finalRatio = resizeRatioByWidth;\r\n    }\r\n\r\n\r\n    return {\r\n        adjustedWidth,\r\n        adjustedHeight,\r\n\r\n        widthHeightRatio,\r\n\r\n        preferMaxWidth,\r\n        preferMaxHeight,\r\n\r\n        finalRatio,\r\n\r\n        preferMode,\r\n    };\r\n};\r\n","import React, {CSSProperties} from 'react';\r\n\r\nexport type TableProps = {\r\n    children?: React.ReactElement | React.ReactElement[] | null;\r\n    tHead?: React.ReactElement | React.ReactElement[];\r\n    className?: string;\r\n    bodyClassName?: string;\r\n    style?: CSSProperties;\r\n};\r\n\r\n\r\nexport function Table(\r\n    {\r\n        tHead,\r\n        children,\r\n        className = \"\",\r\n        bodyClassName = \"\",\r\n        style,\r\n    }: TableProps\r\n) {\r\n    return (\r\n        <table className={className} style={style}>\r\n            <thead>{tHead}</thead>\r\n            <tbody className={bodyClassName}>{children}</tbody>\r\n        </table>\r\n    );\r\n}\r\n","export const OpenBoxTimeSpan = 1000; // ms\r\nexport const PrepareBoxTimeSpan = 1500; //\r\nexport const OpeningDuration = 650; // ms\r\n\r\nexport const BoxStatus = {\r\n    closed: 'closed',\r\n    opened: 'opened',\r\n    opening: 'opening',\r\n};\r\n\r\nexport const HeroPositions = {\r\n    top: 'top',\r\n    right: 'right',\r\n    bottom: 'bottom',\r\n    left: 'left',\r\n};\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport type GameRecord = {\r\n    id?: any;\r\n    currentUserId: any;\r\n    play: boolean;\r\n    scores: number[];\r\n    sequencs: number[];\r\n    playerScores: BigNumber[];\r\n    playerAwards: BigNumber[];\r\n    playerAddrs: string[];\r\n};\r\n\r\nexport type BetEvent = {\r\n    id?: number;\r\n    issueNo: number;\r\n    money: number;\r\n    time: number;\r\n    currentUserId: string;\r\n}\r\n\r\n// export type PositionType = 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport enum PositionType {\r\n    top = 'top',\r\n    bottom = 'bottom',\r\n    left = 'left',\r\n    right = 'right'\r\n}\r\n\r\nexport type PlayerScoreByPosition = {\r\n    top: number;\r\n    bottom: number;\r\n    left: number;\r\n    right: number;\r\n};\r\n\r\nexport type BoxInfo = {\r\n    boxIndex: number;\r\n    score: number;\r\n    openIndex: number;\r\n    heroId: any;\r\n    heroIndex: number;\r\n\r\n    /** @type {HeroInfo} */\r\n    heroInfo: any;\r\n    heroPos: any;\r\n};\r\n\r\nexport type HeroInfo = {\r\n    id: any;\r\n    index: number;\r\n    pos: any;\r\n    isCurrentUser: boolean;\r\n    score: BigNumber;\r\n    imageIndex: number;\r\n    gain: BigNumber;\r\n};\r\n","import React, {CSSProperties, useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {hot} from \"react-hot-loader\";\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {compose} from \"@web3game/common/utils/compose\";\r\nimport {PositionType} from \"@web3game/typings/openBox\";\r\n\r\nexport type PlayerInfoProps = {\r\n    imageIndex: number;\r\n    isActive?: boolean;\r\n    id?: any;\r\n    score?: number;\r\n    pos?: PositionType;\r\n};\r\n\r\nexport function PlayerInfoPure(\r\n    {\r\n        imageIndex,\r\n        isActive = false,\r\n        score,\r\n        pos,\r\n    }: PlayerInfoProps,\r\n) {\r\n    const [isInPosition, setIsInPosition] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsInPosition(true);\r\n    }, []);\r\n\r\n    const userImageSize = useVPStyle({\r\n        width: 100,\r\n        height: 100,\r\n    });\r\n    const userScoreSize = useVPStyle({\r\n        width: 55,\r\n        height: 63,\r\n        fontSize: 24,\r\n        top: -70,\r\n        left: 24,\r\n        paddingTop: 16,\r\n    });\r\n\r\n    const getPlayerPosition = (positionType: PositionType | undefined): CSSProperties => {\r\n\r\n        const topBase = 200;\r\n        const leftBase = 340;\r\n        const verticalDiff = 460;\r\n        const horizontalDiff = 280;\r\n\r\n        switch (positionType) {\r\n\r\n            case PositionType.top:\r\n                return useVPStyle({\r\n                    top: topBase + 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.right:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase + horizontalDiff,\r\n                });\r\n\r\n            case PositionType.bottom:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff * 2 - 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.left:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase - horizontalDiff,\r\n                });\r\n\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const normalPosition = getPlayerPosition(pos);\r\n\r\n    const getActivePosition = (\r\n        positionType: PositionType | undefined,\r\n        orgPosition: CSSProperties,\r\n    ) => {\r\n        const newPos: any = _.clone(orgPosition);\r\n        const activeDiff = 50;\r\n\r\n        switch (pos) {\r\n            case PositionType.top:\r\n                newPos.top += activeDiff;\r\n                break;\r\n            case PositionType.right:\r\n                newPos.left -= activeDiff;\r\n                break;\r\n\r\n            case PositionType.bottom:\r\n                newPos.top -= activeDiff;\r\n                break;\r\n            case PositionType.left:\r\n                newPos.left += activeDiff;\r\n                break;\r\n\r\n        }\r\n\r\n        return newPos;\r\n    };\r\n\r\n    const scoreInfo = score !== null ? (\r\n        <span className=\"userScore\" style={userScoreSize}>\r\n            {score}\r\n        </span>\r\n    ) : null;\r\n\r\n    const Player = posed.div({\r\n        enter: normalPosition,\r\n        active: getActivePosition(pos, normalPosition),\r\n        inActive: normalPosition\r\n    });\r\n\r\n    const className = `playerInfo userImage userImage${imageIndex} ${pos} ${isActive ? 'active' : ''}`;\r\n\r\n    return (\r\n        <PoseGroup>\r\n            {isInPosition && (\r\n                <Player\r\n                    key=\"player\"\r\n                    pose={isActive ? 'active' : 'inActive'}\r\n                    className={className}\r\n                    style={userImageSize}\r\n                >\r\n                    {scoreInfo}\r\n                </Player>\r\n            )}\r\n        </PoseGroup>\r\n    );\r\n}\r\n\r\nexport const PlayerInfo = compose<PlayerInfoProps>(\r\n    hot(module),\r\n)(PlayerInfoPure);\r\n","import EventEmitter from \"./EventEmitter\";\r\n\r\nconst EventKeys = {\r\n    back: 'back',\r\n    push: 'push',\r\n};\r\n\r\nconst NavigatorEvents = new EventEmitter();\r\n\r\nexport function emitBack(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.back, componentName);\r\n}\r\n\r\nexport function onBack(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.back, fn);\r\n}\r\n\r\nexport function emitPush(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.push, componentName);\r\n}\r\n\r\nexport function onPush(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.push, fn);\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {Navigator, PageTransitionOptions} from \"react-onsenui\";\r\nimport {emitBack} from \"./NavigatorEvents\";\r\n\r\n\r\nconst historyStack: object[] = [];\r\n\r\nexport const hasHistory = () => historyStack.length > 0;\r\n\r\nconst HashSplitter = '|';\r\n\r\nfunction pushHash(hash: string) {\r\n    const currentHash = document.location.hash;\r\n    document.location.hash = `${currentHash}${currentHash ? HashSplitter : ''}${hash}`;\r\n}\r\n\r\nexport async function pushPage(\r\n    navigator: Navigator,\r\n    router: any,\r\n    options: PageTransitionOptions = {\r\n    },\r\n) {\r\n    const routerName = router.key;\r\n    pushHash(routerName);\r\n    historyStack.push({ navigator, router, options, routerName });\r\n    await navigator.pushPage(router, options);\r\n}\r\n\r\nexport function popPage() {\r\n    window.history.back();\r\n}\r\n\r\nfunction popPageInner(componentName: string) {\r\n    const { navigator, routerName } = _.last(historyStack) as any;\r\n\r\n    historyStack.pop();\r\n\r\n    if (routerName === componentName) {\r\n        navigator.popPage();\r\n    }\r\n}\r\n\r\n// handle history back\r\nwindow.addEventListener('hashchange', (event) => {\r\n    const { newURL, oldURL } = event;\r\n    if (newURL.length < oldURL.length) {\r\n        const componentName = oldURL.replace(newURL, '').replace('#', '');\r\n        emitBack(componentName);\r\n        popPageInner(componentName);\r\n    }\r\n});\r\n\r\nif (window.location.hash) {\r\n    window.history.replaceState(null, '', '#');\r\n}\r\n\r\n\r\n","/**\r\n * Created by trump on 16/6/18.\r\n */\r\nimport {EventEmitter as EventEmitterBase} from \"events\";\r\n\r\n\r\nclass Collection {\r\n    private collection: (() => void)[] = [];\r\n\r\n    /** @returns {Collection} */\r\n    public push(...fn: (() => void)[]) {\r\n        this.collection.push(...fn);\r\n        return this;\r\n    }\r\n\r\n    public removeAll() {\r\n        this.collection.forEach(fn => fn());\r\n        this.collection = [];\r\n    }\r\n\r\n    public getCollection() {\r\n        return this.collection;\r\n    }\r\n}\r\n\r\nexport class EventEmitter extends EventEmitterBase {\r\n\r\n    protected EventKeys = {};\r\n\r\n    private removeEventListeners: (() => void)[] = [];\r\n\r\n    public constructor(eventKeys?: object) {\r\n        super();\r\n\r\n        /** @field */\r\n        this.EventKeys = { ...eventKeys };\r\n\r\n        this.setMaxListeners(9999);\r\n    }\r\n\r\n    // @ts-ignore\r\n    public on(eventName: string, fn: (() => void) | any) {\r\n        super.on(eventName, fn);\r\n\r\n        const removeFn = () => {\r\n            this.removeListener(eventName, fn);\r\n            this.removeEventListeners = this.removeEventListeners.filter(o => o !== removeFn);\r\n        };\r\n\r\n        removeFn.eventName = eventName;\r\n\r\n        if (!this.removeEventListeners) {\r\n            this.removeEventListeners = [];\r\n        }\r\n\r\n        this.removeEventListeners.push(removeFn);\r\n\r\n        return removeFn;\r\n    }\r\n\r\n    public one(eventName: string, fn: (...args: any[]) => void) {\r\n        const dispose = this.on(eventName, (...args: any[]) => {\r\n            fn(...args);\r\n            dispose();\r\n        });\r\n\r\n        return dispose;\r\n    }\r\n\r\n    public removeByName(name: string) {\r\n        this.removeEventListeners.forEach((fn) => {\r\n            if ((fn as any).eventName === name) fn();\r\n        });\r\n\r\n        this.removeEventListeners = this.removeEventListeners.filter(\r\n            o => (o as any).eventName !== name,\r\n        );\r\n    }\r\n\r\n    public removeAll() {\r\n        this.removeEventListeners.forEach(fn => fn());\r\n        this.removeEventListeners = [];\r\n    }\r\n\r\n    /** @returns Collection */\r\n    public createCollection() {\r\n        return new Collection();\r\n    }\r\n\r\n    public listenToMany(...listeners: (() => void)[]) {\r\n        const collection = this.createCollection();\r\n        collection.getCollection().push(...listeners);\r\n        return () => collection.removeAll();\r\n    }\r\n}\r\n\r\nexport default EventEmitter;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {Page} from \"react-onsenui\";\r\nimport _ from 'lodash';\r\nimport {Provider} from \"mobx-react\";\r\nimport {hot} from \"react-hot-loader\";\r\nimport {\r\n    Scene,\r\n} from \"@web3game/common/components\";\r\nimport * as commonStores from '@web3game/common/stores';\r\nimport {GameUIScene, PopupNames} from \"@web3game/common/utils/constants\";\r\nimport {popPage} from \"@web3game/common/utils/navigatorHelper\";\r\nimport {BetEvent} from \"@web3game/typings/openBox\";\r\nimport {getCommonAPI} from \"@web3game/apis/common/getCommonAPI\";\r\nimport {getOpenBoxAPI} from \"@web3game/apis/openbox/getOpenBoxAPI\";\r\nimport '@web3game/common/styles/common.scss';\r\nimport {compose} from \"@web3game/common/utils/compose\";\r\nimport {watchAccountChange} from \"@web3game/common/utils/watchAccountChange\";\r\nimport {ViewPortSizeProvider} from \"@web3game/common/components/viewPort/ViewPortSizeProvider\";\r\nimport {PopupElement} from \"@web3game/typings/common\";\r\nimport * as stores from './stores';\r\nimport './styles/openBox.scss';\r\nimport {GameResultPopup} from \"./components/GameResultPopup\";\r\nimport {BoxGameDesk} from \"./components/BoxGameDesk\";\r\nimport {getOpenBoxMoneyList} from \"./core/functions/getOpenBoxMoneyList\";\r\nimport {GameLayout} from \"./components/layouts/GameLayout\";\r\nimport {MoneySelector} from \"./components/MoneySelector\";\r\nimport {AuthForm} from \"./components/AuthForm\";\r\nimport {HistoryListPopup} from \"./components/HistoryListPopup\";\r\nimport {GameDescriptionPopup, GameDescriptionPopupPure} from \"./components/GameDescriptionPopup\";\r\n\r\n// @ts-ignore\r\nwindow.OpenBoxStores = {\r\n    ...stores,\r\n    ...commonStores,\r\n};\r\n\r\n// region store helpers\r\nconst { gamePlayerStore } = stores;\r\nconst { gameUIStore, accountStore } = commonStores;\r\n\r\nconst onShowHistory = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.history);\r\n};\r\n\r\nconst onShowDescription = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.description);\r\n};\r\n\r\nconst onPlayGame = (betEvent: BetEvent) => {\r\n    (async () => {\r\n        const openBoxAPI = await getOpenBoxAPI();\r\n\r\n        const gameRecord = await openBoxAPI.loadGame(betEvent);\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n        gameUIStore.setScene(GameUIScene.gamePlayer);\r\n        gamePlayerStore.startGame(gameRecord);\r\n\r\n        // 游戏结束弹出弹窗\r\n        gamePlayerStore.onGameEnd(() => gameUIStore.setVisiblePopup(PopupNames.gameResult));\r\n\r\n    })();\r\n};\r\n\r\nconst onQuitPlayer = () => {\r\n    gamePlayerStore.quit();\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n};\r\n\r\nconst onQuitGameResult = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.none);\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n    gamePlayerStore.quit();\r\n};\r\n\r\nconst onSubmitAuth = (params: any) => {\r\n    (async () => {\r\n        const { submitGame } = await getCommonAPI();\r\n        try {\r\n            await submitGame({\r\n                ...params,\r\n                betType: 3,\r\n                issueNo: 0,\r\n                nums: [],\r\n                amounts: [],\r\n                betAddress: gamePlayerStore.betAddress,\r\n            });\r\n            accountStore.updateDataVersion();\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    })();\r\n\r\n};\r\n\r\nconst onSelectMoney = (money: number) => {\r\n    gameUIStore.setVisiblePopup(PopupNames.authForm, { money });\r\n};\r\n\r\nconst prepareRecords = (records: any[], currentUserId: string): object[] => _.map(\r\n    records,\r\n    record => ({\r\n        ...record,\r\n        currentUserId,\r\n        id: record.id || _.random(0),\r\n    }),\r\n);\r\n\r\n\r\n// endregion\r\n\r\ntype OpenBoxGameProps = {\r\n    dataVersion: string;\r\n};\r\n\r\nexport function OpenBoxGame(\r\n    {\r\n        dataVersion,\r\n    }: OpenBoxGameProps\r\n) {\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { getHistoryList, getBetAddress } = await getOpenBoxAPI();\r\n            const list = await getHistoryList();\r\n            stores.historyStore.setDisplayList(prepareRecords(list, accountStore.account));\r\n            const betAddress = await getBetAddress();\r\n            gamePlayerStore.setBetAddress(betAddress);\r\n        })();\r\n\r\n        // unbind listeners of gamePlayerStore\r\n        return () => {\r\n            gamePlayerStore.quit();\r\n        };\r\n    }, [dataVersion]);\r\n\r\n    const popups: PopupElement[] = [\r\n        { name: PopupNames.history, renderer: () => <HistoryListPopup onPlayGame={onPlayGame} /> },\r\n        { \r\n            name: PopupNames.authForm,\r\n            renderer: () => (\r\n                <AuthForm \r\n                    onSubmit={onSubmitAuth}\r\n                />\r\n            ), \r\n        },\r\n        {\r\n            name: PopupNames.gameResult,\r\n            renderer: () => (<GameResultPopup onQuit={onQuitGameResult} />),\r\n        },\r\n        {\r\n            name: PopupNames.description,\r\n            renderer: () => (<GameDescriptionPopup />),\r\n        },\r\n\r\n    ];\r\n\r\n    const onQuitGame = useCallback(() => popPage(), []);\r\n\r\n\r\n    return (\r\n        <Page className=\"openBoxGamePage\">\r\n            <ViewPortSizeProvider\r\n                perfectHeight={1344}\r\n                perfectWidth={750}\r\n                preferMaxWidth={600}\r\n            >\r\n                <Provider {...commonStores} {...stores}>\r\n                    <GameLayout\r\n                        onShowHistory={onShowHistory}\r\n                        onShowDescription={onShowDescription}\r\n                        onQuitGame={onQuitGame}\r\n                        onQuitPlayer={onQuitPlayer}\r\n                        popups={popups}\r\n                    >\r\n\r\n                        <Scene name={GameUIScene.moneySelector}>\r\n                            {() => (\r\n                                <MoneySelector\r\n                                    moneyList={getOpenBoxMoneyList()}\r\n                                    onSelect={onSelectMoney}\r\n                                />\r\n                            )}\r\n                        </Scene>\r\n\r\n                        <Scene name={GameUIScene.gamePlayer}>\r\n                            {() => <BoxGameDesk />}\r\n                        </Scene>\r\n                    </GameLayout>\r\n                </Provider>\r\n            </ViewPortSizeProvider>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default compose<OpenBoxGameProps>(\r\n    hot(module),\r\n    React.memo,\r\n    watchAccountChange\r\n)(OpenBoxGame);\r\n","import {OpenBoxAPI} from './OpenBoxAPI';\r\nimport {isUsingMockAPI} from \"../isUsingMockAPI\";\r\n\r\n\r\nexport async function getOpenBoxAPI(): Promise<OpenBoxAPI> {\r\n\r\n    if (isUsingMockAPI()) {\r\n        return import('./OpenBoxAPIMock').then(m => m.default);\r\n    }\r\n\r\n    return import('./OpenBoxAPIReal').then(m => m.default);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport _ from 'lodash';\r\nimport {\r\n    getAdjustedSizeInfo,\r\n    getWinSize,\r\n    InitialSizeInfo,\r\n    PreferMode,\r\n    ViewPortSizeContext,\r\n} from \"./viewPortSizeHelper\";\r\n\r\n\r\nexport type ViewPortSizeProps = {\r\n    children: React.ReactNode | React.ReactElement;\r\n\r\n    perfectHeight: number;\r\n    perfectWidth: number;\r\n\r\n    preferMaxWidth?: number;\r\n    preferMaxHeight?: number;\r\n\r\n    preferMode?: PreferMode;\r\n}\r\n\r\nexport const ViewPortSizeProvider = React.memo(\r\n    (\r\n        {\r\n            preferMode = PreferMode.width,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxHeight = 0,\r\n            preferMaxWidth = 900,\r\n\r\n            children,\r\n        }: ViewPortSizeProps\r\n    ) => {\r\n\r\n        const [{ winHeight, winWidth }, setWinSize] = useState(getWinSize());\r\n\r\n        useEffect(() => {\r\n            window.addEventListener(\r\n                'resize',\r\n                () => {\r\n                    setWinSize(getWinSize());\r\n                }\r\n            );\r\n        }, []);\r\n\r\n        const { Provider } = ViewPortSizeContext;\r\n\r\n        const staticSizeInfo = {\r\n            winHeight,\r\n            winWidth,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxWidth,\r\n        };\r\n\r\n        const adjustedSizeInfo = getAdjustedSizeInfo({\r\n            ...staticSizeInfo,\r\n            preferMode,\r\n        });\r\n\r\n        const sizeInfo = _.extend<InitialSizeInfo>({}, staticSizeInfo, adjustedSizeInfo);\r\n\r\n        return (\r\n            <Provider value={sizeInfo}>\r\n                {children}\r\n            </Provider>\r\n        );\r\n    },\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/oh_no.4b9dfc8c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/add-score.e14110a0.mp3\";","module.exports = __webpack_public_path__ + \"static/media/result.e786a7c7.wav\";","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {Popup} from \"@web3game/common/components/popups/Popup\";\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\nimport {PlayerInfo} from \"./PlayerInfo\";\r\n\r\n\r\ntype GameResultPopupProps = {\r\n    onQuit: () => void;\r\n    gameRecord?: GameRecord;\r\n    web3?: any;\r\n};\r\n\r\nconst toNumber = (num: any) => {\r\n    if (num && num.toNumber) {\r\n        return num.toNumber();\r\n    }\r\n\r\n    return num;\r\n};\r\n\r\nexport function GameResultPopupPure(\r\n    {\r\n        onQuit,\r\n        gameRecord,\r\n        web3,\r\n    }: GameResultPopupProps,\r\n) {\r\n\r\n    if (!web3) {\r\n        return null;\r\n    }\r\n\r\n    const heroList = !gameRecord ? [] : getSortedHeroList(gameRecord)\r\n        .sort((a, b) => {\r\n\r\n            if (a.score && b.score && a.score.comparedTo && b.score.comparedTo) {\r\n                return b.score.comparedTo(a.score);\r\n            }\r\n\r\n            // @ts-ignore\r\n            return a - b;\r\n        });\r\n\r\n    const tHead = (\r\n        <tr>\r\n            <th className=\"rankIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerName\">\r\n                玩家\r\n            </th>\r\n            <th className=\"payerScore\">\r\n                钻石                \r\n            </th>\r\n            <th className=\"payerAward\">\r\n                奖励\r\n            </th>\r\n        </tr>\r\n    );\r\n    \r\n    return (\r\n        <Popup title=\"排行\" onQuit={onQuit} className=\"gameResultPopup\">\r\n            <Table tHead={tHead} className=\"gameResult\">\r\n                {heroList.map((hero, index) => (\r\n                    <tr key={hero.id}>\r\n                        <td className=\"rankIcon\">\r\n                            <div className={`rankImage rankImage${index + 1}`}>{index}</div>\r\n                        </td>\r\n                        <td className=\"playerIcon\">\r\n                            <PlayerInfo id={hero.id} imageIndex={hero.imageIndex} />\r\n                        </td>\r\n                        <td className=\"playerName\">{hero.id.slice(-6)}</td>\r\n                        <td className=\"payerScore\">{toNumber(hero.score)}</td>\r\n                        <td className=\"payerAward\">{web3.fromWei(toNumber(hero.gain), 'ether')}</td>\r\n                    </tr>\r\n                ))}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype GameResultPopupInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    web3?: any;\r\n};\r\n\r\nexport const GameResultPopup = inject(\r\n    ({ gamePlayerStore, web3 }: GameResultPopupInjectedProps) => (\r\n        {\r\n            gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n            web3,\r\n        }\r\n    ),\r\n)(GameResultPopupPure);\r\n","import {getLang} from \"@web3game/lang\";\r\n\r\nexport const getOpenBoxMoneyList = () => [\r\n    { money: 10, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_1 },\r\n    { money: 2000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_2 },\r\n    { money: 5000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_3 },\r\n    { money: 10000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_4 },\r\n    { money: 50000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_5 },\r\n];\r\n","module.exports = __webpack_public_path__ + \"static/media/beijingtu.03f0d956.png\";","import React from 'react';\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\n\r\ntype MoneySelectorPureProps = {\r\n    moneyList: any[];\r\n    onSelect: (money: number) => void;\r\n};\r\n\r\nexport function MoneySelectorPure(\r\n    {\r\n        moneyList,\r\n        onSelect,\r\n    }: MoneySelectorPureProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        width: 180,\r\n        height: 90,\r\n        fontSize: 24,\r\n    });\r\n\r\n    return (\r\n        <div className=\"moneySelector\">\r\n            {moneyList.map(({ money, text }) => (\r\n                <div key={money}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`moneySelectorButton moneySelectorButton_${money}`}\r\n                        style={buttonSize}\r\n                        onClick={() => onSelect(money)}\r\n                    >\r\n                        {text}\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const MoneySelector = React.memo(MoneySelectorPure);\r\n","import React, {useCallback} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {Popup} from \"@web3game/common/components/popups/Popup\";\r\nimport {AccountStore} from \"@web3game/common/stores/AccountStore\";\r\nimport {GameUIStore} from '@web3game/common/stores/GameUIStore';\r\nimport {getLang} from \"@web3game/lang\";\r\n\r\ntype AuthFormPureProps = {\r\n    onSubmit: (params: any) => void;\r\n    account?: string;\r\n    ttBalance?: any;\r\n    tokenBalance?: any;\r\n    gas?: any;\r\n    money?: number;\r\n};\r\n\r\nexport function AuthFormPure(\r\n    {\r\n        onSubmit,\r\n        account,\r\n        ttBalance,\r\n        tokenBalance,\r\n        money = 0,\r\n    }: AuthFormPureProps,\r\n) {\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        onSubmit({\r\n            account,\r\n            money,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Popup title={getLang().CONFIRM_SUBMIT} className=\"gameAuthFormPopup\">\r\n            <div className=\"gameAuthForm\">\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().ACCOUNT}&nbsp;:&nbsp;\r\n                    {account}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TT_BALANCE}&nbsp;:&nbsp;\r\n                    {ttBalance}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TOKEN_BALANCE}&nbsp;:&nbsp;\r\n                    {tokenBalance}\r\n                </div>\r\n                <hr />\r\n                <div className=\"gameAuthFormField\" style={{marginTop: '20px'}}>\r\n                    <button type=\"submit\" onClick={handleSubmit}>\r\n                        {getLang().SUBMIT}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype AuthFormInjectedProps = {\r\n    accountStore?: AccountStore;\r\n    gameUIStore?: GameUIStore;\r\n};\r\n\r\n\r\nexport const AuthForm = inject(\r\n    (\r\n        {\r\n            accountStore,\r\n            gameUIStore,\r\n        }: AuthFormInjectedProps,\r\n    ) => {\r\n        if (!accountStore || !gameUIStore) {\r\n            return {};\r\n        }\r\n\r\n        const { popupData: {money} } = gameUIStore;\r\n\r\n        const { \r\n            account, \r\n            ttBalance, \r\n            tokenBalance, \r\n            gas, \r\n        } = accountStore;\r\n\r\n        return { account, ttBalance, tokenBalance, gas, money };\r\n    },\r\n)(AuthFormPure);\r\n","import React from 'react';\r\nimport {hot} from \"react-hot-loader\";\r\nimport {inject} from \"mobx-react\";\r\nimport moment from \"moment\";\r\nimport {BetEvent} from '@web3game/typings/openBox';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {Popup} from \"@web3game/common/components/popups/Popup\";\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {compose} from \"@web3game/common/utils/compose\";\r\nimport {HistoryStore} from \"../stores/HistoryStore\";\r\n\r\n\r\ntype HistoryListProps = {\r\n    onPlayGame: (betEvent: BetEvent) => void;\r\n    displayList?: [];\r\n};\r\n\r\nexport function HistoryListPure(\r\n    {\r\n        onPlayGame,\r\n        displayList,\r\n    }: HistoryListProps,\r\n) {\r\n    const tHeader = (\r\n        <tr>\r\n            <th className=\"historyNo\">{getLang().OPEN_BOX_PAGE.HISTORY_NO}</th>\r\n            <th>{getLang().AMOUNT}</th>\r\n            <th className=\"historyDate\">{getLang().OPEN_BOX_PAGE.HISTORY_DATE}</th>\r\n            <th className=\"historyAction\">{\" \"}</th>\r\n        </tr>\r\n    );\r\n\r\n    const renderListItem = React.useCallback(\r\n        (item: any) => (\r\n            <tr key={item.id}>\r\n                <td className=\"historyNo\">{item.issueNo}</td>\r\n                <td>{item.money}</td>\r\n                <td className=\"historyDate\">{moment(item.time).format('MM/DD HH:mm')}</td>\r\n                <td className=\"historyAction\">\r\n                    <button\r\n                        className=\"historyActionButton\"\r\n                        onClick={() => onPlayGame(item)}\r\n                        type=\"button\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const listContent = displayList ? displayList.map(renderListItem) : null;\r\n\r\n    return (\r\n        <Popup title={getLang().OPEN_BOX_PAGE.HISTORY}>\r\n            <Table\r\n                tHead={tHeader}\r\n                className=\"historyList\"\r\n                bodyClassName=\"purchaseListTbody\"\r\n            >\r\n                {listContent}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    historyStore?: HistoryStore;\r\n};\r\n\r\nexport const HistoryListPopup = compose<HistoryListProps>(\r\n    hot(module),\r\n    inject(\r\n        ({ historyStore }: BoxGridInjectedStores) => ({\r\n            displayList: historyStore ? historyStore.displayList : [],\r\n        }),\r\n    )\r\n)(HistoryListPure);\r\n","import React, {useEffect, useState} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {Popup} from \"@web3game/common/components/popups/Popup\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {getLang} from \"@web3game/lang\";\r\n\r\n\r\ntype GameDescriptionPopupProps = {\r\n    gameRecord?: GameRecord;\r\n};\r\n\r\nexport function GameDescriptionPopupPure() {\r\n    const [htmlContent, setHtmlContent] = useState('');\r\n    useEffect(() => {\r\n        (async () => {\r\n            const html = await fetch(getLang().HTML_FILES.GAME_DESCRIPTION);\r\n            setHtmlContent(await html.text());\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <Popup\r\n            title={getLang().OPEN_BOX_PAGE.DESCRIPTION}\r\n            className=\"gameDescriptionPopup\"\r\n        >\r\n            <div dangerouslySetInnerHTML={{ __html: htmlContent }} />\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype GameResultPopupInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    web3?: any;\r\n};\r\n\r\nexport const GameDescriptionPopup = inject(\r\n    ({ gamePlayerStore, web3 }: GameResultPopupInjectedProps) => (\r\n        {\r\n            gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n            web3,\r\n        }\r\n    ),\r\n)(GameDescriptionPopupPure);\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {AccountStore} from \"../stores/AccountStore\";\r\nimport {compose} from \"./compose\";\r\n\r\ntype RC<P> = React.ComponentType<P> | React.FunctionComponent<P> ;\r\n\r\n\r\ntype WatchLocaleInjectedProps = { accountStore: AccountStore };\r\n\r\nexport function injectMainAccountData<P>(Component: RC<P>) {\r\n    return inject(\r\n        (\r\n            {\r\n                accountStore,\r\n            }: WatchLocaleInjectedProps,\r\n        ) => (\r\n            {\r\n                locale: accountStore.locale,\r\n                dataVersion: accountStore.dataVersion,\r\n                updateDataVersion: () => accountStore.updateDataVersion(),\r\n            }\r\n        ),\r\n    )(Component);\r\n}\r\n\r\nexport function watchAccountChange<P>(Component: RC<P>) {\r\n    return compose<P>(\r\n        observer,\r\n        injectMainAccountData,\r\n    )(Component);\r\n}\r\n\r\n\r\n","import React, {Fragment, useState} from 'react';\r\nimport {PopupRenderer} from \"./PopupRenderer\";\r\nimport {PopupElement} from \"@web3game/typings/common\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\n\r\nexport type PopupManagerProps = {\r\n    popups?: PopupElement[];\r\n};\r\n\r\nconst PopupManagerContext = React.createContext({});\r\n\r\nfunction usePopupManager(popupsList: PopupElement[]) {\r\n    const [popups, setPopups] = useState(popupsList);\r\n\r\n    return {\r\n        popups,\r\n        showPopup: (popup: PopupElement) => {\r\n            setPopups([\r\n                ...popups,\r\n                popup,\r\n            ]);\r\n        },\r\n        closePopup: (name: PopupNames) => {\r\n            setPopups(popups.filter((p: any) => p.name !== name));\r\n        },\r\n    };\r\n}\r\n\r\nexport function PopupManager({ popups = [] }: PopupManagerProps) {\r\n\r\n    const { showPopup, popups: popupList } = usePopupManager(popups);\r\n\r\n    return (\r\n        <PopupManagerContext.Provider value={{ showPopup }}>\r\n            <Fragment>\r\n                {\r\n                    popupList.map(({ name, renderer }) => (\r\n                        <PopupRenderer key={name} name={name}>\r\n                            {renderer}\r\n                        </PopupRenderer>\r\n                    ))\r\n                }\r\n            </Fragment>\r\n        </PopupManagerContext.Provider>\r\n    );\r\n\r\n}\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameUIStore} from \"@web3game/common/stores/GameUIStore\";\r\nimport {GameUIScene} from \"@web3game/common/utils/constants\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\n\r\ntype QuitGameButtonProps = {\r\n    onQuitPlayer?: () => void;\r\n    onQuitGame?: () => void;\r\n    isPlayerActive: boolean;\r\n};\r\n\r\nexport function QuitGameButtonPure(\r\n    {\r\n        onQuitPlayer,\r\n        onQuitGame,\r\n        isPlayerActive,\r\n    }: QuitGameButtonProps,\r\n) {\r\n    const onClick = isPlayerActive ? onQuitPlayer : onQuitGame;\r\n\r\n    if (!onClick) {\r\n        return null;\r\n    }\r\n\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"gameQuitButton\"\r\n            onClick={onClick}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().BACK}\r\n        </button>\r\n    );\r\n}\r\n\r\nQuitGameButtonPure.defaultProps = {\r\n    isPlayerActive: false,\r\n};\r\n\r\ntype QuitGameButtonInjectedProps = {\r\n    gameUIStore?: GameUIStore;\r\n    onQuitGame: () => void;\r\n    onQuitPlayer: () => void;\r\n};\r\n\r\nexport const QuitGameButton = inject(\r\n    (\r\n        { gameUIStore }: QuitGameButtonInjectedProps,\r\n    ) => {\r\n        const isPlayerActive = gameUIStore && gameUIStore.scene === GameUIScene.gamePlayer;\r\n\r\n        return {\r\n            isPlayerActive,\r\n        };\r\n    },\r\n)(QuitGameButtonPure);\r\n","import React from 'react';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\n\r\ntype HistoryButtonProps = {\r\n    onShowHistory: () => void;\r\n};\r\n\r\nexport function HistoryButton(\r\n    {\r\n        onShowHistory,\r\n    }: HistoryButtonProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n    return (\r\n        <button\r\n            className=\"gameHistoryButton\"\r\n            onClick={onShowHistory}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().OPEN_BOX_PAGE.HISTORY}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default React.memo(HistoryButton);\r\n","import React from 'react';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {compose} from \"@web3game/common/utils/compose\";\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIScene} from \"@web3game/common/utils/constants\";\r\nimport {GameUIStore} from \"@web3game/common/stores/GameUIStore\";\r\n\r\ntype DescriptionButtonProps = {\r\n    onShowDescription: () => void;\r\n    isPlayerActive?: boolean;\r\n};\r\n\r\nexport function DescriptionButtonPure(\r\n    {\r\n        onShowDescription,\r\n        isPlayerActive = false,\r\n    }: DescriptionButtonProps,\r\n) {\r\n    if (isPlayerActive) {\r\n        return null;\r\n    }\r\n\r\n    const buttonSize = useVPStyle({\r\n        position: 'absolute',\r\n        fontSize: 26,\r\n        width: 280,\r\n        height: 120,\r\n        top: 300,\r\n        left: 150,\r\n    });\r\n\r\n    return (\r\n        <div\r\n            className=\"gameDescriptionButton\"\r\n            onClick={onShowDescription}\r\n            style={buttonSize}\r\n        >\r\n            {getLang().OPEN_BOX_PAGE.DESCRIPTION}\r\n        </div>\r\n    );\r\n}\r\n\r\ntype GameDescriptionButtonInjectedProps = {\r\n    gameUIStore?: GameUIStore;\r\n};\r\n\r\n\r\nexport const DescriptionButton = compose<DescriptionButtonProps>(\r\n    React.memo,\r\n    inject(\r\n        (\r\n            { gameUIStore }: GameDescriptionButtonInjectedProps,\r\n        ) => {\r\n            const isPlayerActive = gameUIStore && gameUIStore.scene === GameUIScene.gamePlayer;\r\n\r\n            return {\r\n                isPlayerActive,\r\n            };\r\n        },\r\n    )\r\n)(DescriptionButtonPure);\r\n","import React, {useContext} from 'react';\r\nimport {PopupManager} from \"@web3game/common/components/popups/PopupManger\";\r\nimport {ViewPortSizeContext} from \"@web3game/common/components/viewPort/viewPortSizeHelper\";\r\nimport BackgroundUrl from '@web3game/common/styles/images/beijingtu.png';\r\nimport {PopupElement} from \"@web3game/typings/common\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\n\r\nimport {QuitGameButton} from \"./QuitGameButton\";\r\nimport {HistoryButton} from \"./HistoryButton\";\r\nimport {DescriptionButton} from \"./DescriptionButton\";\r\n\r\nexport type GameLayoutProps = {\r\n    children?: React.ReactElement | React.ReactElement[];\r\n    onShowHistory: () => void;\r\n    onShowDescription: () => void;\r\n    onQuitGame?: () => void;\r\n    onQuitPlayer?: () => void;\r\n    popups?: PopupElement[];\r\n};\r\n\r\nexport function GameLayout(\r\n    {\r\n        children,\r\n        onShowHistory,\r\n        popups = [],\r\n        onQuitGame,\r\n        onQuitPlayer,\r\n        onShowDescription,\r\n    }: GameLayoutProps,\r\n) {\r\n    const {\r\n        adjustedHeight,\r\n        adjustedWidth,\r\n    } = useContext(ViewPortSizeContext);\r\n\r\n    const applicationSize = {\r\n        width: adjustedWidth,\r\n        height: adjustedHeight,\r\n    };\r\n\r\n    const gameContentStyle = useVPStyle({\r\n        paddingTop: 460,\r\n    });\r\n\r\n    return (\r\n        <div className=\"gameApplication\" style={applicationSize}>\r\n            <img src={BackgroundUrl} alt=\"background\" className=\"backgroundImage\" />\r\n            <HistoryButton onShowHistory={onShowHistory} />\r\n            <DescriptionButton onShowDescription={onShowDescription} />\r\n            <QuitGameButton\r\n                onQuitGame={onQuitGame}\r\n                onQuitPlayer={onQuitPlayer}\r\n            />\r\n\r\n            <div className=\"gameDesktop\">\r\n                <div className=\"gameDesktopContent\" style={gameContentStyle}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n\r\n            <PopupManager popups={popups} />\r\n        </div>\r\n    );\r\n}\r\n","import {action, observable} from \"mobx\";\r\n\r\n\r\nexport class HistoryStore {\r\n\r\n    @observable\r\n    public displayList: object[] = [];\r\n\r\n    @action\r\n    public setDisplayList(history: object[]) {\r\n        this.displayList = history;\r\n    }\r\n\r\n}\r\n\r\nexport const historyStore = new HistoryStore();\r\n","import {EventEmitter} from \"../../common/utils/EventEmitter\";\r\n\r\nconst ON_GAME_NOT_READY = 'ON_GAME_NOT_READY';\r\n\r\nexport class GlobalEvent extends EventEmitter {\r\n\r\n    public onGameReadyStatusChange = (fn: () => void) => this.on(ON_GAME_NOT_READY, fn);\r\n\r\n    public triggerGameReadyStatus = (isReady: boolean) => this.emit(ON_GAME_NOT_READY, isReady);\r\n\r\n}\r\n\r\nexport const openBoxEvents = new GlobalEvent({});\r\n\r\nexport default openBoxEvents;\r\n","import {action, observable} from \"mobx\";\r\nimport * as _ from 'lodash';\r\nimport {BoxInfo, GameRecord, PlayerScoreByPosition, PositionType} from \"@web3game/typings/openBox\";\r\n\r\nimport {EventEmitter} from \"../../common/utils/EventEmitter\";\r\nimport {OpenBoxTimeSpan, OpeningDuration, PrepareBoxTimeSpan} from \"../core/openBoxConstants\";\r\n\r\n\r\nimport {getSortedBoxes, playSound, Sounds} from \"../core/gameHelper\";\r\nimport {openBoxEvents} from \"../eventBus/openBoxEvents\";\r\n\r\n/**\r\n * @typedef {Object} GameRecord\r\n * @property {[Number]} scores\r\n * @property {[Number]} sequencs\r\n * @property {[Number]} playerScores\r\n * */\r\n\r\n\r\n\r\nconst getInitialScores = (): PlayerScoreByPosition => ({\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n});\r\n\r\nexport class GamePlayerStore extends EventEmitter {\r\n\r\n    public EventKeys = {\r\n        start: 'start',\r\n        end: 'end',\r\n        pause: 'pause',\r\n        resume: 'resume',\r\n        beginOpenBox: 'beginOpenBox',\r\n        finishOpenBox: 'finishOpenBox',\r\n    };\r\n\r\n    @observable\r\n    public betAddress = '';\r\n\r\n    @action\r\n    public setBetAddress(betAddress: string) {\r\n        this.betAddress = betAddress;\r\n    }\r\n\r\n    @observable\r\n    public gameRecord: GameRecord | null = null;\r\n\r\n    @observable\r\n    public openIndex = -1;\r\n\r\n    @observable\r\n    public finishedOpenIndex: number = -1;\r\n\r\n    @observable\r\n    public openingBox: BoxInfo | null | undefined = null;\r\n\r\n    @observable\r\n    public isPaused = false;\r\n\r\n    private playerTimeout = 0;\r\n\r\n    @observable\r\n    public playerScores: PlayerScoreByPosition = getInitialScores();\r\n\r\n    @observable\r\n    public boomedHeroId = null;\r\n\r\n    @observable\r\n    public fasterTimes = 1; // 播放时间间隔倍数\r\n\r\n\r\n    /**\r\n     * @param {CurrentGameRecord} gameRecord\r\n     * */\r\n    @action\r\n    public startGame(gameRecord: GameRecord): Promise<any> {\r\n        this.resetPlayer();\r\n        if (!gameRecord) return Promise.resolve();\r\n\r\n        if (gameRecord.play === false) {\r\n            this.isPaused = true;\r\n            openBoxEvents.triggerGameReadyStatus(false);\r\n        } else {\r\n            openBoxEvents.triggerGameReadyStatus(true);\r\n        }\r\n\r\n        this.gameRecord = gameRecord;\r\n\r\n        this.emit(this.EventKeys.start);\r\n\r\n        return Promise.resolve(\r\n            this.playBoxByIndex(0),\r\n        ).then((isEnd) => {\r\n            if (isEnd && !this.isPaused) {\r\n                this.emit(this.EventKeys.end);\r\n                playSound(Sounds.result);\r\n            }\r\n        });\r\n    }\r\n\r\n    @action\r\n    public restartGame() {\r\n        if (this.gameRecord) {\r\n            this.startGame(this.gameRecord);\r\n        }\r\n    }\r\n\r\n    @action\r\n    private clearPlayerTimeout() {\r\n        if (this.playerTimeout) {\r\n            clearTimeout(this.playerTimeout);\r\n            this.playerTimeout = 0;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public playBoxByIndex(openIndex: number): any {\r\n        if (!this.gameRecord) {\r\n            return false;\r\n        }\r\n\r\n        this.openIndex = openIndex;\r\n\r\n        this.openingBox = null;\r\n\r\n        const sortedBoxes = getSortedBoxes(this.gameRecord);\r\n\r\n        const getBoxByOpenIndex = (index: number) => _.find(\r\n            sortedBoxes,\r\n            box => box.openIndex === index,\r\n        );\r\n\r\n        if (openIndex < sortedBoxes.length && openIndex >= 0) {\r\n\r\n            return this.waitTimeout(\r\n                action('onPrepareBox', () => {\r\n                    const openingBox = getBoxByOpenIndex(openIndex);\r\n\r\n                    this.openingBox = openingBox;\r\n\r\n                    this.emit(this.EventKeys.beginOpenBox, openIndex, openingBox);\r\n\r\n                    return this.waitTimeout(\r\n                        action('onBoxOpen', () => {\r\n\r\n                            if (this.isPaused) {\r\n                                return false;\r\n                            }\r\n\r\n\r\n                            this.finishedOpenIndex = openIndex;\r\n\r\n                            this.emit(this.EventKeys.finishOpenBox, openIndex, openingBox);\r\n\r\n                            if (openingBox) {\r\n                                const heroPos = openingBox.heroPos as PositionType;\r\n\r\n                                if (openingBox.score === 0) {\r\n                                    this.playerScores[heroPos] = 0;\r\n                                    this.boomedHeroId = openingBox.heroId;\r\n                                    playSound(Sounds.boom);\r\n                                } else {\r\n                                    playSound(Sounds.addScore);\r\n                                    const oldScore = this.playerScores[heroPos];\r\n                                    this.playerScores[heroPos] = oldScore\r\n                                        + openingBox.score;\r\n                                    this.boomedHeroId = null;\r\n                                }\r\n                            }\r\n\r\n                            return this.waitTimeout(\r\n                                () => this.playBoxByIndex(openIndex + 1),\r\n                                OpeningDuration,\r\n                            );\r\n\r\n                        }),\r\n                        OpenBoxTimeSpan,\r\n                    );\r\n                }),\r\n                PrepareBoxTimeSpan,\r\n            );\r\n\r\n\r\n        }\r\n\r\n        this.openIndex = -1;\r\n        this.openingBox = null;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    @action\r\n    public clearBoomer() {\r\n        this.boomedHeroId = null;\r\n    }\r\n\r\n    public waitTimeout(actionFn: () => any, timeout = OpeningDuration) {\r\n        return new Promise((resolve) => {\r\n            // @ts-ignore\r\n            this.playerTimeout = setTimeout(() => resolve(actionFn()), timeout * this.fasterTimes);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public toggleFaster() {\r\n        if (this.fasterTimes === 1) {\r\n            this.fasterTimes = 0.2;\r\n        } else {\r\n            this.fasterTimes = 1;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public pause = () => {\r\n        this.isPaused = true;\r\n        this.clearPlayerTimeout();\r\n    };\r\n\r\n    @action\r\n    public resume = () => {\r\n        this.isPaused = false;\r\n        this.playBoxByIndex(this.openIndex);\r\n    };\r\n\r\n    @action\r\n    public resetPlayer() {\r\n        this.fasterTimes = 1;\r\n        this.gameRecord = null;\r\n        this.openingBox = null;\r\n        this.openIndex = -1;\r\n        this.finishedOpenIndex = -1;\r\n        this.isPaused = false;\r\n        this.boomedHeroId = null;\r\n        this.playerScores = getInitialScores();\r\n        this.clearPlayerTimeout();\r\n    }\r\n\r\n    @action\r\n    public quit() {\r\n        this.resetPlayer();\r\n        this.removeAll();\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onBeginOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.beginOpenBox, fn);\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onFinishOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.finishOpenBox, fn);\r\n    }\r\n\r\n    public onStart(fn: () => void) {\r\n        return this.on(this.EventKeys.start, fn);\r\n    }\r\n\r\n    public onGameEnd(fn: () => void) {\r\n        return this.on(this.EventKeys.end, fn);\r\n    }\r\n\r\n    public onPause(fn: () => void) {\r\n        return this.on(this.EventKeys.pause, fn);\r\n    }\r\n\r\n    public onResume(fn: () => void) {\r\n        return this.on(this.EventKeys.resume, fn);\r\n    }\r\n\r\n}\r\n\r\nexport const gamePlayerStore = new GamePlayerStore();\r\n","export {historyStore} from './HistoryStore';\r\nexport {gamePlayerStore} from './GamePlayerStore';\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {BoxStatus} from \"../core/openBoxConstants\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst AnimatedClassNames = {\r\n    [BoxStatus.opening]: 'animated swing active',\r\n};\r\n\r\ntype BoxInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\ntype BoxProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    boxIndex: number;\r\n    openIndex: number;\r\n    score: number;\r\n    boxCover: number;\r\n};\r\n\r\n@inject(\r\n    (stores: BoxInjectedStores) => ({\r\n        gamePlayerStore: stores.gamePlayerStore,\r\n    }),\r\n)\r\n@observer\r\nexport class Box extends React.Component<BoxProps> {\r\n\r\n    static defaultProps = {\r\n        boxCover: 0,\r\n    };\r\n\r\n    getStatus() {\r\n        const { boxIndex, gamePlayerStore } = this.props;\r\n        const isOpened = this.isBoxOpened();\r\n        const isOpening = gamePlayerStore && gamePlayerStore.openingBox\r\n            && (gamePlayerStore.openingBox.boxIndex === boxIndex);\r\n\r\n        if (isOpened) {\r\n            return BoxStatus.opened;\r\n        }\r\n\r\n        return isOpening ? BoxStatus.opening : BoxStatus.closed;\r\n    }\r\n\r\n    getAnimatedClassByStatus(status: string) {\r\n        const { gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore || gamePlayerStore.isPaused) {\r\n            return '';\r\n        }\r\n\r\n        return AnimatedClassNames[status] || '';\r\n    }\r\n\r\n    isBoxOpened = () => {\r\n        const { openIndex, gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore) {\r\n            return false;\r\n        }\r\n\r\n        return openIndex <= gamePlayerStore.finishedOpenIndex;\r\n    };\r\n\r\n    render() {\r\n        const { score, boxCover } = this.props;\r\n        const isBoomer = score === 0;\r\n        const status = this.getStatus();\r\n        const boomClassName = isBoomer ? 'boom' : '';\r\n        const scoreClassName = score >= 5 ? 'largerThen5' : 'lessThen5';\r\n        const boxCoverClassName = `box${boxCover}`;\r\n        const boxClassName = `${boomClassName} ${scoreClassName} score score${score}`;\r\n\r\n        const boxWrapperClassName = `${boxCoverClassName}`;\r\n        const boxSize = useVPStyle({\r\n            width: 100,\r\n            height: 132,\r\n        });\r\n\r\n        return (\r\n            <div\r\n                className={`box box-${status} ${boxWrapperClassName} ${this.getAnimatedClassByStatus(status)} xk`}\r\n                style={boxSize}\r\n            >\r\n                {!this.isBoxOpened() ? null : (\r\n                    <div className={boxClassName}>\r\n                        {isBoomer ? null : ` `}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport _ from 'lodash';\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {Box} from \"./Box\";\r\nimport {getSortedBoxes} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst ColumnNum = 4;\r\n\r\nconst range4 = () => _.range(4);\r\n\r\ntype BoxGridProps = {\r\n    gameRecord?: GameRecord;\r\n};\r\n\r\nexport function BoxGridPure({ gameRecord }: BoxGridProps) {\r\n\r\n    useEffect(() => {\r\n        if (gameRecord && !gameRecord.play) {\r\n            setTimeout(() => alert(getLang().GAME_IS_NOT_READY), 300);\r\n        }\r\n    }, [gameRecord && gameRecord.id]);\r\n\r\n    const renderColumn = (rowIndex: number, columnIndex: number) => {\r\n        const boxIndex = rowIndex * ColumnNum + columnIndex;\r\n        const boxInfo = gameRecord ? getSortedBoxes(gameRecord)[boxIndex] : null;\r\n\r\n        if (!boxInfo) {\r\n            return (\r\n                <td key={columnIndex} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <td key={columnIndex}>\r\n                <Box\r\n                    boxIndex={boxIndex}\r\n                    openIndex={boxInfo.openIndex}\r\n                    score={boxInfo.score}\r\n                    boxCover={_.random(1, 3)}\r\n                />\r\n            </td>\r\n        );\r\n    };\r\n\r\n    const renderRow = (rowIndex: number) => (\r\n        <tr key={rowIndex}>\r\n            {range4().map(colIndex => renderColumn(rowIndex, colIndex))}\r\n        </tr>\r\n    );\r\n\r\n    const tableSize = useVPStyle({\r\n        width: 320,\r\n    });\r\n\r\n    return (\r\n        <Table\r\n            className=\"boxGrid\"\r\n            style={tableSize}\r\n        >\r\n            {range4().map(renderRow)}\r\n        </Table>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\n\r\nexport const BoxGrid = inject(\r\n    ({ gamePlayerStore }: BoxGridInjectedStores) => (\r\n        { gameRecord: gamePlayerStore && gamePlayerStore.gameRecord }\r\n    ),\r\n)(BoxGridPure);\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {GameRecord, PositionType} from \"@web3game/typings/openBox\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {PlayerInfo} from \"./PlayerInfo\";\r\nimport {BoxGrid} from \"./BoxGrid\";\r\n\r\nexport type BoxGameDeskProps = {\r\n    gameRecord?: GameRecord;\r\n    playerScores?: object;\r\n    openIndex?: number;\r\n};\r\n\r\nexport function BoxGameDeskPure(\r\n    {\r\n        gameRecord,\r\n        playerScores,\r\n        openIndex = -1,\r\n    }: BoxGameDeskProps\r\n) {\r\n    const heroList = gameRecord ? getSortedHeroList(gameRecord) : [];\r\n    const realTimeScore = (pos: PositionType) => {\r\n        if (!gameRecord || !playerScores) {\r\n            return 0;\r\n        }\r\n\r\n        return (playerScores as any)[pos];\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {heroList.map(\r\n                hero => (\r\n                    <PlayerInfo\r\n                        key={hero.id}\r\n                        imageIndex={hero.imageIndex}\r\n                        score={realTimeScore(hero.pos)}\r\n                        pos={hero.pos}\r\n                        isActive={openIndex % 4 === hero.index}\r\n                    />\r\n                ),\r\n            )}\r\n\r\n            <BoxGrid />\r\n        </>\r\n    );\r\n}\r\n\r\nexport type BoxGameDeskInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\nexport const BoxGameDesk = inject(\r\n    ({ gamePlayerStore }: BoxGameDeskInjectedProps) => ({\r\n        gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n        playerScores: gamePlayerStore ? gamePlayerStore.playerScores : {},\r\n        openIndex: gamePlayerStore ? gamePlayerStore.openIndex : -1,\r\n    }),\r\n)(observer(BoxGameDeskPure));\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../stores/GameUIStore\";\r\nimport {GameUIScene} from \"../utils/constants\";\r\n\r\ntype ScenePureProps = {\r\n    name: GameUIScene;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function ScenePure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: ScenePureProps,\r\n) {\r\n    if (!isActive) {\r\n        return null;\r\n    }\r\n\r\n    return children();\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const Scene = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.scene === name,\r\n    }),\r\n)(ScenePure);\r\n","export * from './Scene';\r\nexport * from './popups/PopupRenderer';\r\n","import {CSSProperties, useContext} from \"react\";\r\nimport _ from 'lodash';\r\nimport {ViewPortSizeContext} from \"./viewPortSizeHelper\";\r\n\r\nexport function useVPStyle(styles: CSSProperties) {\r\n    const { finalRatio } = useContext(ViewPortSizeContext);\r\n    const getStyleVal = (val: number) => (val ? val * finalRatio : 0);\r\n\r\n    return _.reduce(\r\n        styles,\r\n        (result: any, value: any, key: string) => {\r\n\r\n            if (value && _.isNumber(value)) {\r\n                /* eslint no-param-reassign:0 */\r\n                result[key] = getStyleVal(value);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        styles,\r\n    );\r\n}\r\n","import _ from 'lodash';\r\nimport {Howl} from 'howler';\r\nimport {BoxInfo, GameRecord, HeroInfo, PositionType} from \"@web3game/typings/openBox\";\r\n\r\n\r\nexport const Sounds = {\r\n    boom: require('../statics/sounds/oh_no.mp3'),\r\n    addScore: require('../statics/sounds/add-score.mp3'),\r\n    result: require('../statics/sounds/result.wav'),\r\n};\r\n\r\nexport function playSound(soundSrc: string) {\r\n    const sound = new Howl({\r\n        src: [soundSrc],\r\n    });\r\n\r\n    sound.play();\r\n\r\n}\r\n\r\nexport function getSortedHeroList(gameRecord: GameRecord) {\r\n    const targetSelfPosition = 2;\r\n    const {currentUserId, playerAddrs, playerScores, playerAwards = []} = gameRecord;\r\n\r\n    const currentUserIdIndex = playerAddrs.indexOf(currentUserId);\r\n    const imageIndexsMap = getRandomUsersImageIndex(playerAddrs);\r\n\r\n    let resortedUserIds: string[] = [];\r\n\r\n    const posDiff = currentUserIdIndex - targetSelfPosition;\r\n\r\n    if (posDiff > 0) {\r\n        (() => {\r\n            for (let i = posDiff; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(\r\n                    playerAddrs[i],\r\n                );\r\n            }\r\n\r\n            for (let i = 0; i < posDiff; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else if (posDiff < 0) {\r\n        (() => {\r\n            const startMoveIndex = playerAddrs.length + posDiff;\r\n            for (let i = startMoveIndex; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n\r\n            for (let i = 0; i < startMoveIndex; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else {\r\n        resortedUserIds = _.cloneDeep(playerAddrs);\r\n    }\r\n\r\n    /** @returns {HeroInfo} */\r\n    const genOtherRecord = (pos: PositionType, sortedIndex: number): HeroInfo => {\r\n        const id = resortedUserIds[sortedIndex];\r\n        const index = playerAddrs.indexOf(id);\r\n        return {\r\n            id,\r\n            pos,\r\n            index,\r\n            isCurrentUser: false,\r\n            score: playerScores[index],\r\n            gain: playerAwards[index],\r\n            imageIndex: imageIndexsMap[id],\r\n        };\r\n    };\r\n\r\n    /** @returns {HeroInfo} */\r\n    const getCurrentRecord = (id: string): HeroInfo => {\r\n        const index = playerAddrs.indexOf(id);\r\n\r\n        return {\r\n            id,\r\n            pos: PositionType.bottom,\r\n            index,\r\n            isCurrentUser: true,\r\n            score: playerScores[index],\r\n            imageIndex: imageIndexsMap[id],\r\n            gain: playerAwards[index],\r\n        };\r\n    };\r\n\r\n    return [\r\n        genOtherRecord(PositionType.top, 0),\r\n        genOtherRecord(PositionType.right, 1),\r\n        getCurrentRecord(currentUserId),\r\n        genOtherRecord(PositionType.left, 3),\r\n    ];\r\n}\r\n\r\n\r\nexport function getSortedBoxes(gameRecord: GameRecord): BoxInfo[] {\r\n    const {scores, sequencs, playerAddrs} = gameRecord;\r\n    const sortedHeroList = getSortedHeroList(gameRecord);\r\n\r\n    return scores.map((score: number, boxIndex: number) => {\r\n\r\n        let openIndex = sequencs.indexOf(boxIndex);\r\n\r\n        if (openIndex === -1) {\r\n            openIndex = boxIndex;\r\n        }\r\n\r\n        const playerIndex = openIndex % 4;\r\n\r\n        const heroId = playerAddrs[playerIndex];\r\n\r\n        const heroInfo = _.find(sortedHeroList, hero => hero.id === heroId);\r\n\r\n        return {\r\n            boxIndex,\r\n            score,\r\n            openIndex,\r\n            heroId,\r\n            heroIndex: heroInfo ? heroInfo.index : -1,\r\n\r\n            /** @type {HeroInfo} */\r\n            heroInfo,\r\n            heroPos: heroInfo ? heroInfo.pos : '',\r\n        };\r\n    });\r\n}\r\n\r\n\r\nconst userImageIndexCache: { [name: string]: any } = {};\r\n\r\n/**\r\n * returns {Object} // { userId1: 1, userId2: 9, userId3: 3, userId4: 5}\r\n * */\r\nexport function getRandomUsersImageIndex(userIds: string[]): { [name: string]: any } {\r\n    const getRandomValue = () => _.random(1, 12);\r\n\r\n    const getRandomValueNotIn = (values: number[]) => {\r\n        let value: number;\r\n\r\n        do {\r\n            value = getRandomValue();\r\n        } while (values.indexOf(value) >= 0);\r\n\r\n        return value;\r\n    };\r\n\r\n    return _.reduce(\r\n        userIds,\r\n        (im: { [name: string]: number }, userId: string) => {\r\n            const imageIndexMap = im;\r\n\r\n            let imageIndex = userImageIndexCache[userId];\r\n            const prevImageIndexList = Object.values(imageIndexMap) as number[];\r\n\r\n            if (imageIndex === undefined || prevImageIndexList.indexOf(imageIndex) >= 0) {\r\n                imageIndex = getRandomValueNotIn(prevImageIndexList);\r\n            }\r\n\r\n            imageIndexMap[userId] = imageIndex;\r\n\r\n            userImageIndexCache[userId] = imageIndex;\r\n\r\n            return imageIndexMap;\r\n        },\r\n        {},\r\n    );\r\n}\r\n","import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    title: string;\r\n    className?: string;\r\n    onQuit?: () => void;\r\n    children: React.ReactElement | React.ReactElement[];\r\n};\r\n\r\nconst Modal = posed.div({\r\n    enter: {\r\n        y: 0,\r\n        opacity: 1,\r\n        delay: 300,\r\n        transition: {\r\n            y: { type: 'spring', stiffness: 1000, damping: 15 },\r\n            default: { duration: 300 }\r\n        }\r\n    },\r\n    exit: {\r\n        y: 50,\r\n        opacity: 0,\r\n        transition: { duration: 150 }\r\n    }\r\n});\r\n\r\nconst Backdrop = posed.div({\r\n    enter: { opacity: 0.8 },\r\n    exit: { opacity: 0 }\r\n});\r\n\r\nexport function PopupPure(\r\n    {\r\n        title,\r\n        className = '',\r\n        onQuit,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    useEffect(() => {\r\n        setIsVisible(true);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`popup ${className}`}>\r\n            <PoseGroup>\r\n                {\r\n                    isVisible && [\r\n                        (\r\n                            <Backdrop\r\n                                key=\"popupBackdrop\"\r\n                                className=\"popupBackdrop\"\r\n                                onClick={onQuit}\r\n                                onTouchEnd={onQuit}\r\n                                onKeyDown={() => undefined}\r\n                                role=\"button\"\r\n                                tabIndex={0}\r\n                                aria-label=\"click to close popup\"\r\n                            />\r\n                        ),\r\n                        (\r\n                            <Modal key=\"popupWrapper\" className=\"popupWrapper\">\r\n                                <div className=\"popupContainer\">\r\n                                    <div className=\"popupHeader\">\r\n                                        <button\r\n                                            onClick={onQuit}\r\n                                            onTouchEnd={onQuit}\r\n                                            type=\"button\"\r\n                                            className=\"popupQuitButton\"\r\n                                        >\r\n                                            Quit\r\n                                        </button>\r\n                                        <h2>{title}</h2>\r\n                                    </div>\r\n                                    <div className=\"popupBody\">\r\n                                        <div className=\"popupContent\">\r\n                                            {children}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Modal>\r\n                        )\r\n                    ]\r\n                }\r\n            </PoseGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype PopupProps = { gameUIStore: GameUIStore };\r\n\r\nexport const Popup = inject(({ gameUIStore }: PopupProps, { onQuit }) => ({\r\n    onQuit: _.debounce(() => {\r\n        if (onQuit) {\r\n            onQuit();\r\n        }\r\n\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    }, 50),\r\n}))(PopupPure);\r\n"],"sourceRoot":""}