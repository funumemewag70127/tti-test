{"version":3,"sources":["apis/contractHelps/openBoxContract.js","common/utils/functions/sort.js","apis/helpers/web3Helpers.js","apis/helpers/getWeb3.js","apis/openbox/OpenBoxAPIReal.ts"],"names":["openBoxContract","_openBoxContract","apply","this","arguments","_callee","contract","_ref","currentProvider","accounts","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","TruffleContract","OpenBoxContract","getProviderAndAccounts","sent","setProvider","defaults","from","abrupt","deployed","stop","loadGame","_x","_loadGame","_callee2","issueNo","_context2","betEvent","_x2","_betEvent","_callee3","_from","event","getAsync","_context3","Bet","fromBlock","toBlock","promisify","get","bind","openBoxRewardEvent","_openBoxRewardEvent","_callee4","_ref2","web3","logs","events","i","log","e","_context4","getWeb3","Reward","target","length","key","args","amount","_","ceil","fromWei","toNumber","time","eventName","getLang","LOGS","KP_BET_REWARD","push","openBoxBetEvent","_openBoxBetEvent","_callee5","_ref3","_context5","KP_BET","compareByTime","obj1","obj2","value1","__webpack_require__","d","__webpack_exports__","getAccounts","_getAccounts","eth","getAccountsAsync","getBalance","_getBalance","getBalanceAsync","_getProviderAndAccounts","sendTransaction","_sendTransaction","transactionObject","_ref5","sendTransactionAsync","web3Instance","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","mark","context","web3Provider","window","global","ethereum","enable","t0","Error","console","Web3","providers","HttpProvider","WEB3","NO_WEB3_PROVIDER","OpenBoxAPIReal","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","value","_getBetAddress","address","_getHistoryList","id","money","betTime","currentUserId","sort","_loadGame2","historyData","game","scores","sequencs","gameRecord","playerAddrs","playerScores","playerAwards","play"],"mappings":"iWASO,SAAeA,IAAtB,OAAAC,EAAAC,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cACGT,EAAWU,IAAgBC,GAD9BJ,EAAAE,KAAA,EAEyCG,cAFzC,cAAAX,EAAAM,EAAAM,KAEKX,EAFLD,EAEKC,gBAAiBC,EAFtBF,EAEsBE,SACzBH,EAASc,YAAYZ,GACrBF,EAASe,SAAS,CAACC,KAAMb,EAAS,KAJ/BI,EAAAU,OAAA,SAKIjB,EAASkB,YALb,wBAAAX,EAAAY,SAAApB,6BAQA,SAAeqB,EAAtBC,GAAA,OAAAC,EAAA1B,MAAAC,KAAAC,sDAAO,SAAAyB,EAAwBC,GAAxB,IAAAxB,EAAA,OAAAI,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACoBf,IADpB,cACGM,EADHyB,EAAAZ,KAAAY,EAAAR,OAAA,SAEIjB,EAASoB,SAASI,IAFtB,wBAAAC,EAAAN,SAAAI,6BAKA,SAAeG,EAAtBC,GAAA,OAAAC,EAAAhC,MAAAC,KAAAC,sDAAO,SAAA+B,EAAwBC,GAAxB,IAAA9B,EAAA+B,EAAAC,EAAA,OAAA5B,EAAAC,EAAAC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EACoBf,IADpB,cACGM,EADHiC,EAAApB,KAEGkB,EAAQ/B,EAASkC,IAAI,CAAClB,KAAMc,GAAQ,CAACK,UAAW,EAAGC,QAAS,WAC5DJ,EAAWK,oBAAUN,EAAMO,IAAIC,KAAKR,IAHvCE,EAAAhB,OAAA,SAIIe,KAJJ,wBAAAC,EAAAd,SAAAU,6BAOA,SAAeW,IAAtB,OAAAC,EAAA7C,MAAAC,KAAAC,sDAAO,SAAA4C,IAAA,IAAA1C,EAAA2C,EAAAxC,EAAAyC,EAAAb,EAAAC,EAAAa,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7C,EAAAC,EAAAC,KAAA,SAAA4C,GAAA,cAAAA,EAAA1C,KAAA0C,EAAAzC,MAAA,cAAAyC,EAAAzC,KAAA,EACoBf,IADpB,cACGM,EADHkD,EAAArC,KAAAqC,EAAAzC,KAAA,EAEwBG,cAFxB,cAAA+B,EAAAO,EAAArC,KAEKV,EAFLwC,EAEKxC,SAFL+C,EAAAzC,KAAA,EAGgB0C,cAHhB,cAGGP,EAHHM,EAAArC,KAIGkB,EAAQ/B,EAASoD,OAAO,CAACC,OAAQlD,EAAS,IAAK,CAACgC,UAAW,EAAGC,QAAS,WACvEJ,EAAWK,oBAAUN,EAAMO,IAAIC,KAAKR,IALvCmB,EAAAzC,KAAA,GAMgBuB,IANhB,WAMGa,EANHK,EAAArC,KAOCiC,EAAS,GACM,IAAhBD,EAAKS,OARL,CAAAJ,EAAAzC,KAAA,gBAAAyC,EAAAjC,OAAA,SASQ6B,GATR,QAWH,IAAQC,EAAI,EAAGA,EAAIF,EAAKS,OAAQP,IACtBC,EAAMH,EAAKE,IACbE,EAAI,IACNM,IAAM,iBAAmBR,EAC3BE,EAAEjC,KAAOgC,EAAIQ,KAAJ,OACTP,EAAEQ,OAAS,IAAMC,IAAEC,KAAKf,EAAKgB,QAAQZ,EAAIQ,KAAJ,MAAkBK,WAAY,SAAU,GAC7EZ,EAAEa,KAA0C,IAAnCd,EAAIQ,KAAJ,UAAsBK,WAC/BZ,EAAEc,UAAYC,cAAUC,KAAKC,cAC7BpB,EAAOqB,KAAKlB,GAnBb,OAAAC,EAAAjC,OAAA,SAqBI6B,GArBJ,yBAAAI,EAAA/B,SAAAuB,6BAwBA,SAAe0B,IAAtB,OAAAC,EAAAzE,MAAAC,KAAAC,sDAAO,SAAAwE,IAAA,IAAAtE,EAAAuE,EAAApE,EAAA4B,EAAAC,EAAAa,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA7C,EAAAC,EAAAC,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAA/D,KAAA,EACoBf,IADpB,cACGM,EADHwE,EAAA3D,KAAA2D,EAAA/D,KAAA,EAEwBG,cAFxB,cAAA2D,EAAAC,EAAA3D,KAEKV,EAFLoE,EAEKpE,SACF4B,EAAQ/B,EAASkC,IAAI,CAAClB,KAAMb,EAAS,IAAK,CAACgC,UAAW,EAAGC,QAAS,WAClEJ,EAAWK,oBAAUN,EAAMO,IAAIC,KAAKR,IAJvCyC,EAAA/D,KAAA,GAKgBuB,IALhB,WAKGa,EALH2B,EAAA3D,KAMCiC,EAAS,GACM,IAAhBD,EAAKS,OAPL,CAAAkB,EAAA/D,KAAA,gBAAA+D,EAAAvD,OAAA,SAQQ6B,GARR,QAUH,IAAQC,EAAI,EAAGA,EAAIF,EAAKS,OAAQP,IACtBC,EAAMH,EAAKE,IACbE,EAAI,IACNM,IAAM,WAAaR,EACrBE,EAAEjC,KAAOgC,EAAIQ,KAAJ,KACTP,EAAEQ,OAAS,IAAMC,IAAEC,KAAKf,KAAKgB,QAAQZ,EAAIQ,KAAJ,MAAkBK,WAAY,SAAU,GAC7EZ,EAAEa,KAAwC,IAAjCd,EAAIQ,KAAJ,QAAoBK,WAC7BZ,EAAEc,UAAYC,cAAUC,KAAKQ,OAC7B3B,EAAOqB,KAAKlB,GAlBb,OAAAuB,EAAAvD,OAAA,SAoBI6B,GApBJ,yBAAA0B,EAAArD,SAAAmD,+q8rBCrDA,SAASI,IACZ,OAAO,SAASC,EAAKC,GACjB,IAAIC,EAASF,EAAI,KAEjB,OADaC,EAAI,KACDC,GAJxBC,EAAAC,EAAAC,EAAA,sBAAAN,gNCGO,SAAeO,IAAtB,OAAAC,EAAAtF,MAAAC,KAAAC,sDAAO,SAAAC,IAAA,IAAAE,EAAAkF,EAAAC,EAAA,OAAAhF,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACmB0C,cADnB,cAAAlD,EAAAM,EAAAM,KACKsE,EADLlF,EACKkF,IACFC,EAAmB/C,oBAAU8C,EAAIF,aAFpC1E,EAAAU,OAAA,SAGImE,KAHJ,wBAAA7E,EAAAY,SAAApB,6BAMA,SAAesF,IAAtB,OAAAC,EAAA1F,MAAAC,KAAAC,sDAAO,SAAAyB,IAAA,IAAAoB,EAAAwC,EAAAhF,EAAAoF,EAAA,OAAAnF,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACmB0C,cADnB,cAAAR,EAAAlB,EAAAZ,KACKsE,EADLxC,EACKwC,IADL1D,EAAAhB,KAAA,EAEoBwE,IAFpB,cAEG9E,EAFHsB,EAAAZ,KAGG0E,EAAkBlD,oBAAU8C,EAAIE,YAHnC5D,EAAAR,OAAA,SAIIsE,EAAgBpF,EAAS,KAJ7B,wBAAAsB,EAAAN,SAAAI,6BAOA,SAAeX,IAAtB,OAAA4E,EAAA5F,MAAAC,KAAAC,sDAAO,SAAA+B,IAAA,IAAA0C,EAAArE,EAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EAC+B0C,cAD/B,cAAAoB,EAAAtC,EAAApB,KACKX,EADLqE,EACKrE,gBADL+B,EAAAxB,KAAA,EAEoBwE,IAFpB,cAEG9E,EAFH8B,EAAApB,KAAAoB,EAAAhB,OAAA,SAGI,CAACf,kBAAiBC,aAHtB,wBAAA8B,EAAAd,SAAAU,6BAYA,SAAe4D,EAAtB9D,GAAA,OAAA+D,EAAA9F,MAAAC,KAAAC,sDAAO,SAAAwE,EAA+BqB,GAA/B,IAAAC,EAAAT,EAAAU,EAAA,OAAAzF,EAAAC,EAAAC,KAAA,SAAAkE,GAAA,cAAAA,EAAAhE,KAAAgE,EAAA/D,MAAA,cAAA+D,EAAA/D,KAAA,EACmB0C,cADnB,cAAAyC,EAAApB,EAAA3D,KACKsE,EADLS,EACKT,IACFU,EAAuBxD,oBAAU8C,EAAIM,iBAFxCjB,EAAAvD,OAAA,SAGI4E,EAAqBF,IAHzB,wBAAAnB,EAAArD,SAAAmD,gKCzBHwB,EAAe,KAIN3C,EAAO,eAAAlD,EAAA8F,OAAAC,EAAA,EAAAD,CAAA3F,EAAAC,EAAA4F,KAAG,SAAAlG,IAAA,IAAAmG,EAAAC,EAAA,OAAA/F,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,WACjBqF,EADiB,CAAAvF,EAAAE,KAAA,eAAAF,EAAAU,OAAA,SAEZ6E,GAFY,YAIfI,EAA6B,kBAAXE,OAAuBA,OAASC,GAG5CC,SAPS,CAAA/F,EAAAE,KAAA,gBAQnB0F,EAAeD,EAAQI,SARJ/F,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAYXyF,EAAQI,SAASC,SAZN,OAAAhG,EAAAE,KAAA,uBAAAF,EAAAC,KAAA,GAAAD,EAAAiG,GAAAjG,EAAA,SAeX,IAAIkG,MAAM,+BAfC,QAAAlG,EAAAE,KAAA,oBAmBY,qBAAjByF,EAAQtD,KAnBH,CAAArC,EAAAE,KAAA,SAoBnB0F,EAAeD,EAAQtD,KAAK1C,gBAC5BwG,QAAQ1D,IAAI,2BArBOzC,EAAAE,KAAA,uBAyBnB0F,EAAe,IAAIQ,IAAKC,UAAUC,aAAa,yBAEzC,IAAIJ,MAAMzC,cAAU8C,KAAKC,kBA3BZ,eAmCrBnE,KAAO,IAAI+D,IAAKR,GAEhBL,EAAelD,KArCMrC,EAAAU,OAAA,SAuCd2B,MAvCc,yBAAArC,EAAAY,SAAApB,EAAA,kBAAH,yBAAAE,EAAAL,MAAAC,KAAAC,YAAA,wLCAPkH,EAAb,oBAAAA,IAAAjB,OAAAkB,EAAA,EAAAlB,CAAAlG,KAAAmH,GAAA,OAAAjB,OAAAmB,EAAA,EAAAnB,CAAAiB,EAAA,EAAAzD,IAAA,gBAAA4D,MAAA,eAAAC,EAAArB,OAAAC,EAAA,EAAAD,CAAA3F,EAAAC,EAAA4F,KAAA,SAAAlG,IAAA,IAAAC,EAAA,OAAAI,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAG+Bf,cAH/B,cAGcM,EAHdO,EAAAM,KAAAN,EAAAU,OAAA,SAIejB,EAASqH,SAJxB,wBAAA9G,EAAAY,SAAApB,MAAA,yBAAAqH,EAAAxH,MAAAC,KAAAC,YAAA,KAAAyD,IAAA,iBAAA4D,MAAA,eAAAG,EAAAvB,OAAAC,EAAA,EAAAD,CAAA3F,EAAAC,EAAA4F,KAAA,SAAA1E,IAAA,IAAAsB,EAAA1C,EAAA2C,EAAAF,EAAAG,EAAAhB,EAAA,OAAA3B,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAQcoC,EAAO,GARrBpB,EAAAhB,KAAA,EAS+BwE,cAT/B,cASc9E,EATdsB,EAAAZ,KAAAY,EAAAhB,KAAA,EAU6BiB,YAASvB,EAAS,IAV/C,cAUc2C,EAVdrB,EAAAZ,KAAAY,EAAAhB,KAAA,EAW2B0C,cAX3B,OAYQ,IADMP,EAXdnB,EAAAZ,KAYiBkC,EAAI,EAAGA,EAAID,EAAOQ,OAAQP,IACzBhB,EAAQe,EAAOC,GACrBF,EAAKsB,KAAK,CACNoD,GAAIxF,EAAMyB,KAAKhC,QAAQqC,WACvBrC,QAASO,EAAMyB,KAAKhC,QAAQqC,WAC5B2D,MAAO5E,EAAKgB,QAAQ7B,EAAMyB,KAAK2D,MAAMtD,WAAY,SACjDC,KAAsC,IAAhC/B,EAAMyB,KAAKiE,QAAQ5D,WACzB6D,cAAevH,EAAS,KAnBxC,OAAAsB,EAAAR,OAAA,SAsBe4B,EAAK8E,KAAKjD,gBAtBzB,yBAAAjD,EAAAN,SAAAI,MAAA,yBAAA+F,EAAA1H,MAAAC,KAAAC,YAAA,KAAAyD,IAAA,WAAA4D,MAAA,eAAAS,EAAA7B,OAAAC,EAAA,EAAAD,CAAA3F,EAAAC,EAAA4F,KAAA,SAAApE,EAyB0BgG,GAzB1B,IAAAC,EAAAC,EAAAC,EAAAjF,EAAAkF,EAAA,OAAA7H,EAAAC,EAAAC,KAAA,SAAA2B,GAAA,cAAAA,EAAAzB,KAAAyB,EAAAxB,MAAA,cAAAwB,EAAAxB,KAAA,EA0B2BW,YAASyG,EAAYrG,SA1BhD,OA8BQ,IAJMsG,EA1Bd7F,EAAApB,KA4BckH,EAAS,GACTC,EAAW,GACRjF,EAAI,EAAGA,EAAI+E,EAAK,GAAGxE,OAAQP,IAChCgF,EAAOhF,GAAK+E,EAAK,GAAG/E,GAAGc,WACvBmE,EAASjF,GAAK+E,EAAK,GAAG/E,GAAGc,WAhCrC,OAmCcoE,EAAyB,CAC3BV,GAAIM,EAAYN,GAChBG,cAAeG,EAAYH,cAC3BQ,YAAaJ,EAAK,GAClBK,aAAcL,EAAK,GACnBM,aAAcN,EAAK,GACnBC,SACAC,WACAK,KAAqB,+CAAfP,EAAK,GAAG,IA3C1B7F,EAAAhB,OAAA,SA8CegH,GA9Cf,wBAAAhG,EAAAd,SAAAU,MAAA,gBAAAR,GAAA,OAAAuG,EAAAhI,MAAAC,KAAAC,YAAA,MAAAkH,EAAA,GAkDehC,EAAA,YAAIgC","file":"static/js/20.9db153ce.chunk.js","sourcesContent":["import TruffleContract from 'truffle-contract';\r\nimport { promisify } from 'util';\r\nimport _ from 'lodash';\r\n\r\nimport OpenBoxContract from '../contracts/OpenBox.json';\r\nimport { getProviderAndAccounts } from '../helpers/web3Helpers';\r\nimport { getWeb3 } from \"../helpers/getWeb3\";\r\nimport {getLang} from \"@web3game/lang\";\r\n\r\nexport async function openBoxContract() {\r\n    const contract = TruffleContract(OpenBoxContract);\r\n    const { currentProvider, accounts } = await getProviderAndAccounts();\r\n    contract.setProvider(currentProvider);\r\n    contract.defaults({from: accounts[0]});\r\n    return contract.deployed();\r\n}\r\n\r\nexport async function loadGame(issueNo) {\r\n    const contract = await openBoxContract();\r\n    return contract.loadGame(issueNo);\r\n}\r\n\r\nexport async function betEvent(_from) {\r\n    const contract = await openBoxContract();\r\n    const event = contract.Bet({from: _from}, {fromBlock: 0, toBlock: 'latest'});\r\n    const getAsync = promisify(event.get.bind(event));\r\n    return getAsync();\r\n}\r\n\r\nexport async function openBoxRewardEvent() {\r\n    const contract = await openBoxContract();\r\n    const { accounts } = await getProviderAndAccounts();\r\n    const web3 = await getWeb3();\r\n    const event = contract.Reward({target: accounts[0]}, {fromBlock: 0, toBlock: 'latest'});\r\n    const getAsync = promisify(event.get.bind(event));\r\n    const logs = await getAsync();\r\n    var events = [];\r\n    if(logs.length === 0) {\r\n        return events;\r\n    }\r\n    for(var i = 0; i < logs.length; i++) {\r\n        const log = logs[i];\r\n        var e = {};\r\n        e.key = 'OpenBoxReward_' + i;\r\n        e.from = log.args['target'];\r\n        e.amount = '+' + _.ceil(web3.fromWei(log.args['award'].toNumber(), 'ether'), 3);\r\n        e.time = log.args['awardTime'].toNumber() * 1000;\r\n        e.eventName = getLang().LOGS.KP_BET_REWARD;\r\n        events.push(e);\r\n    }\r\n    return events;\r\n}\r\n\r\nexport async function openBoxBetEvent() {\r\n    const contract = await openBoxContract();\r\n    const { accounts } = await getProviderAndAccounts();\r\n    const event = contract.Bet({from: accounts[0]}, {fromBlock: 0, toBlock: 'latest'});\r\n    const getAsync = promisify(event.get.bind(event));\r\n    const logs = await getAsync();\r\n    var events = [];\r\n    if(logs.length === 0) {\r\n        return events;\r\n    }\r\n    for(var i = 0; i < logs.length; i++) {\r\n        const log = logs[i];\r\n        var e = {};\r\n        e.key = 'OpenBox_' + i;\r\n        e.from = log.args['from'];\r\n        e.amount = '-' + _.ceil(web3.fromWei(log.args['value'].toNumber(), 'ether'), 3);\r\n        e.time = log.args['betTime'].toNumber() * 1000;\r\n        e.eventName = getLang().LOGS.KP_BET;\r\n        events.push(e);\r\n    }\r\n    return events;\r\n}","export function compareByTime() {\r\n    return function(obj1,obj2){\r\n        var value1 = obj1['time'];\r\n        var value2 = obj2['time'];\r\n        return value2 - value1;     // 降序\r\n    }\r\n}","import { promisify } from 'util';\r\nimport { getWeb3 } from \"./getWeb3\";\r\n\r\nexport async function getAccounts() {\r\n    const { eth } = await getWeb3();\r\n    const getAccountsAsync = promisify(eth.getAccounts);\r\n    return getAccountsAsync();\r\n}\r\n\r\nexport async function getBalance() {\r\n    const { eth } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    const getBalanceAsync = promisify(eth.getBalance);\r\n    return getBalanceAsync(accounts[0]);\r\n}\r\n\r\nexport async function getProviderAndAccounts() {\r\n    const { currentProvider } = await getWeb3();\r\n    const accounts = await getAccounts();\r\n    return {currentProvider, accounts};\r\n}\r\n\r\nexport async function estimateGas(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const estimateGasAsync = promisify(eth.estimateGas);\r\n    return estimateGasAsync(transactionObject);\r\n}\r\n\r\nexport async function sendTransaction(transactionObject) {\r\n    const { eth } = await getWeb3();\r\n    const sendTransactionAsync = promisify(eth.sendTransaction);\r\n    return sendTransactionAsync(transactionObject);\r\n}","import Web3 from 'web3'\r\nimport {getLang} from \"@web3game/lang\";\r\n\r\nlet web3Instance = null;\r\n// const thunderTestNetwork = \"18\";\r\n// const thunderMainNetwork = \"108\";\r\n\r\nexport const getWeb3 = async () => {\r\n  if (web3Instance) {  \r\n    return web3Instance;\r\n  }\r\n  const context = (typeof window === 'object') ? window : global;\r\n  var web3Provider;\r\n\r\n  if (context.ethereum) {\r\n    web3Provider = context.ethereum;\r\n\r\n    try {\r\n      // 请求用户账号授权\r\n      await context.ethereum.enable();\r\n    } catch (error) {\r\n      // 用户拒绝了访问\r\n      throw new Error(\"User denied account access.\");\r\n    }\r\n  }\r\n  // 老版 MetaMask\r\n  else if (typeof context.web3 !== 'undefined') {\r\n    web3Provider = context.web3.currentProvider;\r\n    console.log('Injected web3 detected.');\r\n  } else {\r\n    // Fallback to localhost if no web3 injection. We've configured this to\r\n    // use the development console's port by default.\r\n    web3Provider = new Web3.providers.HttpProvider('http://127.0.0.1:8545');\r\n    // throw new Error('No web3 instance injected, using Local web3.');\r\n    throw new Error(getLang().WEB3.NO_WEB3_PROVIDER);\r\n  }\r\n  // throw new Error(web3Provider.isTrust);\r\n  // // const networkVersion = web3Provider.networkVersion;\r\n  // // if(networkVersion !== thunderTestNetwork && networkVersion !== thunderMainNetwork) {\r\n  // //   throw new Error(getLang().WEB3.WRONG_NETWORK);\r\n  // // }\r\n\r\n  web3 = new Web3(web3Provider);\r\n\r\n  web3Instance = web3;\r\n\r\n  return web3;\r\n};\r\n","import {GameRecord} from \"@web3game/typings/openBox\";\r\nimport { OpenBoxAPI } from \"./OpenBoxAPI\";\r\nimport {openBoxContract, betEvent, loadGame} from \"../contractHelps/openBoxContract\";\r\nimport { getAccounts } from \"../helpers/web3Helpers\";\r\nimport { getWeb3 } from \"../helpers/getWeb3\";\r\nimport { compareByTime } from \"../../common/utils/functions/sort\";\r\n\r\nexport class OpenBoxAPIReal implements OpenBoxAPI {\r\n\r\n    public async getBetAddress(): Promise<string> {\r\n        const contract = await openBoxContract();\r\n        return contract.address;\r\n    }\r\n\r\n    public async getHistoryList(): Promise<object[]> {\r\n        const logs = [];\r\n        const accounts = await getAccounts();\r\n        const events = await betEvent(accounts[0]);\r\n        const web3 = await getWeb3();\r\n        for (let i = 0; i < events.length; i++) {\r\n            const event = events[i];\r\n            logs.push({\r\n                id: event.args.issueNo.toNumber(),\r\n                issueNo: event.args.issueNo.toNumber(),\r\n                money: web3.fromWei(event.args.value.toNumber(), 'ether'),\r\n                time: event.args.betTime.toNumber() * 1000,\r\n                currentUserId: accounts[0],\r\n            });\r\n        }\r\n        return logs.sort(compareByTime());\r\n    }\r\n\r\n    public async loadGame(historyData: any): Promise<GameRecord> {\r\n        const game = await loadGame(historyData.issueNo);\r\n\r\n        const scores = [];\r\n        const sequencs = [];\r\n        for (let i = 0; i < game[1].length; i++) {\r\n            scores[i] = game[1][i].toNumber();\r\n            sequencs[i] = game[2][i].toNumber();\r\n        }\r\n\r\n        const gameRecord: GameRecord = {\r\n            id: historyData.id,\r\n            currentUserId: historyData.currentUserId,\r\n            playerAddrs: game[3],\r\n            playerScores: game[4],\r\n            playerAwards: game[5],\r\n            scores,\r\n            sequencs,\r\n            play: game[3][3] !== '0x0000000000000000000000000000000000000000',\r\n        };\r\n\r\n        return gameRecord;\r\n    }\r\n}\r\n\r\nexport default new OpenBoxAPIReal();\r\n"],"sourceRoot":""}