{"version":3,"sources":["common/components/HistoryListPopup.tsx","common/components/PlayerInfo.tsx","typings/openBox/index.ts","openBox/core/openBoxConstants.ts","common/utils/NavigatorEvents.ts","common/utils/navigatorHelper.ts","common/utils/EventEmitter.ts","openBox/OpenBoxGame.tsx","common/styles/images/beijingtu.png","common/components/AuthForm.tsx","apis/openbox/getOpenBoxAPI.ts","common/components/viewPort/ViewPortSizeProvider.tsx","openBox/statics/sounds/oh_no.mp3","openBox/statics/sounds/add-score.mp3","common/utils/watchAccountChange.ts","openBox/statics/sounds/result.wav","openBox/components/GameResultPopup.tsx","openBox/core/functions/getOpenBoxMoneyList.ts","openBox/stores/HistoryStore.ts","openBox/eventBus/openBoxEvents.ts","openBox/stores/GamePlayerStore.ts","openBox/stores/index.ts","openBox/components/Box.tsx","openBox/components/BoxGrid.tsx","openBox/components/BoxGameDesk.tsx","common/components/viewPort/getElStyle.ts","openBox/core/gameHelper.ts","common/components/viewPort/viewPortSizeHelper.tsx","common/components/popups/Popup.tsx","common/components/Table.tsx","common/components/layouts/HistoryButton.tsx","common/components/layouts/QuitGameButton.tsx","common/components/popups/PopupRenderer.tsx","common/components/popups/PopupManger.tsx","common/components/layouts/GameLayout.tsx","common/components/MoneySelector.tsx","common/components/Scene.tsx","common/components/index.ts"],"names":["module","__webpack_require__","d","__webpack_exports__","HistoryListPopup","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","mobx_react__WEBPACK_IMPORTED_MODULE_1__","moment__WEBPACK_IMPORTED_MODULE_2__","moment__WEBPACK_IMPORTED_MODULE_2___default","_web3game_lang__WEBPACK_IMPORTED_MODULE_3__","_popups_Popup__WEBPACK_IMPORTED_MODULE_4__","_Table__WEBPACK_IMPORTED_MODULE_5__","_utils_compose__WEBPACK_IMPORTED_MODULE_6__","compose","inject","_ref2","historyStore","displayList","_ref","onPlayGame","tHeader","a","createElement","className","getLang","OPEN_BOX_PAGE","HISTORY_NO","AMOUNT","HISTORY_DATE","renderListItem","React","useCallback","item","key","id","issueNo","money","moment","time","format","onClick","type","listContent","map","title","HISTORY","tHead","bodyClassName","PlayerInfo","imageIndex","_ref$isActive","isActive","score","pos","_useState","useState","_useState2","Object","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","isInPosition","setIsInPosition","useEffect","userImageSize","useVPStyle","width","height","userScoreSize","fontSize","top","left","paddingTop","normalPosition","positionType","PositionType","topBase","right","leftBase","bottom","getPlayerPosition","scoreInfo","react__WEBPACK_IMPORTED_MODULE_1___default","style","Player","posed","div","enter","active","orgPosition","newPos","_","clone","getActivePosition","inActive","concat","react_pose__WEBPACK_IMPORTED_MODULE_4__","pose","OpenBoxTimeSpan","PrepareBoxTimeSpan","OpeningDuration","BoxStatus","closed","opened","opening","EventKeys","back","push","NavigatorEvents","EventEmitter","historyStack","HashSplitter","pushHash","hash","currentHash","document","location","pushPage","_x","_x2","_pushPage","apply","this","arguments","_callee","navigator","router","options","routerName","_args","regenerator_default","wrap","_context","prev","next","length","undefined","stop","popPage","window","history","addEventListener","event","newURL","oldURL","componentName","replace","emit","emitBack","last","pop","popPageInner","replaceState","Collection","collection","_this$collection","forEach","fn","_EventEmitterBase","eventKeys","_this","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_5__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_2__","call","removeEventListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","setMaxListeners","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_inherits__WEBPACK_IMPORTED_MODULE_4__","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_6__","value","eventName","_this2","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_get__WEBPACK_IMPORTED_MODULE_3__","prototype","removeFn","removeListener","filter","o","dispose","on","name","_collection$getCollec","createCollection","getCollection","removeAll","EventEmitterBase","OpenBoxStores","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_2__","stores","commonStores","gamePlayerStore","gameUIStore","accountStore","onShowHistory","setVisiblePopup","PopupNames","betEvent","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","D_workspace_web3game_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","mark","openBoxAPI","gameRecord","getOpenBoxAPI","sent","loadGame","none","setScene","GameUIScene","gamePlayer","startGame","onGameEnd","gameResult","onQuitPlayer","quit","moneySelector","onQuitGameResult","onSubmitAuth","params","_callee2","_ref3","submitGame","_context2","getCommonAPI","betType","nums","amounts","betAddress","updateDataVersion","t0","alert","onSelectMoney","authForm","prepareRecords","records","currentUserId","record","random","OpenBoxGame","_ref4","dataVersion","_callee3","_ref6","getHistoryList","getBetAddress","list","_context3","setDisplayList","account","setBetAddress","popups","renderer","react__WEBPACK_IMPORTED_MODULE_3___default","_web3game_common_components__WEBPACK_IMPORTED_MODULE_7__","_web3game_common_components_AuthForm__WEBPACK_IMPORTED_MODULE_11__","onSubmit","_components_GameResultPopup__WEBPACK_IMPORTED_MODULE_18__","onQuit","onQuitGame","react_onsenui__WEBPACK_IMPORTED_MODULE_4__","_web3game_common_components_viewPort_ViewPortSizeProvider__WEBPACK_IMPORTED_MODULE_15__","perfectHeight","perfectWidth","preferMaxWidth","mobx_react__WEBPACK_IMPORTED_MODULE_6__","assign","moneyList","getOpenBoxMoneyList","onSelect","_components_BoxGameDesk__WEBPACK_IMPORTED_MODULE_19__","memo","watchAccountChange","exports","p","AuthForm","_web3game_lang__WEBPACK_IMPORTED_MODULE_2__","_popups_Popup__WEBPACK_IMPORTED_MODULE_3__","popupData","ttBalance","tokenBalance","gas","_ref$money","handleSubmit","CONFIRM_SUBMIT","ACCOUNT","TT_BALANCE","TOKEN_BALANCE","marginTop","SUBMIT","_getOpenBoxAPI","isUsingMockAPI","abrupt","e","then","bind","m","default","Promise","all","ViewPortSizeProvider","_ref$preferMode","preferMode","PreferMode","_ref$preferMaxWidth","preferMaxHeight","children","getWinSize","D_workspace_web3game_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_useState2$","winHeight","winWidth","setWinSize","Provider","ViewPortSizeContext","staticSizeInfo","adjustedSizeInfo","getAdjustedSizeInfo","sizeInfo","extend","react__WEBPACK_IMPORTED_MODULE_2___default","mobx_react__WEBPACK_IMPORTED_MODULE_0__","_compose__WEBPACK_IMPORTED_MODULE_1__","injectMainAccountData","Component","locale","observer","GameResultPopup","_web3game_common_components_popups_Popup__WEBPACK_IMPORTED_MODULE_2__","_web3game_common_components_Table__WEBPACK_IMPORTED_MODULE_3__","_web3game_common_components__WEBPACK_IMPORTED_MODULE_4__","_core_gameHelper__WEBPACK_IMPORTED_MODULE_5__","toNumber","num","web3","heroList","getSortedHeroList","sort","b","comparedTo","hero","index","slice","fromWei","gain","_web3game_lang__WEBPACK_IMPORTED_MODULE_0__","text","OPEN_BOX_MONEY_TEXT_1","OPEN_BOX_MONEY_TEXT_2","OPEN_BOX_MONEY_TEXT_3","OPEN_BOX_MONEY_TEXT_4","OPEN_BOX_MONEY_TEXT_5","_class","HistoryStore","classCallCheck","initializerDefineProperty","_descriptor","createClass","applyDecoratedDescriptor","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","ON_GAME_NOT_READY","openBoxEvents","_EventEmitter","GlobalEvent","_getPrototypeOf2","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","onGameReadyStatusChange","triggerGameReadyStatus","isReady","inherits","GamePlayerStore_class","GamePlayerStore","start","end","pause","resume","beginOpenBox","finishOpenBox","GamePlayerStore_descriptor","assertThisInitialized","_descriptor2","_descriptor3","_descriptor4","_descriptor5","_descriptor6","playerTimeout","_descriptor7","_descriptor8","_descriptor9","_descriptor10","_descriptor11","resetPlayer","play","isPaused","resolve","playBoxByIndex","isEnd","playSound","Sounds","result","clearTimeout","openIndex","_this3","openingBox","sortedBoxes","getSortedBoxes","waitTimeout","box","finishedOpenIndex","heroPos","playerScores","boomedHeroId","heroId","boom","addScore","oldScore","actionFn","_this4","timeout","setTimeout","fasterTimes","clearPlayerTimeout","_this5","_this6","AnimatedClassNames","defineProperty","Box","_dec","_temp","_class2","_React$Component","isBoxOpened","_this$props","props","_this$props2","boxIndex","isOpened","isOpening","status","_this$props3","boxCover","isBoomer","getStatus","boomClassName","scoreClassName","boxCoverClassName","boxClassName","boxWrapperClassName","boxSize","react_default","getAnimatedClassByStatus","defaultProps","ColumnNum","range4","range","BoxGrid","GAME_IS_NOT_READY","tableSize","Table","rowIndex","colIndex","columnIndex","boxInfo","Box_Box","renderColumn","BoxGameDesk","_ref$openIndex","Fragment","components","lodash__WEBPACK_IMPORTED_MODULE_1__","lodash__WEBPACK_IMPORTED_MODULE_1___default","_viewPortSizeHelper__WEBPACK_IMPORTED_MODULE_2__","styles","finalRatio","useContext","reduce","val","isNumber","lodash__WEBPACK_IMPORTED_MODULE_0__","lodash__WEBPACK_IMPORTED_MODULE_0___default","howler__WEBPACK_IMPORTED_MODULE_1__","_web3game_typings_openBox__WEBPACK_IMPORTED_MODULE_2__","require","soundSrc","Howl","src","playerAddrs","_gameRecord$playerAwa","playerAwards","currentUserIdIndex","indexOf","imageIndexsMap","userIds","getRandomValue","im","userId","imageIndexMap","userImageIndexCache","prevImageIndexList","values","getRandomValueNotIn","getRandomUsersImageIndex","resortedUserIds","posDiff","i","startMoveIndex","cloneDeep","genOtherRecord","sortedIndex","isCurrentUser","getCurrentRecord","scores","sequencs","sortedHeroList","heroInfo","find","heroIndex","initialSizeInfo","widthHeightRatio","adjustedWidth","adjustedHeight","createContext","innerHeight","innerWidth","_ref$perfectHeight","_ref$perfectWidth","_preferMaxHeight","_preferMaxWidth","_ref$winWidth","resizeRatioByWidth","Modal","y","opacity","delay","transition","stiffness","damping","duration","exit","Backdrop","Popup","debounce","_ref$className","isVisible","setIsVisible","react_pose__WEBPACK_IMPORTED_MODULE_3__","onTouchEnd","onKeyDown","role","tabIndex","aria-label","_ref$bodyClassName","HistoryButton","buttonSize","QuitGameButtonPure","isPlayerActive","BACK","QuitGameButton","scene","PopupRenderer","visiblePopup","PopupManagerContext","PopupManager","_ref$popups","_usePopupManager","popupsList","slicedToArray","setPopups","showPopup","popup","toConsumableArray","closePopup","usePopupManager","popupList","react","GameLayout","_useContext","applicationSize","gameContentStyle","BackgroundUrl","alt","MoneySelector","Scene"],"mappings":"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","file":"static/js/openBox.9e2bd2bb.chunk.js","sourcesContent":["import React from 'react';\r\nimport {hot} from \"react-hot-loader\";\r\nimport {inject} from \"mobx-react\";\r\nimport moment from \"moment\";\r\nimport {BetEvent} from '@web3game/typings/openBox';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {Popup} from \"./popups/Popup\";\r\nimport {HistoryStore} from \"../../openBox/stores/HistoryStore\";\r\nimport {Table} from \"./Table\";\r\nimport {compose} from \"../utils/compose\";\r\n\r\n\r\ntype HistoryListProps = {\r\n    onPlayGame: (betEvent: BetEvent) => void;\r\n    displayList?: [];\r\n};\r\n\r\nexport function HistoryListPure(\r\n    {\r\n        onPlayGame,\r\n        displayList,\r\n    }: HistoryListProps,\r\n) {\r\n    const tHeader = (\r\n        <tr>\r\n            <th className=\"historyNo\">{getLang().OPEN_BOX_PAGE.HISTORY_NO}</th>\r\n            <th>{getLang().AMOUNT}</th>\r\n            <th className=\"historyDate\">{getLang().OPEN_BOX_PAGE.HISTORY_DATE}</th>\r\n            <th className=\"historyAction\">{\" \"}</th>\r\n        </tr>\r\n    );\r\n\r\n    const renderListItem = React.useCallback(\r\n        (item: any) => (\r\n            <tr key={item.id}>\r\n                <td className=\"historyNo\">{item.issueNo}</td>\r\n                <td>{item.money}</td>\r\n                <td className=\"historyDate\">{moment(item.time).format('MM/DD HH:mm')}</td>\r\n                <td className=\"historyAction\">\r\n                    <button\r\n                        className=\"historyActionButton\"\r\n                        onClick={() => onPlayGame(item)}\r\n                        type=\"button\"\r\n                    />\r\n                </td>\r\n            </tr>\r\n        ),\r\n        [],\r\n    );\r\n\r\n    const listContent = displayList ? displayList.map(renderListItem) : null;\r\n\r\n    return (\r\n        <Popup title={getLang().OPEN_BOX_PAGE.HISTORY}>\r\n            <Table\r\n                tHead={tHeader}\r\n                className=\"historyList\"\r\n                bodyClassName=\"purchaseListTbody\"\r\n            >\r\n                {listContent}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    historyStore?: HistoryStore;\r\n};\r\n\r\nexport const HistoryListPopup = compose<HistoryListProps>(\r\n    hot(module),\r\n    inject(\r\n        ({ historyStore }: BoxGridInjectedStores) => ({\r\n            displayList: historyStore ? historyStore.displayList : [],\r\n        }),\r\n    )\r\n)(HistoryListPure);\r\n","import React, {CSSProperties, useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport {hot} from \"react-hot-loader\";\r\nimport {PositionType} from \"@web3game/typings/openBox\";\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {useVPStyle} from \"./viewPort/getElStyle\";\r\nimport {compose} from \"../utils/compose\";\r\n\r\nexport type PlayerInfoProps = {\r\n    imageIndex: number;\r\n    isActive?: boolean;\r\n    id?: any;\r\n    score?: number;\r\n    pos?: PositionType;\r\n};\r\n\r\nexport function PlayerInfoPure(\r\n    {\r\n        imageIndex,\r\n        isActive = false,\r\n        score,\r\n        pos,\r\n    }: PlayerInfoProps,\r\n) {\r\n    const [isInPosition, setIsInPosition] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setIsInPosition(true);\r\n    }, []);\r\n\r\n    const userImageSize = useVPStyle({\r\n        width: 100,\r\n        height: 100,\r\n    });\r\n    const userScoreSize = useVPStyle({\r\n        width: 55,\r\n        height: 63,\r\n        fontSize: 24,\r\n        top: -70,\r\n        left: 24,\r\n        paddingTop: 16,\r\n    });\r\n\r\n    const getPlayerPosition = (positionType: PositionType | undefined): CSSProperties => {\r\n\r\n        const topBase = 200;\r\n        const leftBase = 340;\r\n        const verticalDiff = 460;\r\n        const horizontalDiff = 280;\r\n\r\n        switch (positionType) {\r\n\r\n            case PositionType.top:\r\n                return useVPStyle({\r\n                    top: topBase + 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.right:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase + horizontalDiff,\r\n                });\r\n\r\n            case PositionType.bottom:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff * 2 - 100,\r\n                    left: leftBase,\r\n                });\r\n\r\n            case PositionType.left:\r\n                return useVPStyle({\r\n                    top: topBase + verticalDiff,\r\n                    left: leftBase - horizontalDiff,\r\n                });\r\n\r\n        }\r\n\r\n        return {};\r\n    };\r\n\r\n    const normalPosition = getPlayerPosition(pos);\r\n\r\n    const getActivePosition = (\r\n        positionType: PositionType | undefined,\r\n        orgPosition: CSSProperties,\r\n    ) => {\r\n        const newPos: any = _.clone(orgPosition);\r\n        const activeDiff = 50;\r\n\r\n        switch (pos) {\r\n            case PositionType.top:\r\n                newPos.top += activeDiff;\r\n                break;\r\n            case PositionType.right:\r\n                newPos.left -= activeDiff;\r\n                break;\r\n\r\n            case PositionType.bottom:\r\n                newPos.top -= activeDiff;\r\n                break;\r\n            case PositionType.left:\r\n                newPos.left += activeDiff;\r\n                break;\r\n\r\n        }\r\n\r\n        return newPos;\r\n    };\r\n\r\n    const scoreInfo = score !== null ? (\r\n        <span className=\"userScore\" style={userScoreSize}>\r\n            {score}\r\n        </span>\r\n    ) : null;\r\n\r\n    const Player = posed.div({\r\n        enter: normalPosition,\r\n        active: getActivePosition(pos, normalPosition),\r\n        inActive: normalPosition\r\n    });\r\n\r\n    const className = `playerInfo userImage userImage${imageIndex} ${pos} ${isActive ? 'active' : ''}`;\r\n\r\n    return (\r\n        <PoseGroup>\r\n            {isInPosition && (\r\n                <Player\r\n                    key=\"player\"\r\n                    pose={isActive ? 'active' : 'inActive'}\r\n                    className={className}\r\n                    style={userImageSize}\r\n                >\r\n                    {scoreInfo}\r\n                </Player>\r\n            )}\r\n        </PoseGroup>\r\n    );\r\n}\r\n\r\nexport const PlayerInfo = compose<PlayerInfoProps>(\r\n    hot(module),\r\n)(PlayerInfoPure);\r\n","import BigNumber from \"bignumber.js\";\r\n\r\nexport type GameRecord = {\r\n    id?: any;\r\n    currentUserId: any;\r\n    play: boolean;\r\n    scores: number[];\r\n    sequencs: number[];\r\n    playerScores: BigNumber[];\r\n    playerAwards: BigNumber[];\r\n    playerAddrs: string[];\r\n};\r\n\r\nexport type BetEvent = {\r\n    id?: number;\r\n    issueNo: number;\r\n    money: number;\r\n    time: number;\r\n    currentUserId: string;\r\n}\r\n\r\n// export type PositionType = 'top' | 'bottom' | 'left' | 'right';\r\n\r\nexport enum PositionType {\r\n    top = 'top',\r\n    bottom = 'bottom',\r\n    left = 'left',\r\n    right = 'right'\r\n}\r\n\r\nexport type PlayerScoreByPosition = {\r\n    top: number;\r\n    bottom: number;\r\n    left: number;\r\n    right: number;\r\n};\r\n\r\nexport type BoxInfo = {\r\n    boxIndex: number;\r\n    score: number;\r\n    openIndex: number;\r\n    heroId: any;\r\n    heroIndex: number;\r\n\r\n    /** @type {HeroInfo} */\r\n    heroInfo: any;\r\n    heroPos: any;\r\n};\r\n\r\nexport type HeroInfo = {\r\n    id: any;\r\n    index: number;\r\n    pos: any;\r\n    isCurrentUser: boolean;\r\n    score: BigNumber;\r\n    imageIndex: number;\r\n    gain: BigNumber;\r\n};\r\n","export const OpenBoxTimeSpan = 1000; // ms\r\nexport const PrepareBoxTimeSpan = 1500; //\r\nexport const OpeningDuration = 650; // ms\r\n\r\nexport const BoxStatus = {\r\n    closed: 'closed',\r\n    opened: 'opened',\r\n    opening: 'opening',\r\n};\r\n\r\nexport const HeroPositions = {\r\n    top: 'top',\r\n    right: 'right',\r\n    bottom: 'bottom',\r\n    left: 'left',\r\n};\r\n","import EventEmitter from \"./EventEmitter\";\r\n\r\nconst EventKeys = {\r\n    back: 'back',\r\n    push: 'push',\r\n};\r\n\r\nconst NavigatorEvents = new EventEmitter();\r\n\r\nexport function emitBack(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.back, componentName);\r\n}\r\n\r\nexport function onBack(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.back, fn);\r\n}\r\n\r\nexport function emitPush(componentName: string) {\r\n    NavigatorEvents.emit(EventKeys.push, componentName);\r\n}\r\n\r\nexport function onPush(fn: (componentName: string) => void) {\r\n    return NavigatorEvents.on(EventKeys.push, fn);\r\n}\r\n\r\n","import _ from 'lodash';\r\nimport {Navigator, PageTransitionOptions} from \"react-onsenui\";\r\nimport {emitBack} from \"./NavigatorEvents\";\r\n\r\n\r\nconst historyStack: object[] = [];\r\n\r\nexport const hasHistory = () => historyStack.length > 0;\r\n\r\nconst HashSplitter = '|';\r\n\r\nfunction pushHash(hash: string) {\r\n    const currentHash = document.location.hash;\r\n    document.location.hash = `${currentHash}${currentHash ? HashSplitter : ''}${hash}`;\r\n}\r\n\r\nexport async function pushPage(\r\n    navigator: Navigator,\r\n    router: any,\r\n    options: PageTransitionOptions = {\r\n    },\r\n) {\r\n    const routerName = router.key;\r\n    pushHash(routerName);\r\n    historyStack.push({ navigator, router, options, routerName });\r\n    await navigator.pushPage(router, options);\r\n}\r\n\r\nexport function popPage() {\r\n    window.history.back();\r\n}\r\n\r\nfunction popPageInner(componentName: string) {\r\n    const { navigator, routerName } = _.last(historyStack) as any;\r\n\r\n    historyStack.pop();\r\n\r\n    if (routerName === componentName) {\r\n        navigator.popPage();\r\n    }\r\n}\r\n\r\n// handle history back\r\nwindow.addEventListener('hashchange', (event) => {\r\n    const { newURL, oldURL } = event;\r\n    if (newURL.length < oldURL.length) {\r\n        const componentName = oldURL.replace(newURL, '').replace('#', '');\r\n        emitBack(componentName);\r\n        popPageInner(componentName);\r\n    }\r\n});\r\n\r\nif (window.location.hash) {\r\n    window.history.replaceState(null, '', '#');\r\n}\r\n\r\n\r\n","/**\r\n * Created by trump on 16/6/18.\r\n */\r\nimport {EventEmitter as EventEmitterBase} from \"events\";\r\n\r\n\r\nclass Collection {\r\n    private collection: (() => void)[] = [];\r\n\r\n    /** @returns {Collection} */\r\n    public push(...fn: (() => void)[]) {\r\n        this.collection.push(...fn);\r\n        return this;\r\n    }\r\n\r\n    public removeAll() {\r\n        this.collection.forEach(fn => fn());\r\n        this.collection = [];\r\n    }\r\n\r\n    public getCollection() {\r\n        return this.collection;\r\n    }\r\n}\r\n\r\nexport class EventEmitter extends EventEmitterBase {\r\n\r\n    protected EventKeys = {};\r\n\r\n    private removeEventListeners: (() => void)[] = [];\r\n\r\n    public constructor(eventKeys?: object) {\r\n        super();\r\n\r\n        /** @field */\r\n        this.EventKeys = { ...eventKeys };\r\n\r\n        this.setMaxListeners(9999);\r\n    }\r\n\r\n    // @ts-ignore\r\n    public on(eventName: string, fn: (() => void) | any) {\r\n        super.on(eventName, fn);\r\n\r\n        const removeFn = () => {\r\n            this.removeListener(eventName, fn);\r\n            this.removeEventListeners = this.removeEventListeners.filter(o => o !== removeFn);\r\n        };\r\n\r\n        removeFn.eventName = eventName;\r\n\r\n        if (!this.removeEventListeners) {\r\n            this.removeEventListeners = [];\r\n        }\r\n\r\n        this.removeEventListeners.push(removeFn);\r\n\r\n        return removeFn;\r\n    }\r\n\r\n    public one(eventName: string, fn: (...args: any[]) => void) {\r\n        const dispose = this.on(eventName, (...args: any[]) => {\r\n            fn(...args);\r\n            dispose();\r\n        });\r\n\r\n        return dispose;\r\n    }\r\n\r\n    public removeByName(name: string) {\r\n        this.removeEventListeners.forEach((fn) => {\r\n            if ((fn as any).eventName === name) fn();\r\n        });\r\n\r\n        this.removeEventListeners = this.removeEventListeners.filter(\r\n            o => (o as any).eventName !== name,\r\n        );\r\n    }\r\n\r\n    public removeAll() {\r\n        this.removeEventListeners.forEach(fn => fn());\r\n        this.removeEventListeners = [];\r\n    }\r\n\r\n    /** @returns Collection */\r\n    public createCollection() {\r\n        return new Collection();\r\n    }\r\n\r\n    public listenToMany(...listeners: (() => void)[]) {\r\n        const collection = this.createCollection();\r\n        collection.getCollection().push(...listeners);\r\n        return () => collection.removeAll();\r\n    }\r\n}\r\n\r\nexport default EventEmitter;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport {Page} from \"react-onsenui\";\r\nimport _ from 'lodash';\r\nimport {Provider} from \"mobx-react\";\r\nimport {hot} from \"react-hot-loader\";\r\nimport {\r\n    GameLayout,\r\n    HistoryListPopup,\r\n    MoneySelector,\r\n    PopupElement,\r\n    Scene,\r\n} from \"@web3game/common/components\";\r\nimport * as commonStores from '@web3game/common/stores';\r\nimport {GameUIScene, PopupNames} from \"@web3game/common/utils/constants\";\r\nimport {popPage} from \"@web3game/common/utils/navigatorHelper\";\r\nimport {BetEvent} from \"@web3game/typings/openBox\";\r\nimport {AuthForm} from \"@web3game/common/components/AuthForm\";\r\nimport {getCommonAPI} from \"@web3game/apis/common/getCommonAPI\";\r\nimport {getOpenBoxAPI} from \"@web3game/apis/openbox/getOpenBoxAPI\";\r\nimport '@web3game/common/styles/common.scss';\r\nimport {ViewPortSizeProvider} from \"@web3game/common/components/viewPort/ViewPortSizeProvider\";\r\nimport * as stores from './stores';\r\nimport './styles/openBox.scss';\r\nimport {GameResultPopup} from \"./components/GameResultPopup\";\r\nimport {BoxGameDesk} from \"./components/BoxGameDesk\";\r\nimport {getOpenBoxMoneyList} from \"./core/functions/getOpenBoxMoneyList\";\r\nimport {compose} from \"@web3game/common/utils/compose\";\r\nimport {watchAccountChange} from \"@web3game/common/utils/watchAccountChange\";\r\n\r\n// @ts-ignore\r\nwindow.OpenBoxStores = {\r\n    ...stores,\r\n    ...commonStores,\r\n};\r\n\r\n// region store helpers\r\nconst { gamePlayerStore } = stores;\r\nconst { gameUIStore, accountStore } = commonStores;\r\n\r\nconst onShowHistory = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.history);\r\n};\r\n\r\nconst onPlayGame = (betEvent: BetEvent) => {\r\n    (async () => {\r\n        const openBoxAPI = await getOpenBoxAPI();\r\n\r\n        const gameRecord = await openBoxAPI.loadGame(betEvent);\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n        gameUIStore.setScene(GameUIScene.gamePlayer);\r\n        gamePlayerStore.startGame(gameRecord);\r\n\r\n        // 游戏结束弹出弹窗\r\n        gamePlayerStore.onGameEnd(() => gameUIStore.setVisiblePopup(PopupNames.gameResult));\r\n\r\n    })();\r\n};\r\n\r\nconst onQuitPlayer = () => {\r\n    gamePlayerStore.quit();\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n};\r\n\r\nconst onQuitGameResult = () => {\r\n    gameUIStore.setVisiblePopup(PopupNames.none);\r\n    gameUIStore.setScene(GameUIScene.moneySelector);\r\n    gamePlayerStore.quit();\r\n};\r\n\r\nconst onSubmitAuth = (params: any) => {\r\n    (async () => {\r\n        const { submitGame } = await getCommonAPI();\r\n        try {\r\n            await submitGame({\r\n                ...params,\r\n                betType: 3,\r\n                issueNo: 0,\r\n                nums: [],\r\n                amounts: [],\r\n                betAddress: gamePlayerStore.betAddress,\r\n            });\r\n            accountStore.updateDataVersion();\r\n        } catch (error) {\r\n            alert(error);\r\n        }\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    })();\r\n\r\n};\r\n\r\nconst onSelectMoney = (money: number) => {\r\n    gameUIStore.setVisiblePopup(PopupNames.authForm, { money });\r\n};\r\n\r\nconst prepareRecords = (records: any[], currentUserId: string): object[] => _.map(\r\n    records,\r\n    record => ({\r\n        ...record,\r\n        currentUserId,\r\n        id: record.id || _.random(0),\r\n    }),\r\n);\r\n\r\n\r\n// endregion\r\n\r\ntype OpenBoxGameProps = {\r\n    dataVersion: string;\r\n};\r\n\r\nexport function OpenBoxGame(\r\n    {\r\n        dataVersion,\r\n    }: OpenBoxGameProps\r\n) {\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const { getHistoryList, getBetAddress } = await getOpenBoxAPI();\r\n            const list = await getHistoryList();\r\n            stores.historyStore.setDisplayList(prepareRecords(list, accountStore.account));\r\n            const betAddress = await getBetAddress();\r\n            gamePlayerStore.setBetAddress(betAddress);\r\n        })();\r\n\r\n        // unbind listeners of gamePlayerStore\r\n        return () => {\r\n            gamePlayerStore.quit();\r\n        };\r\n    }, [dataVersion]);\r\n\r\n    const popups: PopupElement[] = [\r\n        { name: PopupNames.history, renderer: () => <HistoryListPopup onPlayGame={onPlayGame} /> },\r\n        { \r\n            name: PopupNames.authForm,\r\n            renderer: () => (\r\n                <AuthForm \r\n                    onSubmit={onSubmitAuth}\r\n                />\r\n            ), \r\n        },\r\n        {\r\n            name: PopupNames.gameResult,\r\n            renderer: () => (<GameResultPopup onQuit={onQuitGameResult} />),\r\n        },\r\n    ];\r\n\r\n    const onQuitGame = useCallback(() => popPage(), []);\r\n\r\n    return (\r\n        <Page className=\"openBoxGamePage\">\r\n            <ViewPortSizeProvider\r\n                perfectHeight={1344}\r\n                perfectWidth={750}\r\n                preferMaxWidth={600}\r\n            >\r\n                <Provider {...commonStores} {...stores}>\r\n                    <GameLayout\r\n                        onShowHistory={onShowHistory}\r\n                        onQuitGame={onQuitGame}\r\n                        onQuitPlayer={onQuitPlayer}\r\n                        popups={popups}\r\n                    >\r\n\r\n                        <Scene name={GameUIScene.moneySelector}>\r\n                            {() => (\r\n                                <MoneySelector\r\n                                    moneyList={getOpenBoxMoneyList()}\r\n                                    onSelect={onSelectMoney}\r\n                                />\r\n                            )}\r\n                        </Scene>\r\n\r\n                        <Scene name={GameUIScene.gamePlayer}>\r\n                            {() => <BoxGameDesk />}\r\n                        </Scene>\r\n                    </GameLayout>\r\n                </Provider>\r\n            </ViewPortSizeProvider>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default compose<OpenBoxGameProps>(\r\n    hot(module),\r\n    React.memo,\r\n    watchAccountChange\r\n)(OpenBoxGame);\r\n","module.exports = __webpack_public_path__ + \"static/media/beijingtu.03f0d956.png\";","import React, {useCallback} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {Popup} from \"./popups/Popup\";\r\nimport {AccountStore} from \"../stores/AccountStore\";\r\nimport {GameUIStore} from '../stores/GameUIStore';\r\n\r\ntype AuthFormPureProps = {\r\n    onSubmit: (params: any) => void;\r\n    account?: string;\r\n    ttBalance?: any;\r\n    tokenBalance?: any;\r\n    gas?: any;\r\n    money?: number;\r\n};\r\n\r\nexport function AuthFormPure(\r\n    {\r\n        onSubmit,\r\n        account,\r\n        ttBalance,\r\n        tokenBalance,\r\n        money = 0,\r\n    }: AuthFormPureProps,\r\n) {\r\n\r\n    const handleSubmit = useCallback(() => {\r\n        onSubmit({\r\n            account,\r\n            money,\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <Popup title={getLang().CONFIRM_SUBMIT} className=\"gameAuthFormPopup\">\r\n            <div className=\"gameAuthForm\">\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().ACCOUNT}&nbsp;:&nbsp;\r\n                    {account}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TT_BALANCE}&nbsp;:&nbsp;\r\n                    {ttBalance}\r\n                </div>\r\n                <div className=\"gameAuthFormField\">\r\n                    {getLang().TOKEN_BALANCE}&nbsp;:&nbsp;\r\n                    {tokenBalance}\r\n                </div>\r\n                <hr />\r\n                <div className=\"gameAuthFormField\" style={{marginTop: '20px'}}>\r\n                    <button type=\"submit\" onClick={handleSubmit}>\r\n                        {getLang().SUBMIT}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype AuthFormInjectedProps = {\r\n    accountStore?: AccountStore;\r\n    gameUIStore?: GameUIStore;\r\n};\r\n\r\n\r\nexport const AuthForm = inject(\r\n    (\r\n        {\r\n            accountStore,\r\n            gameUIStore,\r\n        }: AuthFormInjectedProps,\r\n    ) => {\r\n        if (!accountStore || !gameUIStore) {\r\n            return {};\r\n        }\r\n\r\n        const { popupData: {money} } = gameUIStore;\r\n\r\n        const { \r\n            account, \r\n            ttBalance, \r\n            tokenBalance, \r\n            gas, \r\n        } = accountStore;\r\n\r\n        return { account, ttBalance, tokenBalance, gas, money };\r\n    },\r\n)(AuthFormPure);\r\n","import {OpenBoxAPI} from './OpenBoxAPI';\r\nimport {isUsingMockAPI} from \"../isUsingMockAPI\";\r\n\r\n\r\nexport async function getOpenBoxAPI(): Promise<OpenBoxAPI> {\r\n\r\n    if (isUsingMockAPI()) {\r\n        return import('./OpenBoxAPIMock').then(m => m.default);\r\n    }\r\n\r\n    return import('./OpenBoxAPIReal').then(m => m.default);\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport _ from 'lodash';\r\nimport {\r\n    getAdjustedSizeInfo,\r\n    getWinSize,\r\n    InitialSizeInfo,\r\n    PreferMode,\r\n    ViewPortSizeContext,\r\n} from \"./viewPortSizeHelper\";\r\n\r\n\r\nexport type ViewPortSizeProps = {\r\n    children: React.ReactNode | React.ReactElement;\r\n\r\n    perfectHeight: number;\r\n    perfectWidth: number;\r\n\r\n    preferMaxWidth?: number;\r\n    preferMaxHeight?: number;\r\n\r\n    preferMode?: PreferMode;\r\n}\r\n\r\nexport const ViewPortSizeProvider = React.memo(\r\n    (\r\n        {\r\n            preferMode = PreferMode.width,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxHeight = 0,\r\n            preferMaxWidth = 900,\r\n\r\n            children,\r\n        }: ViewPortSizeProps\r\n    ) => {\r\n\r\n        const [{ winHeight, winWidth }, setWinSize] = useState(getWinSize());\r\n\r\n        useEffect(() => {\r\n            window.addEventListener(\r\n                'resize',\r\n                () => {\r\n                    setWinSize(getWinSize());\r\n                }\r\n            );\r\n        }, []);\r\n\r\n        const { Provider } = ViewPortSizeContext;\r\n\r\n        const staticSizeInfo = {\r\n            winHeight,\r\n            winWidth,\r\n\r\n            perfectHeight,\r\n            perfectWidth,\r\n\r\n            preferMaxWidth,\r\n        };\r\n\r\n        const adjustedSizeInfo = getAdjustedSizeInfo({\r\n            ...staticSizeInfo,\r\n            preferMode,\r\n        });\r\n\r\n        const sizeInfo = _.extend<InitialSizeInfo>({}, staticSizeInfo, adjustedSizeInfo);\r\n\r\n        return (\r\n            <Provider value={sizeInfo}>\r\n                {children}\r\n            </Provider>\r\n        );\r\n    },\r\n);\r\n","module.exports = __webpack_public_path__ + \"static/media/oh_no.4b9dfc8c.mp3\";","module.exports = __webpack_public_path__ + \"static/media/add-score.e14110a0.mp3\";","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {AccountStore} from \"../stores/AccountStore\";\r\nimport {compose} from \"./compose\";\r\n\r\ntype RC<P> = React.ComponentType<P> | React.FunctionComponent<P> ;\r\n\r\n\r\ntype WatchLocaleInjectedProps = { accountStore: AccountStore };\r\n\r\nexport function injectMainAccountData<P>(Component: RC<P>) {\r\n    return inject(\r\n        (\r\n            {\r\n                accountStore,\r\n            }: WatchLocaleInjectedProps,\r\n        ) => (\r\n            {\r\n                locale: accountStore.locale,\r\n                dataVersion: accountStore.dataVersion,\r\n                updateDataVersion: () => accountStore.updateDataVersion(),\r\n            }\r\n        ),\r\n    )(Component);\r\n}\r\n\r\nexport function watchAccountChange<P>(Component: RC<P>) {\r\n    return compose<P>(\r\n        observer,\r\n        injectMainAccountData,\r\n    )(Component);\r\n}\r\n\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/result.e786a7c7.wav\";","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {Popup} from \"@web3game/common/components/popups/Popup\";\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {PlayerInfo} from \"@web3game/common/components\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\n\r\n\r\ntype GameResultPopupProps = {\r\n    onQuit: () => void;\r\n    gameRecord?: GameRecord;\r\n    web3?: any;\r\n};\r\n\r\nconst toNumber = (num: any) => {\r\n    if (num && num.toNumber) {\r\n        return num.toNumber();\r\n    }\r\n\r\n    return num;\r\n};\r\n\r\nexport function GameResultPopupPure(\r\n    {\r\n        onQuit,\r\n        gameRecord,\r\n        web3,\r\n    }: GameResultPopupProps,\r\n) {\r\n\r\n    if (!web3) {\r\n        return null;\r\n    }\r\n\r\n    const heroList = !gameRecord ? [] : getSortedHeroList(gameRecord)\r\n        .sort((a, b) => {\r\n\r\n            if (a.score && b.score && a.score.comparedTo && b.score.comparedTo) {\r\n                return b.score.comparedTo(a.score);\r\n            }\r\n\r\n            // @ts-ignore\r\n            return a - b;\r\n        });\r\n\r\n    const tHead = (\r\n        <tr>\r\n            <th className=\"rankIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerIcon\">\r\n                {\" \"}\r\n            </th>\r\n            <th className=\"playerName\">\r\n                玩家\r\n            </th>\r\n            <th className=\"payerScore\">\r\n                钻石                \r\n            </th>\r\n            <th className=\"payerAward\">\r\n                奖励\r\n            </th>\r\n        </tr>\r\n    );\r\n    \r\n    return (\r\n        <Popup title=\"排行\" onQuit={onQuit} className=\"gameResultPopup\">\r\n            <Table tHead={tHead} className=\"gameResult\">\r\n                {heroList.map((hero, index) => (\r\n                    <tr key={hero.id}>\r\n                        <td className=\"rankIcon\">\r\n                            <div className={`rankImage rankImage${index + 1}`}>{index}</div>\r\n                        </td>\r\n                        <td className=\"playerIcon\">\r\n                            <PlayerInfo id={hero.id} imageIndex={hero.imageIndex} />\r\n                        </td>\r\n                        <td className=\"playerName\">{hero.id.slice(-6)}</td>\r\n                        <td className=\"payerScore\">{toNumber(hero.score)}</td>\r\n                        <td className=\"payerAward\">{web3.fromWei(toNumber(hero.gain), 'ether')}</td>\r\n                    </tr>\r\n                ))}\r\n            </Table>\r\n        </Popup>\r\n    );\r\n}\r\n\r\ntype GameResultPopupInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    web3?: any;\r\n};\r\n\r\nexport const GameResultPopup = inject(\r\n    ({ gamePlayerStore, web3 }: GameResultPopupInjectedProps) => (\r\n        {\r\n            gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n            web3,\r\n        }\r\n    ),\r\n)(GameResultPopupPure);\r\n","import {getLang} from \"@web3game/lang\";\r\n\r\nexport const getOpenBoxMoneyList = () => [\r\n    { money: 10, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_1 },\r\n    { money: 2000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_2 },\r\n    { money: 5000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_3 },\r\n    { money: 10000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_4 },\r\n    { money: 50000, text: getLang().OPEN_BOX_PAGE.OPEN_BOX_MONEY_TEXT_5 },\r\n];\r\n","import {action, observable} from \"mobx\";\r\n\r\n\r\nexport class HistoryStore {\r\n\r\n    @observable\r\n    public displayList: object[] = [];\r\n\r\n    @action\r\n    public setDisplayList(history: object[]) {\r\n        this.displayList = history;\r\n    }\r\n\r\n}\r\n\r\nexport const historyStore = new HistoryStore();\r\n","import {EventEmitter} from \"../../common/utils/EventEmitter\";\r\n\r\nconst ON_GAME_NOT_READY = 'ON_GAME_NOT_READY';\r\n\r\nexport class GlobalEvent extends EventEmitter {\r\n\r\n    public onGameReadyStatusChange = (fn: () => void) => this.on(ON_GAME_NOT_READY, fn);\r\n\r\n    public triggerGameReadyStatus = (isReady: boolean) => this.emit(ON_GAME_NOT_READY, isReady);\r\n\r\n}\r\n\r\nexport const openBoxEvents = new GlobalEvent({});\r\n\r\nexport default openBoxEvents;\r\n","import {action, observable} from \"mobx\";\r\nimport * as _ from 'lodash';\r\nimport {BoxInfo, GameRecord, PlayerScoreByPosition, PositionType} from \"@web3game/typings/openBox\";\r\n\r\nimport {EventEmitter} from \"../../common/utils/EventEmitter\";\r\nimport {OpenBoxTimeSpan, OpeningDuration, PrepareBoxTimeSpan} from \"../core/openBoxConstants\";\r\n\r\n\r\nimport {getSortedBoxes, playSound, Sounds} from \"../core/gameHelper\";\r\nimport {openBoxEvents} from \"../eventBus/openBoxEvents\";\r\n\r\n/**\r\n * @typedef {Object} GameRecord\r\n * @property {[Number]} scores\r\n * @property {[Number]} sequencs\r\n * @property {[Number]} playerScores\r\n * */\r\n\r\n\r\n\r\nconst getInitialScores = (): PlayerScoreByPosition => ({\r\n    top: 0,\r\n    right: 0,\r\n    bottom: 0,\r\n    left: 0,\r\n});\r\n\r\nexport class GamePlayerStore extends EventEmitter {\r\n\r\n    public EventKeys = {\r\n        start: 'start',\r\n        end: 'end',\r\n        pause: 'pause',\r\n        resume: 'resume',\r\n        beginOpenBox: 'beginOpenBox',\r\n        finishOpenBox: 'finishOpenBox',\r\n    };\r\n\r\n    @observable\r\n    public betAddress = '';\r\n\r\n    @action\r\n    public setBetAddress(betAddress: string) {\r\n        this.betAddress = betAddress;\r\n    }\r\n\r\n    @observable\r\n    public gameRecord: GameRecord | null = null;\r\n\r\n    @observable\r\n    public openIndex = -1;\r\n\r\n    @observable\r\n    public finishedOpenIndex: number = -1;\r\n\r\n    @observable\r\n    public openingBox: BoxInfo | null | undefined = null;\r\n\r\n    @observable\r\n    public isPaused = false;\r\n\r\n    private playerTimeout = 0;\r\n\r\n    @observable\r\n    public playerScores: PlayerScoreByPosition = getInitialScores();\r\n\r\n    @observable\r\n    public boomedHeroId = null;\r\n\r\n    @observable\r\n    public fasterTimes = 1; // 播放时间间隔倍数\r\n\r\n\r\n    /**\r\n     * @param {CurrentGameRecord} gameRecord\r\n     * */\r\n    @action\r\n    public startGame(gameRecord: GameRecord): Promise<any> {\r\n        this.resetPlayer();\r\n        if (!gameRecord) return Promise.resolve();\r\n\r\n        if (gameRecord.play === false) {\r\n            this.isPaused = true;\r\n            openBoxEvents.triggerGameReadyStatus(false);\r\n        } else {\r\n            openBoxEvents.triggerGameReadyStatus(true);\r\n        }\r\n\r\n        this.gameRecord = gameRecord;\r\n\r\n        this.emit(this.EventKeys.start);\r\n\r\n        return Promise.resolve(\r\n            this.playBoxByIndex(0),\r\n        ).then((isEnd) => {\r\n            if (isEnd && !this.isPaused) {\r\n                this.emit(this.EventKeys.end);\r\n                playSound(Sounds.result);\r\n            }\r\n        });\r\n    }\r\n\r\n    @action\r\n    public restartGame() {\r\n        if (this.gameRecord) {\r\n            this.startGame(this.gameRecord);\r\n        }\r\n    }\r\n\r\n    @action\r\n    private clearPlayerTimeout() {\r\n        if (this.playerTimeout) {\r\n            clearTimeout(this.playerTimeout);\r\n            this.playerTimeout = 0;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public playBoxByIndex(openIndex: number): any {\r\n        if (!this.gameRecord) {\r\n            return false;\r\n        }\r\n\r\n        this.openIndex = openIndex;\r\n\r\n        this.openingBox = null;\r\n\r\n        const sortedBoxes = getSortedBoxes(this.gameRecord);\r\n\r\n        const getBoxByOpenIndex = (index: number) => _.find(\r\n            sortedBoxes,\r\n            box => box.openIndex === index,\r\n        );\r\n\r\n        if (openIndex < sortedBoxes.length && openIndex >= 0) {\r\n\r\n            return this.waitTimeout(\r\n                action('onPrepareBox', () => {\r\n                    const openingBox = getBoxByOpenIndex(openIndex);\r\n\r\n                    this.openingBox = openingBox;\r\n\r\n                    this.emit(this.EventKeys.beginOpenBox, openIndex, openingBox);\r\n\r\n                    return this.waitTimeout(\r\n                        action('onBoxOpen', () => {\r\n\r\n                            if (this.isPaused) {\r\n                                return false;\r\n                            }\r\n\r\n\r\n                            this.finishedOpenIndex = openIndex;\r\n\r\n                            this.emit(this.EventKeys.finishOpenBox, openIndex, openingBox);\r\n\r\n                            if (openingBox) {\r\n                                const heroPos = openingBox.heroPos as PositionType;\r\n\r\n                                if (openingBox.score === 0) {\r\n                                    this.playerScores[heroPos] = 0;\r\n                                    this.boomedHeroId = openingBox.heroId;\r\n                                    playSound(Sounds.boom);\r\n                                } else {\r\n                                    playSound(Sounds.addScore);\r\n                                    const oldScore = this.playerScores[heroPos];\r\n                                    this.playerScores[heroPos] = oldScore\r\n                                        + openingBox.score;\r\n                                    this.boomedHeroId = null;\r\n                                }\r\n                            }\r\n\r\n                            return this.waitTimeout(\r\n                                () => this.playBoxByIndex(openIndex + 1),\r\n                                OpeningDuration,\r\n                            );\r\n\r\n                        }),\r\n                        OpenBoxTimeSpan,\r\n                    );\r\n                }),\r\n                PrepareBoxTimeSpan,\r\n            );\r\n\r\n\r\n        }\r\n\r\n        this.openIndex = -1;\r\n        this.openingBox = null;\r\n\r\n        return true;\r\n\r\n    }\r\n\r\n    @action\r\n    public clearBoomer() {\r\n        this.boomedHeroId = null;\r\n    }\r\n\r\n    public waitTimeout(actionFn: () => any, timeout = OpeningDuration) {\r\n        return new Promise((resolve) => {\r\n            // @ts-ignore\r\n            this.playerTimeout = setTimeout(() => resolve(actionFn()), timeout * this.fasterTimes);\r\n        });\r\n    }\r\n\r\n    @action\r\n    public toggleFaster() {\r\n        if (this.fasterTimes === 1) {\r\n            this.fasterTimes = 0.2;\r\n        } else {\r\n            this.fasterTimes = 1;\r\n        }\r\n    }\r\n\r\n    @action\r\n    public pause = () => {\r\n        this.isPaused = true;\r\n        this.clearPlayerTimeout();\r\n    };\r\n\r\n    @action\r\n    public resume = () => {\r\n        this.isPaused = false;\r\n        this.playBoxByIndex(this.openIndex);\r\n    };\r\n\r\n    @action\r\n    public resetPlayer() {\r\n        this.fasterTimes = 1;\r\n        this.gameRecord = null;\r\n        this.openingBox = null;\r\n        this.openIndex = -1;\r\n        this.finishedOpenIndex = -1;\r\n        this.isPaused = false;\r\n        this.boomedHeroId = null;\r\n        this.playerScores = getInitialScores();\r\n        this.clearPlayerTimeout();\r\n    }\r\n\r\n    @action\r\n    public quit() {\r\n        this.resetPlayer();\r\n        this.removeAll();\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onBeginOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.beginOpenBox, fn);\r\n    }\r\n\r\n    /** @param {function(openIndex: Number, boxInfo: BoxInfo)} fn */\r\n    public onFinishOpenBox(fn: () => void) {\r\n        return this.on(this.EventKeys.finishOpenBox, fn);\r\n    }\r\n\r\n    public onStart(fn: () => void) {\r\n        return this.on(this.EventKeys.start, fn);\r\n    }\r\n\r\n    public onGameEnd(fn: () => void) {\r\n        return this.on(this.EventKeys.end, fn);\r\n    }\r\n\r\n    public onPause(fn: () => void) {\r\n        return this.on(this.EventKeys.pause, fn);\r\n    }\r\n\r\n    public onResume(fn: () => void) {\r\n        return this.on(this.EventKeys.resume, fn);\r\n    }\r\n\r\n}\r\n\r\nexport const gamePlayerStore = new GamePlayerStore();\r\n","export {historyStore} from './HistoryStore';\r\nexport {gamePlayerStore} from './GamePlayerStore';\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {BoxStatus} from \"../core/openBoxConstants\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst AnimatedClassNames = {\r\n    [BoxStatus.opening]: 'animated swing active',\r\n};\r\n\r\ntype BoxInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\ntype BoxProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n    boxIndex: number;\r\n    openIndex: number;\r\n    score: number;\r\n    boxCover: number;\r\n};\r\n\r\n@inject(\r\n    (stores: BoxInjectedStores) => ({\r\n        gamePlayerStore: stores.gamePlayerStore,\r\n    }),\r\n)\r\n@observer\r\nexport class Box extends React.Component<BoxProps> {\r\n\r\n    static defaultProps = {\r\n        boxCover: 0,\r\n    };\r\n\r\n    getStatus() {\r\n        const { boxIndex, gamePlayerStore } = this.props;\r\n        const isOpened = this.isBoxOpened();\r\n        const isOpening = gamePlayerStore && gamePlayerStore.openingBox\r\n            && (gamePlayerStore.openingBox.boxIndex === boxIndex);\r\n\r\n        if (isOpened) {\r\n            return BoxStatus.opened;\r\n        }\r\n\r\n        return isOpening ? BoxStatus.opening : BoxStatus.closed;\r\n    }\r\n\r\n    getAnimatedClassByStatus(status: string) {\r\n        const { gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore || gamePlayerStore.isPaused) {\r\n            return '';\r\n        }\r\n\r\n        return AnimatedClassNames[status] || '';\r\n    }\r\n\r\n    isBoxOpened = () => {\r\n        const { openIndex, gamePlayerStore } = this.props;\r\n        if (!gamePlayerStore) {\r\n            return false;\r\n        }\r\n\r\n        return openIndex <= gamePlayerStore.finishedOpenIndex;\r\n    };\r\n\r\n    render() {\r\n        const { score, boxCover } = this.props;\r\n        const isBoomer = score === 0;\r\n        const status = this.getStatus();\r\n        const boomClassName = isBoomer ? 'boom' : '';\r\n        const scoreClassName = score >= 5 ? 'largerThen5' : 'lessThen5';\r\n        const boxCoverClassName = `box${boxCover}`;\r\n        const boxClassName = `${boomClassName} ${scoreClassName} score score${score}`;\r\n\r\n        const boxWrapperClassName = `${boxCoverClassName}`;\r\n        const boxSize = useVPStyle({\r\n            width: 100,\r\n            height: 132,\r\n        });\r\n\r\n        return (\r\n            <div\r\n                className={`box box-${status} ${boxWrapperClassName} ${this.getAnimatedClassByStatus(status)} xk`}\r\n                style={boxSize}\r\n            >\r\n                {!this.isBoxOpened() ? null : (\r\n                    <div className={boxClassName}>\r\n                        {isBoomer ? null : ` `}\r\n                    </div>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, {useEffect} from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport _ from 'lodash';\r\nimport {Table} from \"@web3game/common/components/Table\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameRecord} from \"@web3game/typings/openBox\";\r\nimport {useVPStyle} from \"@web3game/common/components/viewPort/getElStyle\";\r\nimport {Box} from \"./Box\";\r\nimport {getSortedBoxes} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\n\r\nconst ColumnNum = 4;\r\n\r\nconst range4 = () => _.range(4);\r\n\r\ntype BoxGridProps = {\r\n    gameRecord?: GameRecord;\r\n};\r\n\r\nexport function BoxGridPure({ gameRecord }: BoxGridProps) {\r\n\r\n    useEffect(() => {\r\n        if (gameRecord && !gameRecord.play) {\r\n            setTimeout(() => alert(getLang().GAME_IS_NOT_READY), 300);\r\n        }\r\n    }, [gameRecord && gameRecord.id]);\r\n\r\n    const renderColumn = (rowIndex: number, columnIndex: number) => {\r\n        const boxIndex = rowIndex * ColumnNum + columnIndex;\r\n        const boxInfo = gameRecord ? getSortedBoxes(gameRecord)[boxIndex] : null;\r\n\r\n        if (!boxInfo) {\r\n            return (\r\n                <td key={columnIndex} />\r\n            );\r\n        }\r\n\r\n        return (\r\n            <td key={columnIndex}>\r\n                <Box\r\n                    boxIndex={boxIndex}\r\n                    openIndex={boxInfo.openIndex}\r\n                    score={boxInfo.score}\r\n                    boxCover={_.random(1, 3)}\r\n                />\r\n            </td>\r\n        );\r\n    };\r\n\r\n    const renderRow = (rowIndex: number) => (\r\n        <tr key={rowIndex}>\r\n            {range4().map(colIndex => renderColumn(rowIndex, colIndex))}\r\n        </tr>\r\n    );\r\n\r\n    const tableSize = useVPStyle({\r\n        width: 320,\r\n    });\r\n\r\n    return (\r\n        <Table\r\n            className=\"boxGrid\"\r\n            style={tableSize}\r\n        >\r\n            {range4().map(renderRow)}\r\n        </Table>\r\n    );\r\n}\r\n\r\ntype BoxGridInjectedStores = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\n\r\nexport const BoxGrid = inject(\r\n    ({ gamePlayerStore }: BoxGridInjectedStores) => (\r\n        { gameRecord: gamePlayerStore && gamePlayerStore.gameRecord }\r\n    ),\r\n)(BoxGridPure);\r\n","import React from 'react';\r\nimport {inject, observer} from \"mobx-react\";\r\nimport {PlayerInfo} from \"@web3game/common/components\";\r\nimport {GameRecord, PositionType} from \"@web3game/typings/openBox\";\r\nimport {getSortedHeroList} from \"../core/gameHelper\";\r\nimport {GamePlayerStore} from \"../stores/GamePlayerStore\";\r\nimport {BoxGrid} from \"./BoxGrid\";\r\n\r\nexport type BoxGameDeskProps = {\r\n    gameRecord?: GameRecord;\r\n    playerScores?: object;\r\n    openIndex?: number;\r\n};\r\n\r\nexport function BoxGameDeskPure(\r\n    {\r\n        gameRecord,\r\n        playerScores,\r\n        openIndex = -1,\r\n    }: BoxGameDeskProps\r\n) {\r\n    const heroList = gameRecord ? getSortedHeroList(gameRecord) : [];\r\n    const realTimeScore = (pos: PositionType) => {\r\n        if (!gameRecord || !playerScores) {\r\n            return 0;\r\n        }\r\n\r\n        return (playerScores as any)[pos];\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {heroList.map(\r\n                hero => (\r\n                    <PlayerInfo\r\n                        key={hero.id}\r\n                        imageIndex={hero.imageIndex}\r\n                        score={realTimeScore(hero.pos)}\r\n                        pos={hero.pos}\r\n                        isActive={openIndex % 4 === hero.index}\r\n                    />\r\n                ),\r\n            )}\r\n\r\n            <BoxGrid />\r\n        </>\r\n    );\r\n}\r\n\r\nexport type BoxGameDeskInjectedProps = {\r\n    gamePlayerStore?: GamePlayerStore;\r\n};\r\n\r\nexport const BoxGameDesk = inject(\r\n    ({ gamePlayerStore }: BoxGameDeskInjectedProps) => ({\r\n        gameRecord: gamePlayerStore ? gamePlayerStore.gameRecord : null,\r\n        playerScores: gamePlayerStore ? gamePlayerStore.playerScores : {},\r\n        openIndex: gamePlayerStore ? gamePlayerStore.openIndex : -1,\r\n    }),\r\n)(observer(BoxGameDeskPure));\r\n","import {CSSProperties, useContext} from \"react\";\r\nimport _ from 'lodash';\r\nimport {ViewPortSizeContext} from \"./viewPortSizeHelper\";\r\n\r\nexport function useVPStyle(styles: CSSProperties) {\r\n    const { finalRatio } = useContext(ViewPortSizeContext);\r\n    const getStyleVal = (val: number) => (val ? val * finalRatio : 0);\r\n\r\n    return _.reduce(\r\n        styles,\r\n        (result: any, value: any, key: string) => {\r\n\r\n            if (value && _.isNumber(value)) {\r\n                /* eslint no-param-reassign:0 */\r\n                result[key] = getStyleVal(value);\r\n            }\r\n\r\n            return result;\r\n        },\r\n        styles,\r\n    );\r\n}\r\n","import _ from 'lodash';\r\nimport {Howl} from 'howler';\r\nimport {BoxInfo, GameRecord, HeroInfo, PositionType} from \"@web3game/typings/openBox\";\r\n\r\n\r\nexport const Sounds = {\r\n    boom: require('../statics/sounds/oh_no.mp3'),\r\n    addScore: require('../statics/sounds/add-score.mp3'),\r\n    result: require('../statics/sounds/result.wav'),\r\n};\r\n\r\nexport function playSound(soundSrc: string) {\r\n    const sound = new Howl({\r\n        src: [soundSrc],\r\n    });\r\n\r\n    sound.play();\r\n\r\n}\r\n\r\nexport function getSortedHeroList(gameRecord: GameRecord) {\r\n    const targetSelfPosition = 2;\r\n    const {currentUserId, playerAddrs, playerScores, playerAwards = []} = gameRecord;\r\n\r\n    const currentUserIdIndex = playerAddrs.indexOf(currentUserId);\r\n    const imageIndexsMap = getRandomUsersImageIndex(playerAddrs);\r\n\r\n    let resortedUserIds: string[] = [];\r\n\r\n    const posDiff = currentUserIdIndex - targetSelfPosition;\r\n\r\n    if (posDiff > 0) {\r\n        (() => {\r\n            for (let i = posDiff; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(\r\n                    playerAddrs[i],\r\n                );\r\n            }\r\n\r\n            for (let i = 0; i < posDiff; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else if (posDiff < 0) {\r\n        (() => {\r\n            const startMoveIndex = playerAddrs.length + posDiff;\r\n            for (let i = startMoveIndex; i < playerAddrs.length; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n\r\n            for (let i = 0; i < startMoveIndex; i++) {\r\n                resortedUserIds.push(playerAddrs[i]);\r\n            }\r\n        })();\r\n    } else {\r\n        resortedUserIds = _.cloneDeep(playerAddrs);\r\n    }\r\n\r\n    /** @returns {HeroInfo} */\r\n    const genOtherRecord = (pos: PositionType, sortedIndex: number): HeroInfo => {\r\n        const id = resortedUserIds[sortedIndex];\r\n        const index = playerAddrs.indexOf(id);\r\n        return {\r\n            id,\r\n            pos,\r\n            index,\r\n            isCurrentUser: false,\r\n            score: playerScores[index],\r\n            gain: playerAwards[index],\r\n            imageIndex: imageIndexsMap[id],\r\n        };\r\n    };\r\n\r\n    /** @returns {HeroInfo} */\r\n    const getCurrentRecord = (id: string): HeroInfo => {\r\n        const index = playerAddrs.indexOf(id);\r\n\r\n        return {\r\n            id,\r\n            pos: PositionType.bottom,\r\n            index,\r\n            isCurrentUser: true,\r\n            score: playerScores[index],\r\n            imageIndex: imageIndexsMap[id],\r\n            gain: playerAwards[index],\r\n        };\r\n    };\r\n\r\n    return [\r\n        genOtherRecord(PositionType.top, 0),\r\n        genOtherRecord(PositionType.right, 1),\r\n        getCurrentRecord(currentUserId),\r\n        genOtherRecord(PositionType.left, 3),\r\n    ];\r\n}\r\n\r\n\r\nexport function getSortedBoxes(gameRecord: GameRecord): BoxInfo[] {\r\n    const {scores, sequencs, playerAddrs} = gameRecord;\r\n    const sortedHeroList = getSortedHeroList(gameRecord);\r\n\r\n    return scores.map((score: number, boxIndex: number) => {\r\n\r\n        let openIndex = sequencs.indexOf(boxIndex);\r\n\r\n        if (openIndex === -1) {\r\n            openIndex = boxIndex;\r\n        }\r\n\r\n        const playerIndex = openIndex % 4;\r\n\r\n        const heroId = playerAddrs[playerIndex];\r\n\r\n        const heroInfo = _.find(sortedHeroList, hero => hero.id === heroId);\r\n\r\n        return {\r\n            boxIndex,\r\n            score,\r\n            openIndex,\r\n            heroId,\r\n            heroIndex: heroInfo ? heroInfo.index : -1,\r\n\r\n            /** @type {HeroInfo} */\r\n            heroInfo,\r\n            heroPos: heroInfo ? heroInfo.pos : '',\r\n        };\r\n    });\r\n}\r\n\r\n\r\nconst userImageIndexCache: { [name: string]: any } = {};\r\n\r\n/**\r\n * returns {Object} // { userId1: 1, userId2: 9, userId3: 3, userId4: 5}\r\n * */\r\nexport function getRandomUsersImageIndex(userIds: string[]): { [name: string]: any } {\r\n    const getRandomValue = () => _.random(1, 12);\r\n\r\n    const getRandomValueNotIn = (values: number[]) => {\r\n        let value: number;\r\n\r\n        do {\r\n            value = getRandomValue();\r\n        } while (values.indexOf(value) >= 0);\r\n\r\n        return value;\r\n    };\r\n\r\n    return _.reduce(\r\n        userIds,\r\n        (im: { [name: string]: number }, userId: string) => {\r\n            const imageIndexMap = im;\r\n\r\n            let imageIndex = userImageIndexCache[userId];\r\n            const prevImageIndexList = Object.values(imageIndexMap) as number[];\r\n\r\n            if (imageIndex === undefined || prevImageIndexList.indexOf(imageIndex) >= 0) {\r\n                imageIndex = getRandomValueNotIn(prevImageIndexList);\r\n            }\r\n\r\n            imageIndexMap[userId] = imageIndex;\r\n\r\n            userImageIndexCache[userId] = imageIndex;\r\n\r\n            return imageIndexMap;\r\n        },\r\n        {},\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport enum PreferMode {\r\n    width = 'width',\r\n    height = 'height',\r\n}\r\n\r\nexport const initialSizeInfo = {\r\n    perfectHeight: 0,\r\n    perfectWidth: 0,\r\n\r\n\r\n    preferMaxWidth: 0,\r\n    preferMaxHeight: 0,\r\n\r\n    winWidth: 0,\r\n    winHeight: 0,\r\n\r\n    widthHeightRatio: 1,\r\n\r\n    adjustedWidth: 0,\r\n    adjustedHeight: 0,\r\n\r\n    finalRatio: 1,\r\n\r\n    preferMode: PreferMode.width,\r\n};\r\n\r\nexport type InitialSizeInfo = typeof initialSizeInfo;\r\n\r\nexport const ViewPortSizeContext = React.createContext(initialSizeInfo);\r\n\r\n\r\nexport const getWidthHeightRatio = (width: number, height: number) => width / height;\r\n\r\nexport const getWinSize = () => ({\r\n    winHeight: window.innerHeight,\r\n    winWidth: window.innerWidth,\r\n});\r\n\r\n\r\n\r\ntype AdjustedSizeInfoType = Partial<InitialSizeInfo> & {\r\n    preferMode?: PreferMode;\r\n};\r\n\r\nexport const getAdjustedSizeInfo = (\r\n    {\r\n        perfectHeight = 0,\r\n        perfectWidth = 0,\r\n\r\n        preferMaxHeight: _preferMaxHeight,\r\n        preferMaxWidth: _preferMaxWidth,\r\n\r\n\r\n        winWidth = 0,\r\n        winHeight = 0,\r\n        preferMode = PreferMode.width,\r\n    }: AdjustedSizeInfoType\r\n): AdjustedSizeInfoType => {\r\n    const widthHeightRatio = getWidthHeightRatio(perfectWidth, perfectHeight);\r\n    let preferMaxHeight = _preferMaxHeight || perfectHeight;\r\n    const preferMaxWidth = _preferMaxWidth || perfectWidth;\r\n\r\n    let adjustedWidth = perfectWidth;\r\n    let adjustedHeight = perfectHeight;\r\n    let resizeRatioByWidth = perfectWidth / winWidth;\r\n    let finalRatio = 1;\r\n\r\n    if (preferMode === PreferMode.width) {\r\n        if (preferMaxWidth < winWidth) {\r\n            adjustedWidth = preferMaxWidth;\r\n        } else {\r\n            adjustedWidth = winWidth;\r\n        }\r\n\r\n\r\n        resizeRatioByWidth = adjustedWidth / perfectWidth;\r\n\r\n        adjustedHeight = perfectHeight * resizeRatioByWidth;\r\n        preferMaxHeight = perfectHeight * resizeRatioByWidth;\r\n        finalRatio = resizeRatioByWidth;\r\n    }\r\n\r\n\r\n    return {\r\n        adjustedWidth,\r\n        adjustedHeight,\r\n\r\n        widthHeightRatio,\r\n\r\n        preferMaxWidth,\r\n        preferMaxHeight,\r\n\r\n        finalRatio,\r\n\r\n        preferMode,\r\n    };\r\n};\r\n","import React, {useEffect, useState} from 'react';\r\nimport _ from 'lodash';\r\nimport posed, {PoseGroup} from 'react-pose';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    title: string;\r\n    className?: string;\r\n    onQuit?: () => void;\r\n    children: React.ReactElement | React.ReactElement[];\r\n};\r\n\r\nconst Modal = posed.div({\r\n    enter: {\r\n        y: 0,\r\n        opacity: 1,\r\n        delay: 300,\r\n        transition: {\r\n            y: { type: 'spring', stiffness: 1000, damping: 15 },\r\n            default: { duration: 300 }\r\n        }\r\n    },\r\n    exit: {\r\n        y: 50,\r\n        opacity: 0,\r\n        transition: { duration: 150 }\r\n    }\r\n});\r\n\r\nconst Backdrop = posed.div({\r\n    enter: { opacity: 0.8 },\r\n    exit: { opacity: 0 }\r\n});\r\n\r\nexport function PopupPure(\r\n    {\r\n        title,\r\n        className = '',\r\n        onQuit,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    const [isVisible, setIsVisible] = useState(false);\r\n    useEffect(() => {\r\n        setIsVisible(true);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={`popup ${className}`}>\r\n            <PoseGroup>\r\n                {\r\n                    isVisible && [\r\n                        (\r\n                            <Backdrop\r\n                                key=\"popupBackdrop\"\r\n                                className=\"popupBackdrop\"\r\n                                onClick={onQuit}\r\n                                onTouchEnd={onQuit}\r\n                                onKeyDown={() => undefined}\r\n                                role=\"button\"\r\n                                tabIndex={0}\r\n                                aria-label=\"click to close popup\"\r\n                            />\r\n                        ),\r\n                        (\r\n                            <Modal key=\"popupWrapper\" className=\"popupWrapper\">\r\n                                <div className=\"popupContainer\">\r\n                                    <div className=\"popupHeader\">\r\n                                        <button\r\n                                            onClick={onQuit}\r\n                                            onTouchEnd={onQuit}\r\n                                            type=\"button\"\r\n                                            className=\"popupQuitButton\"\r\n                                        >\r\n                                            Quit\r\n                                        </button>\r\n                                        <h2>{title}</h2>\r\n                                    </div>\r\n                                    <div className=\"popupBody\">\r\n                                        <div className=\"popupContent\">\r\n                                            {children}\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </Modal>\r\n                        )\r\n                    ]\r\n                }\r\n            </PoseGroup>\r\n        </div>\r\n    );\r\n}\r\n\r\ntype PopupProps = { gameUIStore: GameUIStore };\r\n\r\nexport const Popup = inject(({ gameUIStore }: PopupProps, { onQuit }) => ({\r\n    onQuit: _.debounce(() => {\r\n        if (onQuit) {\r\n            onQuit();\r\n        }\r\n\r\n        gameUIStore.setVisiblePopup(PopupNames.none);\r\n    }, 50),\r\n}))(PopupPure);\r\n","import React, {CSSProperties} from 'react';\r\n\r\nexport type TableProps = {\r\n    children?: React.ReactElement | React.ReactElement[] | null;\r\n    tHead?: React.ReactElement | React.ReactElement[];\r\n    className?: string;\r\n    bodyClassName?: string;\r\n    style?: CSSProperties;\r\n};\r\n\r\n\r\nexport function Table(\r\n    {\r\n        tHead,\r\n        children,\r\n        className = \"\",\r\n        bodyClassName = \"\",\r\n        style,\r\n    }: TableProps\r\n) {\r\n    return (\r\n        <table className={className} style={style}>\r\n            <thead>{tHead}</thead>\r\n            <tbody className={bodyClassName}>{children}</tbody>\r\n        </table>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\ntype HistoryButtonProps = {\r\n    onShowHistory: () => void;\r\n};\r\n\r\nexport function HistoryButton(\r\n    {\r\n        onShowHistory,\r\n    }: HistoryButtonProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n    return (\r\n        <button\r\n            className=\"gameHistoryButton\"\r\n            onClick={onShowHistory}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().OPEN_BOX_PAGE.HISTORY}\r\n        </button>\r\n    );\r\n}\r\n\r\nexport default React.memo(HistoryButton);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {getLang} from \"@web3game/lang\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {GameUIScene} from \"../../utils/constants\";\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\ntype QuitGameButtonProps = {\r\n    onQuitPlayer?: () => void;\r\n    onQuitGame?: () => void;\r\n    isPlayerActive: boolean;\r\n};\r\n\r\nexport function QuitGameButtonPure(\r\n    {\r\n        onQuitPlayer,\r\n        onQuitGame,\r\n        isPlayerActive,\r\n    }: QuitGameButtonProps,\r\n) {\r\n    const onClick = isPlayerActive ? onQuitPlayer : onQuitGame;\r\n\r\n    if (!onClick) {\r\n        return null;\r\n    }\r\n\r\n    const buttonSize = useVPStyle({\r\n        paddingTop: 16,\r\n        fontSize: 28,\r\n        width: 280,\r\n        height: 120,\r\n    });\r\n\r\n\r\n    return (\r\n        <button\r\n            className=\"gameQuitButton\"\r\n            onClick={onClick}\r\n            type=\"button\"\r\n            style={buttonSize}\r\n        >\r\n            {getLang().BACK}\r\n        </button>\r\n    );\r\n}\r\n\r\nQuitGameButtonPure.defaultProps = {\r\n    isPlayerActive: false,\r\n};\r\n\r\ntype QuitGameButtonInjectedProps = {\r\n    gameUIStore?: GameUIStore;\r\n    onQuitGame: () => void;\r\n    onQuitPlayer: () => void;\r\n};\r\n\r\nexport const QuitGameButton = inject(\r\n    (\r\n        { gameUIStore }: QuitGameButtonInjectedProps,\r\n    ) => {\r\n        const isPlayerActive = gameUIStore && gameUIStore.scene === GameUIScene.gamePlayer;\r\n\r\n        return {\r\n            isPlayerActive,\r\n        };\r\n    },\r\n)(QuitGameButtonPure);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../../stores/GameUIStore\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\ntype PopupPureProps = {\r\n    name: PopupNames;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function PopupRendererPure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: PopupPureProps,\r\n) {\r\n    return isActive ? children() : null;\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const PopupRenderer = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.visiblePopup === name,\r\n    }),\r\n)(PopupRendererPure);\r\n","import React, {Fragment, useState} from 'react';\r\nimport {PopupRenderer} from \"./PopupRenderer\";\r\nimport {PopupElement} from \"..\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\n\r\n\r\nexport type PopupManagerProps = {\r\n    popups?: PopupElement[];\r\n};\r\n\r\nconst PopupManagerContext = React.createContext({});\r\n\r\nfunction usePopupManager(popupsList: PopupElement[]) {\r\n    const [popups, setPopups] = useState(popupsList);\r\n\r\n    return {\r\n        popups,\r\n        showPopup: (popup: PopupElement) => {\r\n            setPopups([\r\n                ...popups,\r\n                popup,\r\n            ]);\r\n        },\r\n        closePopup: (name: PopupNames) => {\r\n            setPopups(popups.filter((p: any) => p.name !== name));\r\n        },\r\n    };\r\n}\r\n\r\nexport function PopupManager({ popups = [] }: PopupManagerProps) {\r\n\r\n    const { showPopup, popups: popupList } = usePopupManager(popups);\r\n\r\n    return (\r\n        <PopupManagerContext.Provider value={{ showPopup }}>\r\n            <Fragment>\r\n                {\r\n                    popupList.map(({ name, renderer }) => (\r\n                        <PopupRenderer key={name} name={name}>\r\n                            {renderer}\r\n                        </PopupRenderer>\r\n                    ))\r\n                }\r\n            </Fragment>\r\n        </PopupManagerContext.Provider>\r\n    );\r\n\r\n}\r\n","import React, {useContext} from 'react';\r\nimport {HistoryButton} from \"./HistoryButton\";\r\nimport {PopupNames} from \"../../utils/constants\";\r\nimport {QuitGameButton} from \"./QuitGameButton\";\r\nimport {PopupManager} from \"../popups/PopupManger\";\r\nimport {ViewPortSizeContext} from \"../viewPort/viewPortSizeHelper\";\r\n\r\nimport BackgroundUrl from '../../styles/images/beijingtu.png';\r\nimport {useVPStyle} from \"../viewPort/getElStyle\";\r\n\r\nexport type PopupElement = { name: PopupNames; renderer: () => React.ReactElement }\r\n\r\nexport type GameLayoutProps = {\r\n    children?: React.ReactElement | React.ReactElement[];\r\n    onShowHistory: () => void;\r\n    onQuitGame?: () => void;\r\n    onQuitPlayer?: () => void;\r\n    popups?: PopupElement[];\r\n};\r\n\r\nexport function GameLayout(\r\n    {\r\n        children,\r\n        onShowHistory,\r\n        popups = [],\r\n        onQuitGame,\r\n        onQuitPlayer,\r\n    }: GameLayoutProps,\r\n) {\r\n    const {\r\n        adjustedHeight,\r\n        adjustedWidth,\r\n    } = useContext(ViewPortSizeContext);\r\n\r\n    const applicationSize = {\r\n        width: adjustedWidth,\r\n        height: adjustedHeight,\r\n    };\r\n\r\n    const gameContentStyle = useVPStyle({\r\n        paddingTop: 460,\r\n    });\r\n\r\n    return (\r\n        <div className=\"gameApplication\" style={applicationSize}>\r\n            <img src={BackgroundUrl} alt=\"background\" className=\"backgroundImage\" />\r\n            <HistoryButton onShowHistory={onShowHistory} />\r\n            <QuitGameButton\r\n                onQuitGame={onQuitGame}\r\n                onQuitPlayer={onQuitPlayer}\r\n            />\r\n            <div className=\"gameDesktop\">\r\n                <div className=\"gameDesktopContent\" style={gameContentStyle}>\r\n                    {children}\r\n                </div>\r\n            </div>\r\n\r\n            <PopupManager popups={popups} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(GameLayout);\r\n","import React from 'react';\r\nimport {useVPStyle} from \"./viewPort/getElStyle\";\r\n\r\ntype MoneySelectorPureProps = {\r\n    moneyList: any[];\r\n    onSelect: (money: number) => void;\r\n};\r\n\r\nexport function MoneySelectorPure(\r\n    {\r\n        moneyList,\r\n        onSelect,\r\n    }: MoneySelectorPureProps,\r\n) {\r\n    const buttonSize = useVPStyle({\r\n        width: 180,\r\n        height: 90,\r\n        fontSize: 24,\r\n    });\r\n\r\n    return (\r\n        <div className=\"moneySelector\">\r\n            {moneyList.map(({ money, text }) => (\r\n                <div key={money}>\r\n                    <button\r\n                        type=\"button\"\r\n                        className={`moneySelectorButton moneySelectorButton_${money}`}\r\n                        style={buttonSize}\r\n                        onClick={() => onSelect(money)}\r\n                    >\r\n                        {text}\r\n                    </button>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const MoneySelector = React.memo(MoneySelectorPure);\r\n","import React from 'react';\r\nimport {inject} from \"mobx-react\";\r\nimport {GameUIStore} from \"../stores/GameUIStore\";\r\nimport {GameUIScene} from \"../utils/constants\";\r\n\r\ntype ScenePureProps = {\r\n    name: GameUIScene;\r\n    isActive?: boolean;\r\n    children: () => React.ReactElement;\r\n};\r\n\r\nexport function ScenePure(\r\n    {\r\n        isActive,\r\n        children,\r\n    }: ScenePureProps,\r\n) {\r\n    if (!isActive) {\r\n        return null;\r\n    }\r\n\r\n    return children();\r\n}\r\n\r\ntype SceneInjectorStores = { gameUIStore: GameUIStore };\r\n\r\nexport const Scene = inject(\r\n    ({ gameUIStore }: SceneInjectorStores, { name }) => ({\r\n        isActive: gameUIStore.scene === name,\r\n    }),\r\n)(ScenePure);\r\n","export * from './layouts/GameLayout';\r\nexport * from './layouts/HistoryButton';\r\nexport * from './HistoryListPopup';\r\nexport * from './MoneySelector';\r\nexport * from './PlayerInfo';\r\nexport * from './Scene';\r\nexport * from './popups/PopupRenderer';\r\n"],"sourceRoot":""}